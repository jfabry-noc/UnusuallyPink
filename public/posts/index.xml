<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Unusually Pink</title>
    <link>https://hugo.unusually.pink/posts/</link>
    <description>Recent content in Posts on Unusually Pink</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2021</copyright>
    <lastBuildDate>Fri, 12 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hugo.unusually.pink/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Swapping Mirrors On Manjaro Linux</title>
      <link>https://hugo.unusually.pink/swapping-mirrors-on-manjaro-linux/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/swapping-mirrors-on-manjaro-linux/</guid>
      <description>One of my favorite aspects of Linux ever since my first Ubuntu 6.06 installation has been the software repository. Back in 2006, installing the overwhelming majority of the software I might need from a supported repository stood in stark contrast with the Windows XP method of searching the web for the software you wanted, finding a download link that didn&amp;rsquo;t seem shady, and then hoping for the best.
Repositories are frequently hosted by the maintainer of a Linux distribution (e.</description>
      <content>&lt;p&gt;One of my favorite aspects of Linux ever since my first Ubuntu 6.06 installation has been the software repository. Back in 2006, installing the overwhelming majority of the software I might need from a supported repository stood in stark contrast with the Windows XP method of searching the web for the software you wanted, finding a download link that didn&amp;rsquo;t &lt;em&gt;seem&lt;/em&gt; shady, and then hoping for the best.&lt;/p&gt;
&lt;p&gt;Repositories are frequently hosted by the maintainer of a Linux distribution (e.g. &lt;a href=&#34;https://ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; has official repos hosted by &lt;a href=&#34;https://canonical.com/&#34;&gt;Canonical&lt;/a&gt;, &lt;a href=&#34;https://getfedora.org/&#34;&gt;Fedora&lt;/a&gt; has official repos hosted by &lt;a href=&#34;https://www.redhat.com/en&#34;&gt;Red Hat&lt;/a&gt;, etc.) That being said, often times repositories are mirrored by service providers (e.g. &lt;a href=&#34;https://www.linode.com/&#34;&gt;Linode&lt;/a&gt; hosts many mirrors so that repository content can be served out of the same datacenter as the virtual machines), Linux interest groups, and other community members. This is great because it allows for the repos to be geographically diverse. Pulling downloads from a repository hosted in the same continent, for example, will typically show a marked improvement over using one on the opposite side of the planet.&lt;/p&gt;
&lt;p&gt;The downside to this is that repos occasionally become unavailable for whatever reason. This happened to be recently, as I went to update one of my &lt;a href=&#34;https://manjaro.org/&#34;&gt;Manjaro&lt;/a&gt; installs via:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Syu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After sitting for an unusual amount of time, I was told that a connection couldn&amp;rsquo;t be established to my current mirror, which happened to be: &lt;strong&gt;us.mirrors.fossho.st&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s worth noting that, at least on Manjaro, your mirror is only displayed when the connection fails. If the connection is successful, you only see the results of the update check. I could have simply tried again later, but without knowing how long the outage would be I instead decided to hunt for how to swap to a different mirror. Fortunately, the process is extremely easy. The current mirrors are contained in the file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The file contains a list of mirrors, with a comment above each indicating the country. At the very top of my list was my current mirror of &lt;strong&gt;us.mirrors.fossho.st&lt;/strong&gt;. I simply added a &lt;code&gt;#&lt;/code&gt; to the start of the line for it, commenting it out. I next ran a full package sync to make sure I didn&amp;rsquo;t have anything cached locally that wouldn&amp;rsquo;t be reflected on a different mirror:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Syyu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This picked a different mirror, and everything worked as expected. The problem was solved. Not satisfied with leaving things at that, though, I decided to see if I could tell of any indicators of a mirror being down. I first confirmed that I could ping &lt;strong&gt;us.mirrors.fossho.st&lt;/strong&gt;. Likewise, I could connect to it over port 80 (HTTP.) However, I couldn&amp;rsquo;t connect to it over port 443 (HTTPS.) I don&amp;rsquo;t actually know what mechanism is used for deliver updates, but I feel like it&amp;rsquo;s &lt;em&gt;very&lt;/em&gt; likely that HTTPS is used; I couldn&amp;rsquo;t see HTTP being the norm given that you wouldn&amp;rsquo;t be able to ensure the updates hadn&amp;rsquo;t been tampered with. A random port is always possible, though.&lt;/p&gt;
&lt;p&gt;For the sake of comparison, I opened &lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt; back up and searched for another mirror in the US. &lt;strong&gt;mirror.dacentec.com&lt;/strong&gt; was the first hit. I repeated the same process and confirmed that I &lt;em&gt;could&lt;/em&gt; reach it on both ports 80 and 443.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/nmap_mirrors_full.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It seems like 443 is the key. It was only after doing this, though, that I realized a project like Manjaro likely has a status page for their mirrors. &lt;a href=&#34;https://repo.manjaro.org/&#34;&gt;I wasn&amp;rsquo;t disappointed.&lt;/a&gt; Checking this did appear to indicate that my original mirror is experiencing issues. Incidentally, the baseline mirror I tested is included in the same screenshot, and it&amp;rsquo;s shown to be up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/mirror_status-1024x139.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Upgrading Star Labs Firmware On Manjaro Linux</title>
      <link>https://hugo.unusually.pink/upgrading-star-labs-firmware-on-manjaro-linux/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/upgrading-star-labs-firmware-on-manjaro-linux/</guid>
      <description>As you may recall, I purchased a new Linux laptop from Star Labs a while back. It’s a solid little device, though I admittedly haven’t been using it as much as I anticipated due to my increased reliance on my iPads. For more information on that, look for the new Same Shade Of Difference podcast episode that should be dropping very soon. That being said, because I don’t have the worst operational security ever, I do update my laptop every time I happen to see that something is pending.</description>
      <content>&lt;p&gt;As you may recall, I &lt;a href=&#34;https://unusually.pink/star-lite-mk-iii/&#34;&gt;purchased a new Linux laptop from Star Labs&lt;/a&gt; a while back. It’s a solid little device, though I admittedly haven’t been using it as much as I anticipated due to my increased reliance on my iPads. For more information on that, look for the new &lt;a href=&#34;https://sameshadeofdifference.com&#34;&gt;Same Shade Of Difference&lt;/a&gt; podcast episode that should be dropping &lt;em&gt;very&lt;/em&gt; soon. That being said, because I don’t have the worst operational security ever, I do update my laptop every time I happen to see that something is pending. Given that I run &lt;a href=&#34;https://manjaro.org&#34;&gt;Manjaro Linux&lt;/a&gt;, that tends to happen frequently. Manjaro is what’s known as an evergreen Linux distribution. It uses a rolling release cycle, meaning that there are no new “major” releases of the OS. For example, there’s no equivalent in Manjaro of moving from Ubuntu 20.04 to Ubuntu 20.10. Occasionally the maintainers spin off a new .iso with updated packages, but that’s just to save users from having to upgrade an insane number of packages when they do a fresh installation.&lt;/p&gt;
&lt;p&gt;While I’ve been diligent about upgrading my OS and my Linux kernels (which Manjaro also provides a nice manager for), I’ve neglected to upgrade my firmware. Fortunately, Star Labs makes this process extremely simple. All of their firmware is published to &lt;a href=&#34;https://github.com/StarLabsLtd/firmware?utm_campaign=9th%20March%202020%20coreboot%20MK%20III%20%28TQpHxp%29&amp;amp;utm_medium=email&amp;amp;utm_source=Newsletter&amp;amp;_ke=eyJrbF9jb21wYW55X2lkIjogIlBjaGtVQyIsICJrbF9lbWFpbCI6ICJqamZhYnJ5QHByb3Rvbm1haWwuY29tIn0%3D&#34;&gt;their GitHub account&lt;/a&gt;. There’s no need to actually keep tabs on that if you don’t want to, though, because Star Labs also sends periodic emails announcing firmware updates for their devices. I obviously can’t speak to how deep into the lifecycle of each device these may go, but at least for the time being it’s extremely helpful.&lt;/p&gt;
&lt;p&gt;Even better, when it comes to installing firmware there’s a dedicated utility for it. They cover the &lt;a href=&#34;https://support.starlabs.systems/articles/installing-updates-from-the-lvfs?utm_campaign=9th%20March%202020%20coreboot%20MK%20III%20%28TQpHxp%29&amp;amp;utm_medium=email&amp;amp;utm_source=Newsletter&amp;amp;_ke=eyJrbF9jb21wYW55X2lkIjogIlBjaGtVQyIsICJrbF9lbWFpbCI6ICJqamZhYnJ5QHByb3Rvbm1haWwuY29tIn0%3D&#34;&gt;gamut of options on their support site&lt;/a&gt; since they support a large number of Linux variants, but for Manjaro you just need to start by installing a couple of additional packages:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo pacman -Sy fwupd gnome-firmware
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I realized after the fact that I probably &lt;em&gt;didn’t&lt;/em&gt; need &lt;strong&gt;gnome-firmware&lt;/strong&gt; since I’m unlikely to ever use the GUI for this, but it’s not as though the application takes up a large degree of space. Once the packages are installed, the next step is to check for any new firmware.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo fwupdmgr refresh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This should report back if there are new firmware updates. In my case, it reported firmware updates for 2 items, one of which was 3 revisions out of date. Yikes! I kicked off the firmware upgrade via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo fwupdmgr update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It’s worth mentioning that the system will complain if you run the above command without having a power source connected since, generally, upgrading firmware and losing power in the middle of the process is a recipe for bricking your device. If power isn’t connected, though, it’ll very smartly prompt you to connect power and retry.&lt;/p&gt;
&lt;p&gt;After the installation kicks off, the device will need to reboot. After the reboot, you’ll land in the firmware itself and be prompted to confirm the upgrades you’re about to apply. Use the arrow keys to move to the bottom and apply the pending changes (they’ll be pending by default.) This may take some time, and in my case the firmware application would move from 0% to 100% multiple times without any indication it was at different stages or anything like that. I recommend getting some coffee and letting your device do its thing. Once the upgrades are fully completed, you’ll be prompted to hit literally any key to kick off another reboot. This reboot will take noticeably longer than a normal reboot, and you’ll spend a decent amount of time staring at a black screen before you even see the Star Labs logo appear like you normally would during the boot cycle. Patience is a virtue, so just let the device do its thing. Eventually you should see the login screen you know and love.&lt;/p&gt;
&lt;p&gt;At that point, just log back in and everything should be running as expected with the new firmware. If you want to be certain, running&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;fwupdmgr refresh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;hellip; again should confirm there are no longer any pending firmware upgrades. It’s also worth mentioning that, during the upgrade process, many peripherals may end up being disconnected if the device is docked or anything like that. In my case the laptop was running standalone with nothing but AC power connected. The upgrade utility also very kindly warns you of this ahead of time, so just be on the lookout for the messages it gives you as you go through the upgrade process. The tl;dr is that if you read the output given to you by &lt;strong&gt;fwupdmgr&lt;/strong&gt;, everything should go smoothly.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Enable Directory Listing On Specific Directory With Nginx</title>
      <link>https://hugo.unusually.pink/enable-directory-listing-on-specific-directory-with-nginx/</link>
      <pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/enable-directory-listing-on-specific-directory-with-nginx/</guid>
      <description>Note: In the sample below, I&amp;rsquo;m using Ubuntu Linux as the host for my web server. The instructions should be the same for other flavors of Linux, though the path to your Nginx sites configuration files may be different.
Generally when you navigate to a website, such as https://unusually.pink/, you don&amp;rsquo;t actually get to see the files which live on the server at the location hosting all of the HTML, JavaScript, CSS, and other goodies for the site.</description>
      <content>&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In the sample below, I&amp;rsquo;m using Ubuntu Linux as the host for my web server. The instructions should be the same for other flavors of Linux, though the path to your Nginx sites configuration files may be different.&lt;/p&gt;
&lt;p&gt;Generally when you navigate to a website, such as &lt;a href=&#34;https://unusually.pink/&#34;&gt;https://unusually.pink/&lt;/a&gt;, you don&amp;rsquo;t actually get to see the files which live on the server at the location hosting all of the HTML, JavaScript, CSS, and other goodies for the site. Instead, the web server software will be configured to look for specific files in each folder, such as &lt;code&gt;index.html&lt;/code&gt;, and render those. In some instances, however, you may actually &lt;em&gt;want&lt;/em&gt; to allow someone to browser the files in a directory. This was the situation I found myself in a few days ago for a skunkworks project at work. I already had a server set up running Nginx, and I just needed to expose a particular directory.&lt;/p&gt;
&lt;p&gt;Most searches I did appeared fairly straightforward. The easiest way to do this is to define the &lt;code&gt;autoindex&lt;/code&gt; parameter inside of a &lt;code&gt;location&lt;/code&gt; block of the site&amp;rsquo;s configuration file at: &lt;code&gt;/etc/nginx/sites-available&lt;/code&gt;. I initially did that and had something that looked like this. Note that these are only the relevant pieces for this post, and this is &lt;em&gt;not&lt;/em&gt; the full configuration file:&lt;/p&gt;
&lt;p&gt;root /var/www/my.website.com/html;
index index.html index.htm index.nginx-debian.html;
server_name my.website.com;
location / {
try_files $uri $uri/ =404;
}
location /targetfolder {
root /var/www/my.website.com/html/targetfolder;
index index.html;
autoindex on;
autoindex_exact_size off;
}&lt;/p&gt;
&lt;p&gt;Everything in the second &lt;code&gt;location&lt;/code&gt; block contained my newly added content to make this directory I had just created, &lt;code&gt;targetfolder&lt;/code&gt;, exposed. After saving the file, I first tested my configuration with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo nginx -t
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Crucially, this told me the configuration syntax was okay. Then I restarted my web server via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo systemctl reload nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, I tried navigating to my directory via a web browser&amp;hellip; only to be greeted by a 404 error. The 404 (which indicates that the requested resource wasn&amp;rsquo;t found on the server) tells me that something is likely amiss with how I&amp;rsquo;m referencing the requested content. I compared my configuration to a handful of samples online, though, and didn&amp;rsquo;t see what was wrong. Eventually, it dawned on me that all of the examples I found were showing how to enable directory listing for an &lt;em&gt;entire&lt;/em&gt; site, whereas my scenario was as little different considering I only wanted to expose a subfolder. I did a few more searches with that slant in mind, and I eventually hit upon a thread where someone mentioned that having multiple &lt;code&gt;root&lt;/code&gt; definitions in their configuration file caused problems for them.&lt;/p&gt;
&lt;p&gt;I tried adding one additional character to my configuration to comment out the &lt;code&gt;root&lt;/code&gt; definition in my second &lt;code&gt;location&lt;/code&gt; block:&lt;/p&gt;
&lt;p&gt;root /var/www/my.website.com/html;
index index.html index.htm index.nginx-debian.html;
server_name my.website.com;
location / {
try_files $uri $uri/ =404;
}
location /targetfolder {
#root /var/www/my.website.com/html/targetfolder;
index index.html;
autoindex on;
autoindex_exact_size off;
}&lt;/p&gt;
&lt;p&gt;After another &lt;code&gt;sudo systemctl reload nginx&lt;/code&gt;, I was able to view the directory just like I expected. In hindsight this makes a lot of sense; if I already define the root of the site somewhere earlier in the file, I can&amp;rsquo;t simply change it on a whim later on. Instead, the &lt;code&gt;location /targetfolder&lt;/code&gt; directive is going to be &lt;em&gt;relative&lt;/em&gt; to the &lt;code&gt;root&lt;/code&gt; I already specified. It was interesting to me that checking my configuration with &lt;code&gt;sudo nginx -t&lt;/code&gt; originally didn&amp;rsquo;t alert me to anything, but I&amp;rsquo;m hardly an Nginx guru. It&amp;rsquo;s certainly possible there may be some scenario where the setup I had was valid.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Online Reading Redux</title>
      <link>https://hugo.unusually.pink/online-reading-redux/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/online-reading-redux/</guid>
      <description>I feel like I start almost every post this way these days, but given the ongoing global pandemic, I&amp;rsquo;ve been spending a lot more time at home doing things like staying on top of my reading. You&amp;rsquo;d think I got paid by the COVID-19 reference if you were silly enough to think I get paid to write anything on this blog. Recently, though, I had a bit of an epiphany while catching up on my web-based reading.</description>
      <content>&lt;p&gt;I feel like I start almost every post this way these days, but given the ongoing global pandemic, I&amp;rsquo;ve been spending a lot more time at home doing things like staying on top of my reading. You&amp;rsquo;d think I got paid by the COVID-19 reference if you were silly enough to think I get paid to write anything on this blog. Recently, though, I had a bit of an epiphany while catching up on my web-based reading. Prior to the pandemic, both my RSS feeds and &lt;a href=&#34;https://getpocket.com/&#34;&gt;Pocket&lt;/a&gt; account were largely ignored since I didn&amp;rsquo;t have time to keep up with them. I&amp;rsquo;d periodically log in to each, cherry pick a few things to read that were the most useful and/or interesting (and usually 2 or 3 months old by that point), and then just delete or mark-as-read the rest. A few months would go by again, and then I would rinse-and-repeat the entire process. Over the past 350+ days at home, I&amp;rsquo;ve noticed some trends regarding how I interact with reading from each platform that I found a bit interesting.&lt;/p&gt;
&lt;h2 id=&#34;rss&#34;&gt;RSS&lt;/h2&gt;
&lt;p&gt;Historically, I&amp;rsquo;ve been quite the fan of RSS. I&amp;rsquo;ve even taken extra steps to ensure that the content I produce is &lt;a href=&#34;https://unusually.pink/full-content-rss-feeds-with-hugo/&#34;&gt;fully accessible via RSS&lt;/a&gt;. I used a plethora of RSS applications back in the day before eventually hopping aboard the Google Reader hype-train like so many others, only to inevitably be let down when &lt;a href=&#34;https://killedbygoogle.com/&#34;&gt;Google decided to kill it&lt;/a&gt;. After that I moved things over to &lt;a href=&#34;https://feedly.com/&#34;&gt;Feedly&lt;/a&gt;, widely seen as the second coming of Google Reader, and have used Feedly for the past 5 or 6 years. However, over the years I didn&amp;rsquo;t read the overwhelming majority of content that ended up in my Feedly account simply because I didn&amp;rsquo;t have the time. Logging in and seeing 400+ new articles waiting for me was more likely to cause me to just mark them all as read and start over than it was to make me attempt to read them all.&lt;/p&gt;
&lt;p&gt;When the pandemic started, I felt motivated to take my RSS feeds more seriously. I know people who leverage RSS for a &lt;em&gt;lot&lt;/em&gt;, especially since it&amp;rsquo;s often viewed as a way around the creepier aspects of the web. For example, you don&amp;rsquo;t need to worry about being inundated with advertisements, trackers, subscription prompts, cookie acceptance prompts, notification prompts, and all of the other junk that accompanies browsing the web in the modern era when the content that you care about is sent straight to your RSS reader and the chaff is left behind. (Of course, this is also why some sites will only publish an excerpt to their RSS feed, forcing you to go to their site to see the full content.) Similarly, while plenty of people want to pretend that RSS is dead, there are plenty of cool things happening in the space. For example, &lt;a href=&#34;https://miniflux.app/&#34;&gt;Miniflux&lt;/a&gt; is an awesome open-source RSS platform that you can either pay to access or host yourself. &lt;a href=&#34;https://rusingh.com/articles/2020/10/19/about-miniflux-feed-reader/&#34;&gt;Ru Singh put together a great post on how she leverages it&lt;/a&gt; for GitHub, YouTube, blogs, and everything in between.&lt;/p&gt;
&lt;p&gt;My struggle, though, turned out to be &lt;em&gt;discovering&lt;/em&gt; content that I wanted to consume. I found a handful of blogs like Ru&amp;rsquo;s through &lt;a href=&#34;https://joinmastodon.org/&#34;&gt;Mastodon&lt;/a&gt;, &lt;a href=&#34;https://rusingh.com/articles/2020/10/19/about-miniflux-feed-reader/&#34;&gt;Hacker News&lt;/a&gt;, etc. that I ended up following, but on the whole the web is a very different place now than it was in the heyday of RSS. Many people end up posting their content to places like &lt;a href=&#34;https://medium.com/&#34;&gt;Medium&lt;/a&gt;, &lt;a href=&#34;https://dev.to/&#34;&gt;dev.to&lt;/a&gt;, or (I feel physically ill as I type this) as giant Twitter threads rather than at their own blog. For many authors, &lt;em&gt;where&lt;/em&gt; the content lives has become much less important than where the links centralize. For example, someone may not care that they have posts littered across Medium, dev.to, and a GitHub Pages site as long as they all link back to their Twitter account. The blogrolls from the early 2000&amp;rsquo;s that would largely assist with finding like-minded people are largely gone.&lt;/p&gt;
&lt;p&gt;As a result of this, my RSS feeds devolved into mostly follow corporate blogs that, to avoid throwing too much shade, churned out content regularly that was pure garbage 95% of the time; I don&amp;rsquo;t want to have to scroll through 9 posts that are essentially advertisements just to see the 1 post that has relevant, technical information I&amp;rsquo;m interested in. While I&amp;rsquo;m sure that plenty of people out there have put together content lists for this exact reason, the fact remains that what&amp;rsquo;s relevant is extremely subjective to the person in question. A technology blogroll that&amp;rsquo;s immensely interesting to one person might be tangentially interesting to me at best if my focus is in a different area. As a result of this, opening my RSS reader always ended up feeling like more of a chore than something I wanted to do because I found it to be interesting.&lt;/p&gt;
&lt;h2 id=&#34;pocket&#34;&gt;Pocket&lt;/h2&gt;
&lt;p&gt;As opposed to RSS, Pocket has historically been an afterthought for me. I admittedly wasn&amp;rsquo;t even familiar with the company until they were acquired by Mozilla in 2017; I have not been a massive Pocket user like Craft Brew Geek. Pre-COVID, I would occasionally add things to Pocket and then proceed to ignore them until they were no longer relevant. During COVID, though, Pocket has been increasingly interesting and valuable to me. Throughout the day I regularly find myself stumbling across links posted to Twitter, Mastodon, Reddit, Hacker News, Apple News, etc. that look interesting but that I don&amp;rsquo;t have time to read at the moment. Instead of trying to bookmark them in Apple News or favorite them on Twitter and hoping I remember to go back later, now I just throw them into Pocket. In fact, I now keep the Pocket app install on my phone almost exclusively for &lt;em&gt;adding&lt;/em&gt; content to my account and almost never for consuming it. Is there something cool I see while doomscroll through Twitter while waiting for my carryout order? Just add it to Pocket. Did an interesting-looking Hacker News article get posted that looks like it&amp;rsquo;ll take me longer to read than it&amp;rsquo;ll take for my coffee to brew while I&amp;rsquo;m working? Add it to Pocket.&lt;/p&gt;
&lt;p&gt;This has ended up having a handful of major benefits for me. First, I&amp;rsquo;ve noticed that I tend to have a &lt;em&gt;lot&lt;/em&gt; of content in my Pocket account, much more than the article or two week &amp;ndash; at most &amp;ndash; that I would previously add. As a result, my Pocket account isn&amp;rsquo;t an afterthought that I tend to forget about since there&amp;rsquo;s so rarely anything in it. It&amp;rsquo;s become one of the first places that I go when I want to sit down and read. Just the other day after work I thought I would read an article or two. 2 hours later, and I still hadn&amp;rsquo;t emptied out my account.&lt;/p&gt;
&lt;p&gt;Another benefit is that while I&amp;rsquo;m adding a ton of content to Pocket, the content is also &lt;em&gt;good&lt;/em&gt;. Unlike the disaster that is my RSS reader, everything in Pocket is something I intentionally added, even if the act itself only takes a second. Occasionally my quick glance at an article before deciding to add it to Pocket turns out to have been misguided, but the overwhelming majority of what gets added is content that I actually look forward to reading.&lt;/p&gt;
&lt;p&gt;The final benefit is that I&amp;rsquo;ve streamlined my ability to &lt;em&gt;find&lt;/em&gt; good content a bit. While sitting down every other day and scrolling through all of &lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;Hacker News&lt;/a&gt; trying to find the handful of articles that are of interest to me seems burdensome, for example, seeing them posted to &lt;a href=&#34;https://twitter.com/newsycombinator&#34;&gt;their Twitter account&lt;/a&gt; throughout the day during my many doomscrolling sessions makes it more manageable. I&amp;rsquo;ve started following many accounts on Twitter for the exact same reason; previously I may not have bothered because even if I saw them post interesting content, I typically would never think to come back and read it when I had time.&lt;/p&gt;
&lt;p&gt;I mentioned before how nicely the iOS app for Pocket fits into this information flow because I so frequently discover interesting content on my phone that I can save to Pocket. I similarly have to give a nod to my iPad that I bought a little over a year ago for the flip side of that workflow. I almost exclusively end up reading what I&amp;rsquo;ve saved to Pocket via my iPad just because it makes for such a comfortable and convenient reading experience. It&amp;rsquo;s just easy to sit on the couch in the evening or on a weekend morning with a cup of coffee and catch up on my Pocket account, whereas I&amp;rsquo;d be less inclined to do that sort of reading with a laptop.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>macOS Big Sur 11.2 Homebrew and Git Error</title>
      <link>https://hugo.unusually.pink/macos-big-sur-11.2-homebrew-and-git-error/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/macos-big-sur-11.2-homebrew-and-git-error/</guid>
      <description>After I upgraded my macOS install from 11.1 to 11.2, the next time I tried running brew update to update all of the packages available in Homebrew, I got a wall of text regarding things going off the rails that ultimately culminated with this error:
 Error: Failure while executing; git config --replace-all homebrew.analyticsmessage true was terminated by uncaught signal KILL.
 When this happens, not only is Homebrew broken, but git itself is broken.</description>
      <content>&lt;p&gt;After I upgraded my macOS install from 11.1 to 11.2, the next time I tried running &lt;code&gt;brew update&lt;/code&gt; to update all of the packages available in &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;, I got a wall of text regarding things going off the rails that ultimately culminated with this error:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error: Failure while executing; &lt;code&gt;git config --replace-all homebrew.analyticsmessage true&lt;/code&gt; was terminated by uncaught signal KILL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When this happens, not only is Homebrew broken, but &lt;code&gt;git&lt;/code&gt; itself is broken. Running a simple &lt;code&gt;git status&lt;/code&gt; inside of an existing repository will similarly result in an error. I initially tweeted about it after I found a &lt;a href=&#34;https://github.com/Homebrew/discussions/discussions/673&#34;&gt;relevant thread on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I did have to combine the steps from a few different support threads, though, so after I had to go through the same process again after upgrading from macOS 11.2 to 11.2.1, I figured I&amp;rsquo;d throw together a quick post about what worked for me. From the input others are sharing on GitHub, it seems different combinations are working for different people, so your mileage may vary.&lt;/p&gt;
&lt;p&gt;The first thing that I needed to do is reinstall the Xcode CLI tools. This is &lt;em&gt;not&lt;/em&gt; a full Xcode installation, so no need to worry about a massive download. If you get the warning about being on battery and the recommendation that you only do the installation while the device is plugged in, you can likely just ignore it and proceed on battery power; on my system the install takes about 2 minutes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For some people, the second and final step is to reinstall &lt;code&gt;git&lt;/code&gt;. This did &lt;em&gt;not&lt;/em&gt; work for me, though. Following &lt;a href=&#34;https://github.com/Homebrew/discussions/discussions/439#discussioncomment-261267&#34;&gt;another thread&lt;/a&gt;, I discovered that I needed to reinstall two dependencies of &lt;code&gt;git&lt;/code&gt;: &lt;code&gt;gettext&lt;/code&gt; and &lt;code&gt;pcre2&lt;/code&gt;. I&amp;rsquo;m assuming that you can likely reinstall both with one command without any issues, but both times I&amp;rsquo;ve seen the problem thus far I&amp;rsquo;ve run the commands individually:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;brew reinstall gettext
brew reinstall pcre2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The final step then is to &lt;em&gt;now&lt;/em&gt; reinstall &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;brew reinstall git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once that&amp;rsquo;s done, now re-running &lt;code&gt;brew update&lt;/code&gt; or &lt;em&gt;any&lt;/em&gt; &lt;code&gt;git&lt;/code&gt; command should be successful.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Switching To Brave</title>
      <link>https://hugo.unusually.pink/switching-to-brave/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/switching-to-brave/</guid>
      <description>I spend the majority of my computing time on the MacBook Pro that I use for work. For a very long time, I&amp;rsquo;ve used Safari as my main browser on it. Unsurprisingly, Safari integrates very nicely with the rest of macOS, and I honestly just really like it as a browser. Lately, though, I&amp;rsquo;ve been experiencing increased frustration with Safari and the web as a whole that has had me looking for alternatives.</description>
      <content>&lt;p&gt;I spend the majority of my computing time on the MacBook Pro that I use for work. For a very long time, I&amp;rsquo;ve used Safari as my main browser on it. Unsurprisingly, Safari integrates very nicely with the rest of macOS, and I honestly just really like it as a browser. Lately, though, I&amp;rsquo;ve been experiencing increased frustration with Safari and the web as a whole that has had me looking for alternatives. I&amp;rsquo;ll preface this entire post by saying that I could easily work around most of my problems by doing what I&amp;rsquo;ve historically done and using Safari for most things and a different browser for the remainder that don&amp;rsquo;t work well in Safari, but I really dislike having multiple browsers open. While I&amp;rsquo;m not nearly as guilty as most of my colleagues about having an egregious number of tabs open, it&amp;rsquo;s still a pain to deal with swapping between browser windows and finding what site is open where.&lt;/p&gt;
&lt;h2 id=&#34;issues&#34;&gt;Issues&lt;/h2&gt;
&lt;p&gt;The main issue with Safari is compatibility. As someone who is (mercifully) not a web developer, I don&amp;rsquo;t know if the problem is with WebKit itself, with the utter dominance of the Blink, or a combination of the two, but the web in 2021 feels much like the web of the early 2000&amp;rsquo;s. The difference is that instead of everyone developing specifically for Internet Explorer 6, they&amp;rsquo;re developing for Chrome. Various web conferencing applications, for example, just won&amp;rsquo;t work in Safari. Some of them like Microsoft Teams will flat-out tell you this if you try, while others will let you make the attempt and then not work as expected. I get that this is commonly done so that developers can offer a &amp;ldquo;desktop&amp;rdquo; app via Electron, but it still sucks. My favorite bug from recent memory is that SharePoint will manage to get the selection area mis-aligned with the mouse cursor in Safari, meaning that to click on a particular file or directory I have to just watch the highlighting rather than my cursor and click on something arbitrary; it&amp;rsquo;s either that or I refresh the page and hope for a better experience.&lt;/p&gt;
&lt;p&gt;The lack of configuration options also make Safari periodically difficult to use in a work environment. For example, 3rd party cookies are blocked by default in Safari. This is &lt;em&gt;awesome&lt;/em&gt;, in my opinion, since they should be blocked 99% of the time, yet almost no one outside of the technically minded is going to bother going into their settings to make that change. However, sometimes I need to allow 3rd party cookies, and Safari doesn&amp;rsquo;t seem to offer up options for this. The &lt;a href=&#34;https://admin.teams.microsoft.com&#34;&gt;Microsoft Teams Admin Center&lt;/a&gt; is a shining example of this. Without 3rd party cookies, you&amp;rsquo;ll just get an error page. I&amp;rsquo;ve historically had to fire up a different browser in order to access it.&lt;/p&gt;
&lt;p&gt;The final issue, which is definitely Safari-specific, is the update cadence. Most browsers are providing monthly updates. Safari, much like the Internet Explorer of years past, is still tying its major updates with OS updates. This means that &lt;a href=&#34;https://unusually.pink/safari-14/&#34;&gt;while the release of Safari 14 was awesome&lt;/a&gt;, for example, I&amp;rsquo;ll wait much longer for Safari 15 to bring additional improvements than I would with a competing browser.&lt;/p&gt;
&lt;p&gt;On the whole, I still &lt;em&gt;really&lt;/em&gt; like Safari, and I think it&amp;rsquo;s great in a personal context. For work, though, it&amp;rsquo;s just a bit too inflexible and unsupported.&lt;/p&gt;
&lt;h2 id=&#34;brave&#34;&gt;Brave&lt;/h2&gt;
&lt;p&gt;My primary concern with alternative browsers was simply native support. I have a MacBook Pro running an M1 chip, and while translating x86 applications to ARM via Rosetta 2 has been seamless with plenty of applications, I wanted my browsing experience to be as snappy as possible. Tons of applications feature ARM support under Linux, which I&amp;rsquo;ve seen firsthand with my &lt;a href=&#34;https://unusually.pink/unusually-pink-impressions-pinebook-pro/&#34;&gt;Pinebook Pro&lt;/a&gt;. I figured it would only be a matter of time before developers made the necessary tweaks for M1 support. Firefox was &lt;a href=&#34;https://www.macrumors.com/2020/12/15/firefox-now-natively-supports-m1-macs/&#34;&gt;one of the first browsers I knew of to support M1 chips&lt;/a&gt;, but I wasn&amp;rsquo;t sure if that was the direction I wanted to go. I love Firefox, and I still use it on all of my Linux systems; I&amp;rsquo;m using it to write this post on my &lt;a href=&#34;https://unusually.pink/star-lite-mk-iii/&#34;&gt;Star Lite Mk III&lt;/a&gt; right now. There have been a lot of concerns surrounding the direction of Firefox after &lt;a href=&#34;https://arstechnica.com/information-technology/2020/08/firefox-maker-mozilla-lays-off-250-workers-says-covid-19-lowered-revenue/&#34;&gt;Mozilla laid off a large number of staff in 2020&lt;/a&gt;, a group that allegedly included most &amp;ndash; if not all &amp;ndash; of their incident response team. Additionally, I experience many of the same issues with Firefox and the Gecko engine as I do with Safari and WebKit in today&amp;rsquo;s Chrome-centric web.&lt;/p&gt;
&lt;p&gt;Instead, I decided to give Brave a shot. Brave &lt;a href=&#34;https://www.engadget.com/apple-silicon-brave-browser-132047721.html&#34;&gt;added M1 support at the very end of 2020&lt;/a&gt;, and I already had it installed on my machine to use whenever Safari wasn&amp;rsquo;t an option for all of the aforementioned reasons. I simply swapped it to my default browser and spent the past week using it. Brave is a Chromium fork, meaning it renders pages like Chrome and will experience the same high degree of compatibility across sites. It also can install all of the same extensions as Chrome, though that&amp;rsquo;s far less important than one might think as I&amp;rsquo;ll discuss shortly.&lt;/p&gt;
&lt;p&gt;Like most Chromium forks, all of the Google junk that gets added to Chrome is absent. In fact, Brave&amp;rsquo;s main mission is to be a privacy-focused browser. It features a robust advertising and tracking blocker built-in, with tons of options for configuring exceptions, disabling it entirely for certain sites, and more. What really surprised me was the aggression of blocking that it was capable of. I used the tracking blocker in Safari, for example, and the typical reporting from it would block somewhere around 200 trackers per week. After using Brave for a week, my metrics look like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/brave_blocker.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To be clear, this is in no way an apples-to-apples (no pun intended) comparison since I have Brave blocking both trackers and ads while Safari can only do trackers. The numbers are still staggering after just a week, though, and I was particularly interested in seeing metrics like how much bandwidth was saved by not loading that content. There are also baseline levels of blocking that can be configured, and I initially attempted to go with the Strict option. I quickly found that too many sites flat out broke, so I switched it to Standard with much better results. Additionally, options exist for allowing things like buttons on sites for Twitter, Facebook, LinkedIn, etc. The other bonus is that such robust blocking built in means I didn&amp;rsquo;t need the array of security extensions I may be inclined to install with other browsers. After a week, the only extension I&amp;rsquo;ve added to Brave is one for my password manager.&lt;/p&gt;
&lt;p&gt;Another nice security feature with Brave is that it offers two different takes on Incognito mode. The first is the traditional Incognito mode where it won&amp;rsquo;t load any cookies from your main browsing session, and any cookies gathered during that Incognito session are removed once it ends. The other option does the exact same as the first, but it also &lt;a href=&#34;https://www.torproject.org/&#34;&gt;routes your traffic through Tor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Brave has seemingly endless customization, and everything discussed thus far can be toggled off and on in the settings. Don&amp;rsquo;t need Tor with Incognito? You can turn it off so that it doesn&amp;rsquo;t even show up as an option. In fact, going through the settings to configure Brave is the only real hurdle to using it, and it probably took me about 30 minutes to look through everything and get it set up the way that I wanted. That being said, I found the default configuration to be &lt;em&gt;very&lt;/em&gt; good, and for most people who may not care to go through the settings it&amp;rsquo;ll be more than fine.&lt;/p&gt;
&lt;p&gt;Brave seems great on my battery life with no discernible difference from Safari. I haven&amp;rsquo;t really paid much attention to it, though, because honestly everything seems to scream on an M1 MacBook Pro without using much energy in the first place. I don&amp;rsquo;t know if I&amp;rsquo;ve ever heard the fan kick on in the months that I&amp;rsquo;ve used the device, and I literally never pay attention to the battery life. I typically work from various locations around my apartment for the morning and then settle in at my desk with a dock during the afternoon. I&amp;rsquo;ve worked undocked for an entire day a couple of times before and still ended the day with enough battery life to comfortably return to my normal routine the next day without any problems.&lt;/p&gt;
&lt;p&gt;After a week, I&amp;rsquo;ve been pleased with Brave. As is typically the case, I&amp;rsquo;m always open to checking out new software, and I&amp;rsquo;m interested in maybe giving Vivaldi, which I&amp;rsquo;ve used on Linux previously, a try on my MacBook once they offer M1 support.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Cloudflare Analytics</title>
      <link>https://hugo.unusually.pink/cloudflare-analytics/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/cloudflare-analytics/</guid>
      <description>Anyone who knows me, reads the type of things I tweet about, and/or listens to the Same Shade of Difference podcast knows that I&amp;rsquo;m an advocate of online privacy. I&amp;rsquo;m all for blocking trackers, avoiding services from invasive companies like Facebook, and generally trying to keep as much of what I do online known only to me. That being said, while I typically configure my browser to block things like Google Analytics because Google is already a super creepy company that gathers an order of magnitude more data than it should about people, I also see the value in having analytics for a website.</description>
      <content>&lt;p&gt;Anyone who knows me, reads the type of things I &lt;a href=&#34;https://twitter.com/UnusuallyPink&#34;&gt;tweet about&lt;/a&gt;, and/or listens to the &lt;a href=&#34;https://sameshadeofdifference.com/&#34;&gt;Same Shade of Difference podcast&lt;/a&gt; knows that I&amp;rsquo;m an advocate of online privacy. I&amp;rsquo;m all for blocking trackers, avoiding services from invasive companies like Facebook, and generally trying to keep as much of what I do online known only to me. That being said, while I typically configure my browser to block things like Google Analytics because Google is already a super creepy company that gathers an order of magnitude more data than it should about people, I also see the value in having analytics for a website. It&amp;rsquo;s often helpful to see things like which content in particular is the most popular; if I know the types of content people like to see, then I can try to tailor what I write about to meet that need. Similarly it&amp;rsquo;s honestly just cool to be able to see when my site gets traffic from people all across the globe. Seeing that someone on the other side of the planet found my content useful or interesting is just neat. As a result, I&amp;rsquo;ve been on the lookout for an analytics options that isn&amp;rsquo;t stalker-esque like what Google offers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/marge_neat.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;One of the initial options I considered was &lt;a href=&#34;https://plausible.io/&#34;&gt;Plausible Analytics&lt;/a&gt;. They have a presence on the &lt;a href=&#34;https://en.wikipedia.org/wiki/Fediverse&#34;&gt;Fediverse&lt;/a&gt;, which is how I first became aware of the company. Their offering is appealing because it provides metrics to website owners without collecting personal data on the visitors, which is exactly what I&amp;rsquo;ve been wanting. Unfortunately for me, there&amp;rsquo;s no free option for Plausible, and while paying $4 a month for a year if you get 10,000 hits or less per month &amp;ndash; a threshold I&amp;rsquo;m &lt;em&gt;well&lt;/em&gt; under &amp;ndash; makes sense for a business or someone with a serious website, I didn&amp;rsquo;t feel like spending $48 USD per year just to get some neat metrics was worth it for me. I&amp;rsquo;m currently averaging around 1000 visits per month, so it&amp;rsquo;s not exactly as though I&amp;rsquo;m driving a business based around these analytics.&lt;/p&gt;
&lt;p&gt;With all of this in mind, the announcement of &lt;a href=&#34;https://blog.cloudflare.com/privacy-first-web-analytics/&#34;&gt;Cloudflare&amp;rsquo;s privacy-focused analytics&lt;/a&gt; immediately piqued my interest. Understandably, many people in technology circles have reservations about Cloudflare. Cloudflare serves as the gatekeeper to so much of the Internet&amp;rsquo;s traffic that when they have an outage, sometimes it feels as though the entire Internet is down; that&amp;rsquo;s not exactly an ideal situation for a healthy and robust Internet ecosystem. When Cloudflare&amp;rsquo;s analytics platform originally launched, I was dismissive of it because it was only an option for those hosting their content behind Cloudflare. If I needed DDoS protection or a CDN then I might consider something like putting my site behind Cloudflare, but without that I&amp;rsquo;m more than a little loathe to start transferring my DNS records.&lt;/p&gt;
&lt;p&gt;Right around the end of 2020, though, I saw that Cloudflare&amp;rsquo;s analytics were now open to be used by &lt;em&gt;anyone&lt;/em&gt; regardless of hosting. Curious, I logged into my existing Cloudflare account that I created back in the day when using Cloudflare was the only option for configuring &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; with an SSL certificate. Sure enough, &amp;ldquo;Web Analytics&amp;rdquo; was an option within my Cloudflare Dashboard. All I had to do was provide the address for my site, and Cloudflare gave me a snippet of JavaScript to add for the analytics.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/cloudflare_add-1024x631.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Given that my site is &lt;a href=&#34;https://unusually.pink/unusually-pink-migration/&#34;&gt;now hosted on WordPress&lt;/a&gt;, I couldn&amp;rsquo;t directly add content to the header or footer section of my HTML. After a quick DuckDuckGo search, though, I found some recommendations for the &lt;strong&gt;Insert Headers and Footers&lt;/strong&gt; plugin. The plugin adds a tab to the &lt;strong&gt;Settings&lt;/strong&gt; section of the WordPress Dashboard with fields for, you guessed it, the header and the footer. Any content that I place in there is automatically added to the header and/or footer of each page that WordPress renders. I simply pasted the snippet of JavaScript from Cloudflare into the footer section, and everything was up and running for me.&lt;/p&gt;
&lt;p&gt;Similar to Plausible, CloudFlare&amp;rsquo;s analytics platform gives me some basic details without anything particularly creepy about the people visiting my site. I see things like the country they&amp;rsquo;re from (nothing more specific than that), the browser, the operating system, the referrer (e.g. if someone is clicking a link to my site from Twitter or DuckDuckGo), and which page was viewed. The last part is the one that allows me to stay on top of what content people are finding the most useful. For example, since implementing Cloudflare analytics, I&amp;rsquo;ve been able to see that &lt;a href=&#34;https://unusually.pink/macos-big-sur-pip-installation-error/&#34;&gt;my post&lt;/a&gt; on how to resolve issues installing Python packages through &lt;code&gt;pip3&lt;/code&gt; on macOS Big Sur has consistently been the most viewed. Behind that is &lt;a href=&#34;https://unusually.pink/creating-a-jwt-in-the-groovy-programming-language/&#34;&gt;my post on how to create a JWT in Groovy&lt;/a&gt;; that&amp;rsquo;s super useful since I had no idea if anyone else would even care about Groovy-related content.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/cloudflare_analytics-1024x581.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The only thing that was immediately disappointing to me was that I could only add a single site; after adding Unusually Pink, there wasn&amp;rsquo;t an option to add another site along with that. A little over a week ago, though, when I went to my Cloudflare dashboard to see how my traffic looked from the previous night, I noticed a new UI that included an option for additional sites. I quickly added several other sites to start keeping tabs on them as well. This is surprisingly helpful for me because it enables me to see that several sites I maintain get literally &lt;em&gt;no&lt;/em&gt; traffic. Those are sites that I&amp;rsquo;ll probably be taking offline and letting the domains expire since there&amp;rsquo;s clearly not much of a point in keeping them around if having them online for their own sake isn&amp;rsquo;t important to me (spoiler alert: it&amp;rsquo;s not.)&lt;/p&gt;
&lt;p&gt;The only other thing worth mentioning is that, as is the case with any analytics platform, Cloudflare won&amp;rsquo;t provide a completely accurate picture of who visits your site simply based on how each user configures their browser. For example, I noticed that the &lt;a href=&#34;https://unusually.pink/safari-14/&#34;&gt;tracking blocker built into current versions of Safari&lt;/a&gt; plays nicely with Cloudflare. However, I confirmed that &lt;a href=&#34;https://brave.com/&#34;&gt;Brave&lt;/a&gt;, the Chromium-based browser I use when I&amp;rsquo;m absolutely forced to use a Chromium-based browser, and &lt;a href=&#34;https://ublockorigin.com/&#34;&gt;uBlock Origin&lt;/a&gt; will still block the JavaScript element. As is always the case, your mileage may vary. Even without a 100% complete picture, though, I still like the insight that I glean from Cloudflare anaytics, and I don&amp;rsquo;t feel like I&amp;rsquo;m being abusive with the personal information for anyone visiting the site. With that being said, anyone who simply hates Cloudflare or disagrees with my assessment on just how private their analytics are can easily block them just as they can with every other analytics platform, which hopefully provides a happy medium.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>msal4j With Groovy</title>
      <link>https://hugo.unusually.pink/msal4j-with-groovy/</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/msal4j-with-groovy/</guid>
      <description>I&amp;rsquo;ve written before about the fact that I use Groovy heavily in my current role since the platform I work the most frequently with is able to treat it as a first class citizen, whereas using something like PowerShell or Python adds a few more hurdles. The other thing I work with heavily is Office 365; this got me wondering if I might be able to combine the two by using Groovy to query Microsoft&amp;rsquo;s Graph API.</description>
      <content>&lt;p&gt;I&amp;rsquo;ve written before about the fact that I &lt;a href=&#34;https://unusually.pink/groovy-programming-creating-an-iso-date-at-a-specific-date-and-time-in-utc/&#34;&gt;use Groovy heavily&lt;/a&gt; in my current role since the platform I work the most frequently with is able to treat it as a first class citizen, whereas using something like PowerShell or Python adds a few more hurdles. The other thing I work with heavily is Office 365; this got me wondering if I might be able to combine the two by using Groovy to query &lt;a href=&#34;https://developer.microsoft.com/en-us/graph/&#34;&gt;Microsoft&amp;rsquo;s Graph API&lt;/a&gt;. Microsoft&amp;rsquo;s current standard for interacting with the Graph API, replacing the old Active Directory Authentication Library (ADAL), is the Microsoft Authentication Library (MSAL.) &lt;a href=&#34;https://github.com/AzureAD&#34;&gt;Microsoft provides MSAL packages for a &lt;em&gt;ton&lt;/em&gt; of popular languages&lt;/a&gt;, and considering that Groovy is a superset of Java, I figured that I should be able to leverage the &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-java&#34;&gt;msal4j version&lt;/a&gt; within Groovy.&lt;/p&gt;
&lt;p&gt;In my particular case, the code that I write is typically used as &amp;ldquo;glue&amp;rdquo; to link disparate systems together. As such, I based my work off of the Microsoft sample code for &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-java/blob/dev/src/samples/confidential-client/ClientCredentialGrant.java&#34;&gt;authenticating as a daemon with a client secret&lt;/a&gt;. This is the method I&amp;rsquo;ve always used with my PowerShell and Python code. tl;dr, I was able to get this working with almost no difference from the Java sample, and you can see the end code that successfully authenticates and queries for the users in an AAD instance &lt;a href=&#34;https://github.com/jfabry-noc/GroovyMSAL/blob/main/graphToken.groovy&#34;&gt;on my GitHub account&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As you can see if you check out the code, I first used &lt;a href=&#34;https://docs.groovy-lang.org/latest/html/documentation/grape.html&#34;&gt;Grape for my dependency management&lt;/a&gt;. I&amp;rsquo;m admittedly not much of a Java developer, but I found Grape to be a very handy way to add additional libraries with very little overhead. It&amp;rsquo;s a much more Python-esque experience than trying to add &lt;code&gt;.jar&lt;/code&gt; files to a project in an IDE. There were a few dependencies I needed for this project, but the main one, msal4j, was added via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://mvnrepository.com/artifact/com.microsoft.azure/msal4j       
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                
&lt;span style=&#34;color:#a6e22e&#34;&gt;@Grapes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;                     
    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Grab&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;group&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;microsoft&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;azure&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; module&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;msal4j&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;       
        &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To figure out what the heck to enter to import the library via Grape, I used the &lt;a href=&#34;https://mvnrepository.com/&#34;&gt;Maven Repository&lt;/a&gt;, which gives you the additions required to use Grape &amp;ndash; or other dependency management tools like Maven or Gradle. Just be sure you&amp;rsquo;re using the &lt;a href=&#34;https://mvnrepository.com/artifact/com.microsoft.azure/msal4j/1.8.1&#34;&gt;msal4j library&lt;/a&gt;, which is designed for vanilla Java. The &lt;a href=&#34;https://mvnrepository.com/artifact/com.microsoft.identity.client/msal&#34;&gt;library just named msal&lt;/a&gt; is the one designed for Android. This was my first experience using Grape, and the only issue I ran into was a failure to realize that I needed to immediately include &lt;code&gt;import&lt;/code&gt; statements after all of my Grape calls; adding the library doesn&amp;rsquo;t magically add the functions and classes you may need, hence all of the msal-specific imports like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.microsoft.aad.msal4j.ClientCredentialFactory&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.microsoft.aad.msal4j.ClientCredentialParameters&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;          
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.microsoft.aad.msal4j.ConfidentialClientApplication&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.microsoft.aad.msal4j.IAuthenticationResult&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.microsoft.aad.msal4j.IClientCredential&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.microsoft.aad.msal4j.MsalException&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.microsoft.aad.msal4j.SilentParameters&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once I verified I could execute my baseline code making the imports without any issues, I started converting the function for getting an access token. Since this was completely new territory for me, I was running it against my free developer tenant. Anyone is free to sign up for the &lt;a href=&#34;https://developer.microsoft.com/en-us/microsoft-365/dev-program&#34;&gt;Microsoft 365 Developer Program&lt;/a&gt;, which gets you a free tenant, 25 Office 365 E5 licenses, and plenty of other fun Azure goodies to test with. Be mindful that this is &lt;em&gt;not&lt;/em&gt; something for production purposes, and every 90 days Microsoft performs an evaluation on the tenant to verify that you&amp;rsquo;re using it for development purposes and not for free access into Office 365. Admittedly, mine has gone neglected for many 90 day cycles without any active development work, but I also wasn&amp;rsquo;t actively using the O365 accounts for anything, which has been cool in Microsoft&amp;rsquo;s book so far. My tenant has always been renewed, and I was happy to have it around for testing this out. I &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app&#34;&gt;registered a new application in Azure AD&lt;/a&gt;, and then I tested the details from it that are typically needed for getting a token (the tenant ID, the client ID, and the client secret) in some existing Python code to verify that everything was working as expected.&lt;/p&gt;
&lt;p&gt;With the foundation out of the way, I worked to &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-java/blob/dev/src/samples/confidential-client/ClientCredentialGrant.java&#34;&gt;modify Microsoft&amp;rsquo;s acquireToken() function&lt;/a&gt; to be a bit more Groovy-esque:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Function to get an access token.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; def &lt;span style=&#34;color:#a6e22e&#34;&gt;GetAccessToken&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String clientId&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String authority&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String secret&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String scope&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color:#75715e&#34;&gt;// Create the app.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;     ConfidentialClientApplication app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ConfidentialClientApplication&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;clientId&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; ClientCredentialFactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createFromSecret&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;secret&lt;span style=&#34;color:#f92672&#34;&gt;)).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;authority&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;authority&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
     ClientCredentialParameters clientCredentialParam &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ClientCredentialParameters&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;builder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Collections&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;singleton&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;scope&lt;span style=&#34;color:#f92672&#34;&gt;)).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
     def result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;acquireToken&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;clientCredentialParam&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;join&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;

     &lt;span style=&#34;color:#75715e&#34;&gt;// Return to the caller.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;     result
 &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This worked, though I didn&amp;rsquo;t realize it at first. I originally took my calling code of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def accessToken &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GetAccessToken&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;aadConfig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;client_id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; aadConfig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;authority&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; aadConfig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;secret&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; aadConfig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scope&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And attempted to just print it to the screen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;println accessToken
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This resulted in an error message that spent quite a while driving me moderately insane:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;com.microsoft.aad.msal4j.MsalClientException: Cached JWT could not be parsed: Invalid JWT serialization: Missing dot delimiter(s)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Not being super familiar with the &lt;code&gt;IAuthenticationResult&lt;/code&gt; object type, this threw me for a bit of a loop since I didn&amp;rsquo;t really know what to expect. Searching for this error just turned up generic results surrounding the JWT library that Microsoft calls from within the msal4j library. Searching for it in relation to msal4j in particular returns almost no results, and searching for with respect to Groovy returns &lt;em&gt;literally&lt;/em&gt; no results.&lt;/p&gt;
&lt;p&gt;I tried to make a function to query the Microsoft Graph using the &lt;code&gt;accessToken&lt;/code&gt; value passed as the Bearer, but that simply resulted in the same error. Since I was working on this on my MacBook Pro running a &lt;a href=&#34;https://formulae.brew.sh/formula/openjdk#default&#34;&gt;beta build of the OpenJDK 16 for Apple&amp;rsquo;s M1 chip&lt;/a&gt; and on a Linux VPS with OpenJDK 11, I tried running against OpenJDK 8 since that&amp;rsquo;s the version that plays the nicest with Groovy, but I got the same result. I eventually even went to the point of setting up a Java environment with &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ IDEA&lt;/a&gt; to verify that the sample code worked in vanilla Java 15, which it did. While looking at the Java code in IDEA, though, I realized that the sample output was &lt;em&gt;not&lt;/em&gt; calling the &lt;code&gt;accessToken&lt;/code&gt; directly, but was rather calling a method on it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def tokenValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; accessToken&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;accessToken&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I modified my code with this, passing the value from the method to my &lt;code&gt;GetUsersListFromGraph()&lt;/code&gt; function, and sure enough the user accounts from my test tenant were dumped to the screen as expected. Obviously, this error was a pretty simple mistake on my part to not leverage the object from msal4j properly. That being said, I figured that noting the error message might be helpful for someone else who makes the same mistake and finds the same lack of results when searching for the error message. I also thought it was quite slick how seamlessly Grape makes importing libraries into Groovy code without needing to worry about downloading &lt;code&gt;.jar&lt;/code&gt; files, specifying a &lt;code&gt;classpath&lt;/code&gt; when calling Groovy, etc. I think it&amp;rsquo;ll be interesting to see what new integrations I can create now with our monitoring platform.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Parse ISO 8601 String With Timezone Offset To Date Object In Groovy</title>
      <link>https://hugo.unusually.pink/parse-iso-8601-string-with-timezone-offset-to-date-object-in-groovy/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/parse-iso-8601-string-with-timezone-offset-to-date-object-in-groovy/</guid>
      <description>My Groovy posts always have the absolute worst titles, but I figure that making them verbose is really the only way to make them discoverable. I write a good bit of Groovy code at work, and given that it&amp;rsquo;s been a few years since the heyday of Groovy it can occasionally be a bit of a struggle to figure out exactly what I need with the resources I dig up online.</description>
      <content>&lt;p&gt;My &lt;a href=&#34;https://unusually.pink/groovy-programming-creating-an-iso-date-at-a-specific-date-and-time-in-utc/&#34;&gt;Groovy posts always have the absolute worst titles&lt;/a&gt;, but I figure that making them verbose is really the only way to make them discoverable. I write a good bit of Groovy code at work, and given that it&amp;rsquo;s been a few years since the heyday of Groovy it can occasionally be a bit of a struggle to figure out exactly what I need with the resources I dig up online. Any time I manage to figure out something that was difficult to find information on, it seems like a good opportunity to fill the gap a bit.&lt;/p&gt;
&lt;p&gt;I do a lot of work with APIs, mostly making calls against cloud-based systems. In the cloud, no one generally cares about what timezone you happen to be in, so UTC is always used. I&amp;rsquo;ve recently been making calls against local software platform, though, and &lt;strong&gt;it&lt;/strong&gt; returns timestamps in the local time of the server running it. Ick. I ended up with string values like the following which I then needed to parse as a Date object in Groovy for the sake of comparison.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;2020-10-17T02:00:21.644-04:00&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&amp;rsquo;m quite familiar with converting something like this &lt;em&gt;without&lt;/em&gt; the timezone offset at the end; that one was new for me. My first struggle was exactly what to search for in order to dig up information on this; I eventually discovered that this is &lt;a href=&#34;https://www.iso.org/iso-8601-date-and-time-format.html&#34;&gt;an ISO 8601 date and time format&lt;/a&gt;. I first attempted to simply pass this value straight to &lt;code&gt;Date.parse()&lt;/code&gt; like I would with something in UTC:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def dateString &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-10-17T02:00:21.644-04:00&amp;#34;&lt;/span&gt;
def dateObject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm:ss.SSSZ&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; dateString&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Attempting this gives a really nice error message:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unparseable date: &amp;ldquo;2020-10-17T02:00:21.644-04:00&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Groovy telling me to get bent&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After more digging than I care to admit, I finally got to the root of the problem: Groovy doesn&amp;rsquo;t like the colon in the timezone offset. Rather than &lt;code&gt;04:00&lt;/code&gt; it wants &lt;code&gt;0400&lt;/code&gt;. Given that I work in the western hemisphere, I &lt;em&gt;could&lt;/em&gt; have taken the easy route and simply removed the last 3 characters, replacing &lt;code&gt;:00&lt;/code&gt; with &lt;code&gt;00&lt;/code&gt;. It&amp;rsquo;s not the most elegant solution, though, and there are parts of the world with timezone offsets in fractions of an hour; assuming it&amp;rsquo;s always going to be a whole hour isn&amp;rsquo;t safe. My first take, written last week, was to be extremely complicated by splitting the string into a list at each colon. From there, I concatenated the list items back into a string, separating them with colons, until attaching the very last piece, which is added sans colon:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It technically works but doesn&amp;rsquo;t look so good; no one would ever call the above solution &amp;ldquo;elegant&amp;rdquo; by any stretch. That was done late on a Friday, though, and over the weekend I had a better thought pop into my head. What if instead of spitting up the entire string I simply:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Verified first that the end of the string matched what was expected.&lt;/li&gt;
&lt;li&gt;Took a substring that was everything up until the problematic part of the offset.&lt;/li&gt;
&lt;li&gt;Took a substring for the numbers after the last colon.&lt;/li&gt;
&lt;li&gt;Put the parts from 2 and 3 together.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After shaking off a bit of regular expression rust, this is what I ended up using:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The partial regex match of &lt;code&gt;:\d{2}$&lt;/code&gt; validates that the string ends with a colon followed by any 2 digits. If so, I first create a substring from the first index (0) up to the index at the length of the string minus 3, meaning I omit the colon and last 2 numbers. Then I append to that a substring from the overall string&amp;rsquo;s length minus &lt;strong&gt;2&lt;/strong&gt; through the end of the string. Using the overall string&amp;rsquo;s length minus 2 rather than 3 means I just leave out the colon.&lt;/p&gt;
&lt;p&gt;Is this the best solution? Probably not, but it&amp;rsquo;s getting the job done in my situation. If I ran into issues, my next attempt would be to get the index of every colon in the entire string and then replace the very last one with nothing.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Twenty Twenty-One WordPress Theme</title>
      <link>https://hugo.unusually.pink/twenty-twenty-one-wordpress-theme/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/twenty-twenty-one-wordpress-theme/</guid>
      <description>While I made the change a few weeks ago, it seems fitting that my first post of 2021 should be about my swap to the Twenty Twenty-One WordPress theme. For anyone who isn&amp;rsquo;t aware, each year WordPress releases a new &amp;ldquo;official&amp;rdquo; theme for the platform. While theme-elitists out there may scoff at them in favor of paid, premium themes, I&amp;rsquo;ve always found the yearly offerings to be elegant and well-designed. I had originally planned on putting this post together on January 1st, but what can I say&amp;hellip; movies on HBO Now aren&amp;rsquo;t going to binge-watch themselves.</description>
      <content>&lt;p&gt;While I made the change a few weeks ago, it seems fitting that my first post of 2021 should be about my swap to the Twenty Twenty-One WordPress theme. For anyone who isn&amp;rsquo;t aware, each year WordPress releases a new &amp;ldquo;official&amp;rdquo; theme for the platform. While theme-elitists out there may scoff at them in favor of paid, premium themes, I&amp;rsquo;ve always found the yearly offerings to be elegant and well-designed. I had &lt;em&gt;originally&lt;/em&gt; planned on putting this post together on January 1st, but what can I say&amp;hellip; movies on HBO Now aren&amp;rsquo;t going to binge-watch themselves.&lt;/p&gt;
&lt;p&gt;While I&amp;rsquo;ve typically enjoyed the yearly WordPress theme releases, the previous iteration of this blog was actually back on the Twenty Sixteen theme since the yearly releases after that one didn&amp;rsquo;t feel like they were a particularly good fit for a blog. I still liked the look of the Twenty Sixteen theme, especially after I switched the colors around to match the &lt;a href=&#34;https://unusually.pink/all-dracula-everything/&#34;&gt;Dracula Theme&lt;/a&gt;, but the fact remains that 2016 is more or less ancient history in the world of web design. As a result, parts of the site just felt a bit&amp;hellip; antiquated. For example, while the banner at the top allowed me to show off the Unusually Pink graphics that we originally commissioned for the podcast, it left the site feeling just a bit old.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/cropped-cropped-Unusually-Pink-Facebook-Cover-Photo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The artwork is still amazing, though.&lt;/p&gt;
&lt;p&gt;While I spent a decent bit of time tweaking the Twenty Sixteen theme to suit my needs, once I saw the &lt;a href=&#34;https://make.wordpress.org/core/2020/09/23/introducing-twenty-twenty-one/&#34;&gt;Twenty Twenty-One theme announcement in September I decided to stop further tweaking and try being patient&lt;/a&gt;. I also followed a bit &lt;a href=&#34;https://github.com/wordpress/twentytwentyone&#34;&gt;of the progress on the GitHub repository&lt;/a&gt;, but not being a web developer meant that it didn&amp;rsquo;t really give me a good vibe for how the theme would feel in practice.&lt;/p&gt;
&lt;p&gt;Once the theme released, though, I immediately found myself drawn to how minimalist and streamlined it is. I feel like it provides me with the bare necessities, and then I can expand upon it from there to fit my needs without a lot of unnecessary overhead. One look at the current layout at the time of this writing probably clues you in to the fact that these aren&amp;rsquo;t the default colors; I once again opted to update the design to feel like the Dracula theme. While Twenty Twenty-One offers less in the customization UI for modifying the colors, it can still easily be done via CSS (a level of access that I sorely missed when &lt;a href=&#34;https://unusually.pink/unusually-pink-migration/&#34;&gt;the site was hosted on Squarespace&lt;/a&gt;.) I&amp;rsquo;m not sure if there&amp;rsquo;s a better way to do it than just opening the published site in my browser&amp;rsquo;s developer tools and using the inspection feature to get the classes of the objects I want to change, but that ended up getting me to the end result I wanted.&lt;/p&gt;
&lt;p&gt;Along with the colors, I also felt the need to adjust some of the font sizes. In the default setup, Twenty Twenty-One opts for &lt;strong&gt;big&lt;/strong&gt; fonts, and while they looked kind of nice on my brand new MacBook Pro with a Retina display, on my 1080p, 11&amp;quot; &lt;a href=&#34;https://unusually.pink/star-lite-mk-iii/&#34;&gt;Star Lite Mk III&lt;/a&gt; going to a post would result in just the header and the post title being visible. None of the actual content could be read without scrolling. I wasn&amp;rsquo;t thrilled about my site looking so gigantic on lower resolution displays, so many of the font sizes were tweaked. That being said, as someone with extremely poor vision I&amp;rsquo;m a fan of large-ish fonts, and I didn&amp;rsquo;t want to completely flip to tiny text. Readability is, arguably, one of the most import things on a text-heavy site.&lt;/p&gt;
&lt;p&gt;If anyone is curious, my full CSS customizations are below. Hopefully it&amp;rsquo;s not too offensive since frontend is most definitely not my specialty.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;While there may still be some minor adjustments for sizes and spacing, for the most part I like where things are at. I&amp;rsquo;ve historically disliked blog landing pages which only showed the beginning of each post, but I&amp;rsquo;ve done a bit of a 180 in that regard. With Twenty Twenty-One I&amp;rsquo;ve been appreciating how the front page is much less cumbersome, especially when trying to reach the links or search box at the very bottom of the page. I think it also provides a bit of a cleaner focus on the &lt;a href=&#34;https://unusually.pink/about/&#34;&gt;link for the About page&lt;/a&gt; that I link to on most of my online profiles.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Books: Bird Box</title>
      <link>https://hugo.unusually.pink/books-bird-box/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/books-bird-box/</guid>
      <description>Continuing with the theme of reading books that spawned movies I thought were terrible but had interesting concepts, I recently read Bird Box. I watched the film for Bird Box back in 2018 shortly after it was released on Netflix, and I wasn&amp;rsquo;t exactly fond of it. So much of the film just didn&amp;rsquo;t seem to make any sense to me, but I really liked the concept of creatures that would create madness in someone simply by seeing them.</description>
      <content>&lt;p&gt;Continuing with the theme of &lt;a href=&#34;https://unusually.pink/books-the-silence/&#34;&gt;reading books that spawned movies I thought were terrible but had interesting concepts&lt;/a&gt;, I recently read &lt;em&gt;Bird Box&lt;/em&gt;. I watched the film for &lt;em&gt;Bird Box&lt;/em&gt; back in 2018 shortly after it was released on Netflix, and &lt;a href=&#34;https://unusually.pink/illness-movie-binge/&#34;&gt;I wasn&amp;rsquo;t exactly fond of it&lt;/a&gt;. So much of the film just didn&amp;rsquo;t seem to make any sense to me, but I really liked the concept of creatures that would create madness in someone simply by seeing them. Given that I&amp;rsquo;ve been at home for nearly 10 months due to the coronavirus pandemic, now seemed like as good a time as any to finally read the book that the film was based on.&lt;/p&gt;
&lt;p&gt;Right out of the gate, I&amp;rsquo;ll say that &amp;ndash; much like with &lt;em&gt;The Silence&lt;/em&gt; &amp;ndash; I found the novel for Bird Box to be &lt;strong&gt;much&lt;/strong&gt; better than the film. First off, the time frame for the beginning of the story is completely different. In the film, on the first day that Malorie and her sister Shannon hear about strange suicides, their entire neighborhood is in chaos. In the novel there&amp;rsquo;s a slow progression around the globe, ostensibly as the creatures travel further from wherever it is the came from. Malorie experiences shifts as people start taking the issue with increasing seriousness as reports of suicides come ever-closer to where they are, with things finally hitting home when she loses contact with her parents.&lt;/p&gt;
&lt;p&gt;Similarly, Malorie joins up in the house with the other survivors not because of some action movie-esque mad dash after her accident on the way home from the doctor, but because she finds herself alone after her sister&amp;rsquo;s suicide several weeks into the story. From this point, the story diverges wildly between the film and the novel. The creatures, for example, play an almost entirely passive role. In the film they make sound, and they&amp;rsquo;re capable of tricking people by mimicking voices. Absolutely none of this happens in the novel, and it almost makes for a more eerie and terrifying experience as the consumer simply because you never know what might be around when the survivors venture forth even for routine tasks like fetching water from the well.&lt;/p&gt;
&lt;p&gt;There also are no roving bands of people who are able to open their eyes without committing suicide due to the madness. Gary is the one exception to that, and he becomes the downfall of the entire house. Whereas in the film Gary was killed by Tom, allowing Malorie, Tom, and the children to continue living together for years, in the novel Tom dies with everyone else in the house aside from Malorie and the children. This absolutely feels like something that was done for the Hollywood trope of allowing the protagonist and her potential love interest make it further than the others. It also sets up for the trope of Tom making a sacrificial stand later on against an aforementioned band of people who can open their eyes because they&amp;rsquo;re already insane. I feel like the film made these changes in order to have some form of more concrete antagonist and strife, for reasons I&amp;rsquo;ll touch on a little later.&lt;/p&gt;
&lt;p&gt;While the use of a car (in the novel just by judging distances on a map and then looking at the odometer) still seems extremely dubious, the overland dash that I criticized so heavily in the film doesn&amp;rsquo;t exist at all in the book. After making it through the part of the river that requires vision (more on that difference in a moment), Malorie and the children are immediately found by the other survivors and taken to the school. This means that Malorie doesn&amp;rsquo;t need the seemingly supernatural ability she had in the film to literally run through a forest while blindfolded, something that seems all but guaranteed to result in running face-first into a tree.&lt;/p&gt;
&lt;p&gt;As another major difference, on the river Malorie doesn&amp;rsquo;t need to open her eyes in order to navigate rapids that seem to be right where they would want to land the boat regardless. Instead, she has to open her eyes to see where the river forks into 4 since she needs to take the second fork from the right, meaning that she can&amp;rsquo;t merely hug one of the banks.&lt;/p&gt;
&lt;p&gt;On the whole, the story of the novel just feels much more cohesive than the disjointed mess that was the story of the film. That being said, having experienced the book I can understand (to a degree) why there were so many differences between the two and so many liberties taken to modify the story in the film. Being a visual medium, the film simply can&amp;rsquo;t replicate the same kind of terror invoked by the novel. For example, the most nerve-wracking scene of the novel to me was when Malorie goes to a bar a few blocks from the house in order to secure some equipment. Going into the bar blind, her dog Victor leads her to a cellar that, presumably from the smell, is filled with dead bodies. Suddenly, Victor&amp;rsquo;s behavior changes wildly, and it becomes clear that he is going mad.&lt;/p&gt;
&lt;p&gt;Aside from how heart-wrenching it is that the dog begins to kill itself (seriously, what is it with horrible dog scenes in both &lt;em&gt;Bird Box&lt;/em&gt; and &lt;em&gt;The Silence&lt;/em&gt;?), the horror here is two-fold. First, Malorie is literally &lt;strong&gt;hearing&lt;/strong&gt; her dog go mad, forcing her to tie its leash somewhere away from herself, blind, to prevent it from killing her. As she stays in the bar, she has to hear it gruesomely ripping itself apart as it tries to reach her. Likewise, this shows that animals are equally affected by the creatures, something that had been unknown up to this point. Even worse, though, Victor&amp;rsquo;s madness means that Malorie is not alone in the bar. &lt;strong&gt;Something&lt;/strong&gt; is in the bar with her, and it&amp;rsquo;s something so terrible that if she were to glimpse it for even a moment it would drive her insane. Is it across the bar or literally right next to her? Is there only one creature or a dozen? Malorie and the reader have absolutely no way of knowing, and it&amp;rsquo;s hair-raising to think through the terror of being unable to see in that situation. I just don&amp;rsquo;t know how the same experience can be emulated in a film since not being able to see is what makes it so terrifying.&lt;/p&gt;
&lt;p&gt;Does this change my opinion of the film at all? No, it doesn&amp;rsquo;t. While I now think the story of &lt;em&gt;Bird Box&lt;/em&gt; is a challenging one to tell through a medium that focuses so heavily on what is displayed to the consumer, I don&amp;rsquo;t believe that changes the execution of the film at all. While the film feels like a bit of a waste, though, the novel was excellent, and it gave me some visceral chills that few recent horror stories have been able to do. I would highly recommend that any fans of the genre give it a read, though especially if you were disappointed with the film.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>2020 Apple Music Replay</title>
      <link>https://hugo.unusually.pink/2020-apple-music-replay/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/2020-apple-music-replay/</guid>
      <description>At the end of each year I always look forward to my yearly music stats. I did a post back in 2018 with my Spotify Wrapped statistics, and Brandi and I did a podcast episode on our 2019 music stats. This year is a bit wonky since I used several different music services, but the most relevant metrics I got were from my 2020 Replay from Apple Music. Apple gives a few metrics after getting some flack for historically not providing anything like what Spotify does, but what they did share is at least interesting and worthy of comparison to previous years.</description>
      <content>&lt;p&gt;At the end of each year I always look forward to my yearly music stats. I did a post back in &lt;a href=&#34;https://unusually.pink/2018-in-music-spotify-wrapped/&#34;&gt;2018 with my Spotify Wrapped statistics&lt;/a&gt;, and Brandi and I did a podcast episode on our &lt;a href=&#34;https://unusuallypinkpodcast.podbean.com/e/episode-18-end-of-year-music-stats/&#34;&gt;2019 music stats&lt;/a&gt;. This year is a bit wonky since I used several different music services, but the most relevant metrics I got were from my 2020 Replay from Apple Music. Apple gives a few metrics after getting some flack for historically not providing anything like what Spotify does, but what they did share is at least interesting and worthy of comparison to previous years.&lt;/p&gt;
&lt;p&gt;Along with the metrics, Apple also provides a 2020 Replay playlist with the most played tracks for each user. Feel free to &lt;a href=&#34;https://music.apple.com/us/playlist/replay-2020/pl.rp-XWWGiykwaMlw&#34;&gt;check out mine&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&#34;time-listened&#34;&gt;Time Listened&lt;/h2&gt;
&lt;p&gt;According to Apple, in 2020 I spent &lt;strong&gt;962&lt;/strong&gt; hours listening to music, or over &lt;strong&gt;40&lt;/strong&gt; days. For the sake of comparison, in my 2018 Spotify Wrapped I listened to 845 hours of music. This is especially impressive to me when considering that I &lt;em&gt;didn&amp;rsquo;t use Apple Music for the entire year&lt;/em&gt;. I started using Apple Music in early 2020 shortly after I switched to an iPhone; prior to that I was still using Spotify for about a month. I also spent about 2 months trying out &lt;a href=&#34;https://unusually.pink/apple-music-back-in-the-saddle/&#34;&gt;Amazon Music before switching back to Apple Music&lt;/a&gt;. Similarly, I spent a good bit of time listening to music I purchased during &lt;a href=&#34;https://unusually.pink/buy-literally-anything-from-bandcamp-today/&#34;&gt;Bandcamp&amp;rsquo;s specials where all of the money went to the artists&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While I listened to far less music in 2020 while driving simply because I didn&amp;rsquo;t really drive anywhere during the pandemic, I listened to much &lt;em&gt;more&lt;/em&gt; music while working since I never had to account for anyone else being around given that I now work from home full time. If I wasn&amp;rsquo;t in a meeting or on a call, there&amp;rsquo;s a good chance that I had some music playing while I worked.&lt;/p&gt;
&lt;h2 id=&#34;artists&#34;&gt;Artists&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/phem.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;phem&lt;/p&gt;
&lt;p&gt;I listened to &lt;strong&gt;2,217&lt;/strong&gt; different artists. Suffice to say, I did a good bit of music discovery. A lot of that came from things like my personalized playlists from Apple and Apple&amp;rsquo;s curated, new music playlists in the genres I like. Plenty of it happened naturally as I would frequently go to the indie section each week, for example, and just listen to every new release that seemed interesting. While the albums sometimes wouldn&amp;rsquo;t appeal to me, on the whole it was a terrific way to find tons of new artists I wouldn&amp;rsquo;t have discovered otherwise.&lt;/p&gt;
&lt;p&gt;Many of my top artists had new album releases that I played endlessly, as we&amp;rsquo;ll see in the next section.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Grimes - 14 hours&lt;/li&gt;
&lt;li&gt;Dua Lipa - 9 hours&lt;/li&gt;
&lt;li&gt;Jinka - 8 hours&lt;/li&gt;
&lt;li&gt;Allie X - 8 hours&lt;/li&gt;
&lt;li&gt;Soccer Mommy - 7 hours&lt;/li&gt;
&lt;li&gt;HAIM - 6 hours&lt;/li&gt;
&lt;li&gt;Vita and the Woolf - 6 hours&lt;/li&gt;
&lt;li&gt;Ashnikko - 6 hours&lt;/li&gt;
&lt;li&gt;phem - 6 hours&lt;/li&gt;
&lt;li&gt;Dounia - 5 hours&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;From this list, I want to give the nod to phem for absolutely crushing it in 2020 with new releases. From her cover of &lt;a href=&#34;https://www.youtube.com/watch?v=7q5soAhn_fs&#34;&gt;Creep&lt;/a&gt; to her releases of &lt;a href=&#34;https://www.youtube.com/watch?v=p4zZB5ShvyU&#34;&gt;Self Control&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/watch?v=55XuQm3NZi8&#34;&gt;stfu&lt;/a&gt;, she was easily one of my favorite artists of the year.&lt;/p&gt;
&lt;h2 id=&#34;albums&#34;&gt;Albums&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/jinka.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Jinka&lt;/p&gt;
&lt;p&gt;I listened to &lt;strong&gt;310&lt;/strong&gt; different albums in 2020. The metrics for the individual albums are a little weird as Apple doesn&amp;rsquo;t really highlight what they mean when they count the number of times I&amp;rsquo;ve &amp;ldquo;played&amp;rdquo; an album. I &lt;em&gt;think&lt;/em&gt; they&amp;rsquo;re counting playing a track from that album as a play of the album, regardless of whether I&amp;rsquo;ve played it from the album directly or when the song was added to a playlist. Many of the albums on the list did receive the &amp;ldquo;we&amp;rsquo;re just going to play this on loop for the entire day&amp;rdquo; treatment, though.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Future Nostalgia - Dua Lipa - 127 plays&lt;/li&gt;
&lt;li&gt;No Anything Else - Jinka - 108 plays&lt;/li&gt;
&lt;li&gt;Anna Ohio - Vita and the Woolf - 75 plays&lt;/li&gt;
&lt;li&gt;color theory - Soccer Mommy - 63 plays&lt;/li&gt;
&lt;li&gt;Petals for Armor - Hayley Williams - 58 plays&lt;/li&gt;
&lt;li&gt;folklore - Taylor Swift - 51 plays&lt;/li&gt;
&lt;li&gt;Miss Anthropocene (Deluxe Edition) - Grimes - 50 plays&lt;/li&gt;
&lt;li&gt;Bad Ideas - Tessa Violet - 48 plays&lt;/li&gt;
&lt;li&gt;Cape God - Allie X - 46 plays&lt;/li&gt;
&lt;li&gt;SAWAYAMA - Rina Sawayama - 44 plays&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2020 saw a ton of great album releases. While many of them I had been eagerly anticipating, &lt;em&gt;No Anything Else&lt;/em&gt; by Jinka completely caught me off guard and was easily one of my favorites. It was an album I stumbled upon while just listening to anything new in the Apple Music indie section, and it almost immediately became one of my favorites that I played on loop for days. Literally every song on it is phenomenal, though &lt;a href=&#34;https://www.youtube.com/watch?v=jDwHtgRiwfQ&#34;&gt;QT3.14&lt;/a&gt; and &lt;a href=&#34;https://youtu.be/uDNxEYIegBc&#34;&gt;I&amp;rsquo;d Like That&lt;/a&gt; emerged as my absolute favorites.&lt;/p&gt;
&lt;h2 id=&#34;wrap-up&#34;&gt;Wrap Up&lt;/h2&gt;
&lt;p&gt;While 2020 was an awful year in plenty of regards, we had a ton of amazing new music from talented artists to help us get through it&amp;hellip; even while many of the artists creating it suffered since they weren&amp;rsquo;t able to go on tour, do shows, and sell merchandise. While I imagine that trend will continue for at least the first half of 2021 (at least in the United States, where I am), I&amp;rsquo;m excited for finally being able to see live shows again and going out of my way to support all of the artists who helped us so much. Here&amp;rsquo;s to more incredible music in 2021. If I stick with one product the entire year, I think I can easily eclipse 1000 hours of time listened!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Star Lite Mk III</title>
      <link>https://hugo.unusually.pink/star-lite-mk-iii/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/star-lite-mk-iii/</guid>
      <description>After spending some quality time with my Pinebook Pro, I decided that I wanted something slightly more powerful for my personal laptop. While most of my heavy-lifting in the world of computers is done with my MacBook Pro for work (which was recently upgraded to a device featuring the new M1 chips; look for more on that soon both here and on the Same Shade of Difference podcast), the Pinebook Pro&amp;rsquo;s extremely weak ARM processor wasn&amp;rsquo;t quite cutting it.</description>
      <content>&lt;p&gt;After spending some quality time with my &lt;a href=&#34;https://unusually.pink/unusually-pink-impressions-pinebook-pro/&#34;&gt;Pinebook Pro&lt;/a&gt;, I decided that I wanted something &lt;em&gt;slightly&lt;/em&gt; more powerful for my personal laptop. While most of my heavy-lifting in the world of computers is done with my MacBook Pro for work (which was recently upgraded to a device featuring the new M1 chips; look for more on that soon both here and on the &lt;a href=&#34;https://sameshadeofdifference.com/&#34;&gt;Same Shade of Difference podcast&lt;/a&gt;), the Pinebook Pro&amp;rsquo;s extremely weak ARM processor wasn&amp;rsquo;t quite cutting it. Even doing things like writing up blog posts in the WordPress editor would occasionally lag, and watching videos above 720p is essentially impossible. I was still infatuated with the idea of a low-cost Linux laptop, though. I love using Linux, but I didn&amp;rsquo;t exactly need a workhorse device from somewhere like &lt;a href=&#34;https://system76.com/laptops&#34;&gt;System 76&lt;/a&gt; just to write blog posts, maintain a couple of websites, watch videos, and play chess. After going down a rabbit hole of trying to find a (relatively) inexpensive Linux laptop (spoiler alert: they&amp;rsquo;re rare), I decided to pre-order the &lt;a href=&#34;https://starlabs.systems/pages/lite-mk-iii&#34;&gt;Star Lite Mk III from Star Labs&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;shipping&#34;&gt;Shipping&lt;/h2&gt;
&lt;p&gt;I originally pre-ordered the laptop in the summer, with a shipping estimate of early September. I wasn&amp;rsquo;t exactly in a rush, so that wasn&amp;rsquo;t a problem for me. The global pandemic caused something of a cascading series of delays which ultimately meant that I didn&amp;rsquo;t receive my device until mid-November. For example, production delays in China that ran behind became exacerbated when the factory closed due to &lt;a href=&#34;https://en.wikipedia.org/wiki/Golden_Week_(China)&#34;&gt;Golden Week&lt;/a&gt;. Star Labs is based in the UK, so once production and QA were done, the devices shipped from the factory in China to the UK. There they were held up in customs for an entire week before they actually reached Star Labs in order to be redistributed to the customers who pre-ordered.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t say any of this to knock Star Labs or the device; it&amp;rsquo;s just the nature of ordering something that needs to be shipped to the opposite side of the planet during a global pandemic. In fact, the team at Star Labs did really well in setting up a dedicated part of their website to post daily updates on the status starting in October so that everyone knew exactly what was going on. Kudos to them.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;p&gt;While it was about double the cost of the Pinebook Pro (my Lite Mk III was just over $400 USD when I ordered it), the device itself still feels premium to an order of magnitude higher than what I would&amp;rsquo;ve expected for the price. It came packaged up in a sleek box with a nice, blue microfiber bag around the laptop in the packaging. Another sat between the closed screen and the keyboard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/IMG_0317.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The body of the device is plastic (I&amp;rsquo;m pretty sure), but it feels &lt;strong&gt;very&lt;/strong&gt; high quality and sturdy. The hinge for the screen will almost catch me off guard with how strongly it wants to close the last few degrees, but it manages to do this in a way that doesn&amp;rsquo;t make it difficult to open, which is often a problem for such small, light laptops.&lt;/p&gt;
&lt;p&gt;The trackpad is the antithesis of what the Pinebook Pro uses. It&amp;rsquo;s glass rather than plastic, and it&amp;rsquo;s incredibly snappy. Whereas the Pinebook Pro trackpad feels clunky and inaccurate, the Like Mk III feels precise. I&amp;rsquo;ve been extremely impressed with it. The keyboard, unfortunately, it&amp;rsquo;s quite as glowing. I mean, it&amp;rsquo;s &lt;em&gt;literally&lt;/em&gt; glowing in that it&amp;rsquo;s backlit, and generally it feels good to type on with a decent bit of travel on the keys. The keys don&amp;rsquo;t always feel responsive, though, and hitting them in slightly the wrong way will often result in the keys failing to register the keystroke. I notice this most commonly in the way that I hit the L and Spacebar keys, though the problem occurs on others as well. It&amp;rsquo;s not a deal breaker, but it can be frustrating at times given that I type quickly and often have to go back and fix myriad errors. For the most part, I&amp;rsquo;m impressed with the amount of space they managed to give the keyboard on such a small device, though as I mentioned in my post about the &lt;a href=&#34;https://unusually.pink/keychron-k2-v2/&#34;&gt;Keychron K2 V2&lt;/a&gt;, the dedicated arrow keys resulted in a &lt;em&gt;tiny&lt;/em&gt; right Shift key; whereas the Shift keys are normally at least double the width of the standard letter keys, the right Shift is actually &lt;strong&gt;smaller&lt;/strong&gt; than the letter keys. Originally this resulted in my accidentally hitting the Up arrow key when I wanted to hit Shift, but after a couple of weeks I began to adjust. I&amp;rsquo;m still not perfect with it, but it&amp;rsquo;s not as problematic as I had been worried that it might be. It&amp;rsquo;s also a nice touch that, since the laptop is designed for Linux, it actually features Ctrl, Fn, Super, and Alt keys.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/IMG_0319.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The display is a rather nice 1080p IPS, which has all of the benefits and drawbacks one might expect on an 11&amp;quot; device. While everything looks extremely crisp, I have to adjust the text size in basically every application in order to be able to read anything. My eyesight is rather poor, so your mileage may vary, but for anyone with vision problems the zoom functionality and adjustable font sizes will be essential. The speakers aren&amp;rsquo;t groundbreaking, but they certainly get the job done and can be surprisingly loud.&lt;/p&gt;
&lt;p&gt;The processor is a Pentium Silver N5000 from Intel. It&amp;rsquo;s fairly low-end, but it gets the job done, and that&amp;rsquo;s exactly what I needed for the price point. It&amp;rsquo;ll occasionally stutter a bit for really heavy web pages or when firing up GIMP to do some light photo editing, but for the most part it chugs along happily. I was extremely impressed that the device actually comes with 8 GB of RAM, which is extremely helpful. I did &lt;a href=&#34;https://unusually.pink/swapfile-fix-on-manjar-linux-pinebook-pro/&#34;&gt;set up a swap file&lt;/a&gt; in order to be able to hibernate the device, but it basically stays untouched during active operation. For storage, it comes with a 240 GB over-provisioned SSD. That&amp;rsquo;s configurable up to 960 GB if you need it, though I was more than fine with 240 GB.&lt;/p&gt;
&lt;p&gt;While it&amp;rsquo;s not typically something I think too much about when getting new hardware, I have to mention that the charger for the Lite Mk III is extremely nice. It&amp;rsquo;s a slick-looking brick that comes with a blue and black braided USB-C cable. When I think of relatively inexpensive laptops, often the charger is an area where the OEM can save a little money, but that wasn&amp;rsquo;t something they opted for in this case.&lt;/p&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;p&gt;I won&amp;rsquo;t touch too much on this since the experience really comes down to which flavor of Linux you want to install. Star Labs offers most major distros as pre-installed options; I went with Manjaro XFCE since I&amp;rsquo;ve come to enjoy using Manjaro so much on my Pinebook Pro. The experience has been great so far aside from the fact that, after immediately upgrading to the latest Linux kernel after receiving my laptop, I had horrible video issues. I simply reverted back to the latest LTS kernel (which is extremely easy to do in Manjaro), and everything was fine. Ubuntu, Mint, MX Linux, and others are all offered as options and across a wide array of window managers for each. Of course, it&amp;rsquo;s simple to just reinstall any other OS whenever you want since the device is designed to facilitate that.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://starlabs.kb.help/updates-upgrades/installing-updates-from-the-lvfs/&#34;&gt;Star Labs uses the LVFS to distribute new firmware&lt;/a&gt;, and it works very well. Along with firmware for the devices that are a part of the laptop, I&amp;rsquo;ve also received firmware upgrades through it for some of my peripherals that I use with it, like my Logitech MX Ergo trackball.&lt;/p&gt;
&lt;h2 id=&#34;wrap-up&#34;&gt;Wrap-Up&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/IMG_0318.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;On the whole, I&amp;rsquo;m fairly pleased with the Lite Mk III. The unreliability of the keyboard is my only major issue that gives me some headaches. Otherwise, it&amp;rsquo;s exactly what I was looking for in a small, inexpensive Linux laptop. I really hope more Linux-focused OEMs consider making an entrance into this particular market for people who want something basically on the order of a Chromebook but without any Google nonsense.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t think I could use the Lite Mk III as my &lt;em&gt;only&lt;/em&gt; laptop, but for any Linux nerds like myself who are looking for a supplementary device it makes for a great fit. Add in the fact that the warranty allows for the device to be opened by the user and repairs made without voiding it &amp;ndash; the &lt;a href=&#34;https://starlabs.kb.help/star-lite-mk-ii/star-lite-mk-ii-complete-disassembly-guide/&#34;&gt;company even offers a disassembly guide&lt;/a&gt; &amp;ndash; and there&amp;rsquo;s a lot to like.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Adding SSH To GitHub</title>
      <link>https://hugo.unusually.pink/adding-ssh-to-github/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/adding-ssh-to-github/</guid>
      <description>Between the Thanksgiving holiday and some shifting priorities when I got back to work, I hadn&amp;rsquo;t made any new commits to my GitHub account for about 10 days. This meant that I didn&amp;rsquo;t have any new posts to my recently-launched GitCommit site that makes a bit of a microblog from my commit messages. To be honest, putting it together was really an excuse to have something up at the domain I bought, but I really like the way it turned out.</description>
      <content>&lt;p&gt;Between the Thanksgiving holiday and some shifting priorities when I got back to work, I hadn&amp;rsquo;t made any new commits to my &lt;a href=&#34;https://github.com/jfabry-noc/&#34;&gt;GitHub account&lt;/a&gt; for about 10 days. This meant that I didn&amp;rsquo;t have any new posts to my recently-launched &lt;a href=&#34;https://gitcommit.gay&#34;&gt;GitCommit&lt;/a&gt; site that makes a bit of a microblog from my commit messages. To be honest, putting it together was really an excuse to have &lt;em&gt;something&lt;/em&gt; up at the domain I bought, but I really like the way it turned out. After making a fresh commit yesterday, though, I received an email from GitHub telling me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You recently used a password to access the repository at jfabry-noc/OxidizedBackup with git using git/2.25.1.&lt;/p&gt;
&lt;p&gt;Basic authentication using a password to Git is deprecated and will soon no longer work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It also included a link to their &lt;a href=&#34;https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/&#34;&gt;authentication requirements documentation&lt;/a&gt;. On the whole it made sense to me; I typically would just have &lt;code&gt;git&lt;/code&gt; remember my credentials so that I never had to enter them. In the new setup, I would &lt;em&gt;have&lt;/em&gt; to enter them, though I could configure how long they would remain cached. On the surface, this didn&amp;rsquo;t bother me, and I went about my day making several additional commits beyond the first. Later on, though, I realized that my new commits weren&amp;rsquo;t appearing on the GitCommit site. The site is hosted by &lt;a href=&#34;https://netlify.com&#34;&gt;Netlify&lt;/a&gt;, and it works by polling my GitHub account via a &lt;code&gt;cron&lt;/code&gt; job every 4 hours (I&amp;rsquo;m hoping to eventually update it to use webhooks to have commit information pushed to it, but I haven&amp;rsquo;t had an opportunity yet.) When a new commit happens, my code pulls the repository, the commit message, and the timestamp. It then updates the HTML and automatically makes an &lt;em&gt;additional&lt;/em&gt; commit on its own repository (yes, I included code to avoid an endless repost loop.) Netlify has been configured to look at only the &lt;strong&gt;html&lt;/strong&gt; directory in the repository, dynamically updating whenever a new change is commited to that directory, much like how &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; or any other CI web hosting works.&lt;/p&gt;
&lt;p&gt;Since my new commits weren&amp;rsquo;t showing up, I first checked the &lt;a href=&#34;https://github.com/jfabry-noc/GitCommit&#34;&gt;GitHub repo for GitCommit&lt;/a&gt;. No new HTML changes had been commited to it. Next, I went to the VPS which executes the &lt;code&gt;cron&lt;/code&gt; job. For my own sanity, I long ago learned that I should implement some type of logging for any code that I plan to run automatically so that I can easily troubleshoot it during this exact situation. Checking the log file, I saw that my code &lt;em&gt;did&lt;/em&gt; successfully find the new commits and update the appropriate HTML file. It was able to make the expected commit, and running &lt;code&gt;git status&lt;/code&gt; even confirmed that my local repository was ahead of the remote by 2 commits. However, running the following didn&amp;rsquo;t work to push my changes up to GitHub so that Netlify could see them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git push origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Suddenly it clicked, and I realized that the change from earlier in the day was the culprit; my code could no longer &lt;code&gt;git push&lt;/code&gt; because that was now prompting for a password that would never be typed given that the code was executed by &lt;code&gt;cron&lt;/code&gt;. To confirm, I manually executed the script from my SSH session and saw the password prompt appear. Ick.&lt;/p&gt;
&lt;p&gt;Fortunately, I realized that I wouldn&amp;rsquo;t need a password if I was syncing my repository via SSH rather than HTTPS. SSH would allow me to use certificates instead. First, I had to generate a new public-private key pair with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;ssh-keygen -t ed25519 -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email@email.com&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Yeah, I&amp;rsquo;m not telling you my email address. I&amp;rsquo;ll give you a hint; it&amp;rsquo;s &lt;a href=&#34;mailto:something@unusually.pink&#34;&gt;something@unusually.pink&lt;/a&gt;. Good luck. The above command asked for a couple of things such as the location where I wanted to store the keys and if I wanted to add a password for accessing them. I just took the defaults. Next up, I had to start a background SSH agent and tell it to use the private key I had just generated:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ssh-agent -s&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
ssh-add ~/.ssh/id&lt;span style=&#34;color:#ae81ff&#34;&gt;\_&lt;/span&gt;ed25519
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With everything set on the client side, I now had to tell GitHub to use my public key for any SSH interactions. They have &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/adding-a-new-ssh-key-to-y&#34;&gt;very solid documentation&lt;/a&gt; available with the exact steps. Just be sure you actually copy the content of the &lt;strong&gt;public&lt;/strong&gt; key into GitHub rather than the private key. GitHub won&amp;rsquo;t accept the private key because the formatting is wrong, but the very fact that I pasted it there made me paranoid enough to regenerate the pair and do it again.&lt;/p&gt;
&lt;p&gt;To test things out, I tried to clone one of my private repositories via the SSH link, which you can select from the tabs when trying to clone anything from GitHub.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/github_ssh.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;That worked successfully and verified that my keys were properly identifying me. The last step was to update the local repository for GitCommit to use a new URL for the remote repository. Regardless of whether I&amp;rsquo;m using HTTPS or SSH, I still run &lt;code&gt;git push origin main&lt;/code&gt; in order to sync it to the remote; the configuration of the local repository is what specifies which URL is used. In order to flip mine from HTTPS to SSH, I simply ran the following from my local directory for GitCommit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git remote set-url origin git@github.com:jfabry-noc/GitCommit.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After this, I re-ran my script and &lt;code&gt;git push&lt;/code&gt; was able to successfully push my code to the remote without any interaction. After working through many commits today, I verified that my website was updated as expected.&lt;/p&gt;
&lt;p&gt;As a bonus note, astute readers may recall the issues I had following the published steps to sync the &lt;a href=&#34;https://unusually.pink/all-dracula-everything/&#39;&#34;&gt;Dracula theme for git&lt;/a&gt;. This was the exact same scenario where the instructions assumed that SSH was in use rather than HTTPS.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Books: The Silence</title>
      <link>https://hugo.unusually.pink/books-the-silence/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/books-the-silence/</guid>
      <description>Nearly a year and a half ago, I went on a movie binge and watched The Silence. My consensus was that the movie itself was pretty poorly executed with nearly enough plot holes to make me overlook how interesting the overall premise of the story happened to be. I had written:
 Just like with Bird Box, I think the idea is interesting, but the execution of the film was just awful.</description>
      <content>&lt;p&gt;Nearly a year and a half ago, I went on a &lt;a href=&#34;https://unusually.pink/boredom-movie-binge/&#34;&gt;movie binge and watched &lt;em&gt;The Silence&lt;/em&gt;&lt;/a&gt;. My consensus was that the movie itself was pretty poorly executed with nearly enough plot holes to make me overlook how interesting the overall premise of the story happened to be. I had written:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just like with &lt;em&gt;Bird Box&lt;/em&gt;, I think the idea is interesting, but the execution of the film was just awful. I’ll be curious if the book does a better job.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I had recently taken a little time off around Thanksgiving, and since the ongoing pandemic means I couldn&amp;rsquo;t really go out and &lt;strong&gt;do&lt;/strong&gt; anything, I spent a good bit of time at home reading. During that week, I managed to finish the novel &lt;em&gt;The Silence&lt;/em&gt;, and I feel like I can safely say it was &lt;strong&gt;significantly&lt;/strong&gt; better than the film.&lt;/p&gt;
&lt;p&gt;The main plot hole from the film was just how a single, isolated cave system, even if it was relatively massive as far as caves are concerned, could house enough of the creatures to be literally overtaking cities. The novel elegantly addresses the development of the creatures by having Ally follow news of the creatures and their spread online while her family is attempting to flee to safety. She regularly follows official news reports, government statements, reports on social media, and compiles as much knowledge as she can while her family drives, and the novel&amp;rsquo;s end wraps that up as though Ally&amp;rsquo;s parts of the novel &lt;strong&gt;are&lt;/strong&gt; her compilation. During her research, she finds several mentions of the creatures having a rapid reproduction and development cycle, where the eggs of the young are left inside of a kill so that they can eat upon hatching. The creatures are described as being born able to fly and further reproduce themselves, with theories that the oxygen-rich surface has significantly accelerated their development. Is that a reasonable explanation? I honestly have no idea, but as someone who knows nothing about biology it works for me and plugs a potential hole that the film left gaping open.&lt;/p&gt;
&lt;p&gt;The novel also takes a much more reasonable stance on the ability of the creatures to hear that makes the situation the characters find themselves in difficult without being completely impossible. For example, when the family is hunkering down in a remote house, they&amp;rsquo;re able to do simple things like cooking and talking quietly without arousing the interest of the creatures flying around outside.&lt;/p&gt;
&lt;p&gt;Perhaps the biggest difference, though, is the portrayal of the cult which becomes interested in Ally. While cutting out your own tongue in order to be unable to speak is still completely insane (along with nonsensical since not being able to speak &lt;strong&gt;isn&amp;rsquo;t&lt;/strong&gt; the same as being unable to vocalize sound), in the novel it&amp;rsquo;s at least a span of a couple of weeks before the cult is encountered. Even if it&amp;rsquo;s nuts, it at least seems a little better than going that drastic on the second day of the apocalypse. More importantly, though, the cult is interested in Ally not because &amp;ldquo;she&amp;rsquo;s fertile&amp;rdquo; like they were in the film, but because she knows sign language and can communicate effectively without speaking. That makes &lt;strong&gt;significantly&lt;/strong&gt; more sense, and has an interesting effect through the novel where the family becomes mindful of hiding their ability to communicate via sign language from other people they encounter.&lt;/p&gt;
&lt;p&gt;Finally, I found the conclusion of the novel to be much more interesting than that of the film. In the film, the family finds a refuge and it seems like they will be able to survive there; Ally is even reunited with her boyfriend (who isn&amp;rsquo;t actually her boyfriend in the film, but it wouldn&amp;rsquo;t be a campy American film without a love interest to go along with the Kumbaya ending.) The novel&amp;rsquo;s ending is much more open. Huw and Kelly are both badly injured from their final encounter with the cult, leaving Ally and Jude to lead the family. It&amp;rsquo;s heavily implied that Huw in particular has serious injuries but no way to address them. Ally has encountered the same information she finds in the film, which is that the creatures can&amp;rsquo;t tolerate the cold, but there&amp;rsquo;s nothing more concrete than that. However, the implication that what the reader has been experiencing is Ally&amp;rsquo;s compilation of their journey and her information on the creatures is extremely important. The novel ends with Ally&amp;rsquo;s note that there&amp;rsquo;s no longer any power, the Internet hasn&amp;rsquo;t been available, and that she&amp;rsquo;ll continue to carry the iPad she&amp;rsquo;s been using to document everything even though she doesn&amp;rsquo;t know if she&amp;rsquo;ll ever be able to power it on again to access the information she&amp;rsquo;s gathered. The fact that the reader is experiencing that information, though, implies that &lt;strong&gt;someone&lt;/strong&gt; has been able to power the iPad again, be that Ally herself or someone who found the device. Regardless of Ally&amp;rsquo;s fate, clearly the electricity is working again somewhere.&lt;/p&gt;
&lt;p&gt;Suffice to say, I found the novel &lt;em&gt;The Silence&lt;/em&gt; to be a very enjoyable read. While the swapping perspectives of first-person with Ally and third-person for Huw is a bit jarring, I got used to it quickly and found it provided better insight and storytelling than solely seeing things from Ally&amp;rsquo;s point of view. I think anyone who enjoyed the film would benefit from this better telling of the story, and anyone who, like me, was disappointed by the film but found the premise interesting will be happy with the story as it was meant to be told. I think my next book will be &lt;a href=&#34;https://unusually.pink/illness-movie-binge/&#34;&gt;&lt;em&gt;Bird Box&lt;/em&gt; so I can see if that novel also overcomes my disappointment with the film&lt;/a&gt;.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>macOS Big Sur pip Installation Error</title>
      <link>https://hugo.unusually.pink/macos-big-sur-pip-installation-error/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/macos-big-sur-pip-installation-error/</guid>
      <description>Given that I have technological FOMO while also being a technology masochist, I upgraded my 2018 MacBook Pro to macOS 11 &amp;ldquo;Big Sur&amp;rdquo; as soon as it was available. Common sense dictates that I should have waited a while to let others encounter and fix some of the kinks prior to upgrading myself, but what&amp;rsquo;s the fun in that? I admittedly had a very smooth experience without many issues, and I&amp;rsquo;ve been happily on Big Sur for a few weeks now.</description>
      <content>&lt;p&gt;Given that I have technological FOMO while also being a technology masochist, I upgraded my 2018 MacBook Pro to macOS 11 &amp;ldquo;Big Sur&amp;rdquo; as soon as it was available. Common sense dictates that I should have waited a while to let others encounter and fix some of the kinks prior to upgrading myself, but what&amp;rsquo;s the fun in that? I admittedly had a very smooth experience without many issues, and I&amp;rsquo;ve been happily on Big Sur for a few weeks now. I encountered my first big error a few days ago, though, while helping a friend with some Python code. We needed to use the &lt;a href=&#34;https://www.paramiko.org&#34;&gt;&lt;code&gt;paramiko&lt;/code&gt;&lt;/a&gt; package, which I didn&amp;rsquo;t have installed. I tried to install it with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo pip3 install paramiko
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This was the first time I tried to use &lt;code&gt;pip3&lt;/code&gt; to install a Python package since upgrading to Big Sur, and I was immediately rewarded with an entire screen&amp;rsquo;s worth of cascading error messages. I took a little time to parse through them before hitting on something that seemed fairly key:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;clang: error: invalid version number in &amp;lsquo;MACOSX_DEPLOYMENT_TARGET=11.0&amp;rsquo;&lt;/p&gt;
&lt;p&gt;error: command &amp;lsquo;/usr/bin/clang&amp;rsquo; failed with exit code 1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It seemed that the &lt;code&gt;clang&lt;/code&gt; compiler was unhappy with the fact that the targeted version of macOS was 11.0. This makes sense to me since all of the releases of macOS, back to when it was called OS X in 2001, were numbered 10.x.y. Big Sur was the first version of macOS in nearly two decades to bump the version from 10 to 11, and apparently my &lt;code&gt;clang&lt;/code&gt; configuration &lt;em&gt;really&lt;/em&gt; didn&amp;rsquo;t like that. Figuring that in 2 weeks since the release of Big Sur someone else had surely attempted to install some Python 3 packages, I started searching online. Plenty of responses recommended updating the Xcode CLI tools via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo softwareupdate --all --install --force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I gave this a shot, but I simply got a message stating there weren&amp;rsquo;t any updates available. I kept digging and finally hit upon a &lt;a href=&#34;https://stackoverflow.com/questions/63972113/big-sur-clang-invalid-version-error-due-to-macosx-deployment-target&#34;&gt;Stackoverflow thread&lt;/a&gt; with a solution that involved manually deleting the directory with the Xcode CLI tools and then reinstalling. I assumed that this wouldn&amp;rsquo;t do anything since the tooling didn&amp;rsquo;t see any needed updates in the first place, but on a whim I tried it. First I nuked the &lt;code&gt;/Library/Developer/CommandLineTools&lt;/code&gt; directory with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo rm -rf /Library/Developer/CommandLineTools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once that was done, I kicked off reinstalling the CLI tools via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This initially estimated that it would take over 2 hours, followed by 20 minutes, followed by 2 minutes. Wildly inaccurate time estimates aside, after waiting a minute or two I had the tooling available once again. I tried to install &lt;code&gt;paramiko&lt;/code&gt;, and was happily greeted with the progress indicators as it compiled along with all of its dependencies. I tried some quick code calling the package, and sure enough everything worked successfully. It&amp;rsquo;s curious to me that checking for updates shows nothing, but reinstalling the Xcode CLI tools still resolves the issue. My guess is there is a configuration file somewhere that needs to be updated, and it gets both created and configured at the time of installation. This would mean I opted for the nuclear option when a bit more finesse would have sufficed, but with things working I didn&amp;rsquo;t feel like trying to dig through configuration files to verify when I had code to write.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>RememBear Password Manager</title>
      <link>https://hugo.unusually.pink/remembear-password-manager/</link>
      <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/remembear-password-manager/</guid>
      <description>A few weeks ago I received an email offering to let me try the premium variant of the RememBear password manager for a year for free. I assume that I received this since I currently have an active TunnelBear subscription that I use for my VPN. I didn&amp;rsquo;t bother looking into things too closely, but my understanding is that you can normally use RememBear for free, but syncing your passwords between multiple devices requires a premium subscription&amp;hellip; meaning that in 2020 when people have a phone, a tablet, and at least one computer, a premium subscription is basically a requirement.</description>
      <content>&lt;p&gt;A few weeks ago I received an email offering to let me try the premium variant of the &lt;a href=&#34;https://www.remembear.com/&#34;&gt;RememBear&lt;/a&gt; password manager for a year for free. I assume that I received this since I currently have an active TunnelBear subscription that I use for my VPN. I didn&amp;rsquo;t bother looking into things too closely, but my understanding is that you can normally use RememBear for free, but syncing your passwords between multiple devices requires a premium subscription&amp;hellip; meaning that in 2020 when people have a phone, a tablet, and at &lt;strong&gt;least&lt;/strong&gt; one computer, a premium subscription is basically a requirement. I figured that I may as well give it a shot in order to see if it could possibly tide me over until &lt;a href=&#34;https://unusually.pink/dropbox-passwords/&#34;&gt;Dropbox Passwords&lt;/a&gt; is a bit more mature; a year of free service seems like a good bit of time for the Dropbox team to improve upon their product.&lt;/p&gt;
&lt;p&gt;The RememBear apps for macOS, iOS, and iPadOS are all very slick. They feature the same cute, cartoon bear as TunnelBear. If I type in my master password on macOS, the bear will even move its head to follow along as I type. That being said, typing in my master password happens infrequently since the apps on all 3 platforms work really well with Touch ID and Face ID.&lt;/p&gt;
&lt;p&gt;The apps on all 3 platforms also do well with auto-filling passwords for me, including with the browser extension for Safari on macOS. Likewise, the iPadOS app is, mercifully, an iPad application rather than the expanded iOS app. I did run into a few random bugs on macOS where the application would be blank after unlocking it, showing as if I didn&amp;rsquo;t have any logins stored. I saw another issue where my logins were all listed, but using the search feature wouldn&amp;rsquo;t return any results even if there were matches. In both cases, closing out of the application and re-opening it fixed the problem, and I only encountered each bug once.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/remembear.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Adding new devices or recovering your account is streamlined with a QR code mechanism that leverages another device which already has RememBear configured on it. This makes the setup quick and easy, though it remains unclear what recourse there is if the master password itself is lost and no other devices are configured. They don&amp;rsquo;t give you anything like the secret word list for Dropbox Passwords or the secret key from 1Password.&lt;/p&gt;
&lt;p&gt;One of the nice benefits to RememBear over the immaturity of Dropbox Passwords is that it does offer an option for creating and syncing secure notes. I frequently use these for things like saving WiFi pre-shared keys. Unfortunately, I&amp;rsquo;ve had to start using these for saving API keys, too, because RememBear doesn&amp;rsquo;t offer the option to add multiple credential fields for each login. I can also store them, much as I did with Dropbox Passwords, in the provided notes section for each login, though it does make copying and pasting the keys a bit more annoying than in something like 1Password or Bitwarden which simply give you the option to add multiple credential fields.&lt;/p&gt;
&lt;p&gt;The biggest issue with Dropbox Passwords, though, is unfortunately shared with RememBear: there is no web-only option. Installing the browser extension for Firefox, for example, will not work on my Manjaro Linux laptops because the desktop client is still expected and there is no Linux application. This was really surprising to me since one of the reasons I initially started using &lt;a href=&#34;https://unusually.pink/chromebooks-vpns-and-you/&#34;&gt;TunnelBear as my VPN service was due to the fact that they offered a standalone browser extension that I could use back when I had Chromebooks&lt;/a&gt; which couldn&amp;rsquo;t install any type of full-fledged VPN client. Given that RememBear has been around for at least a few years and is by no means a new product, I did a little bit of digging to see if there were any plans to support Linux or Chrome OS (while I no longer use Chromebooks because Google is pretty gross, Chrome OS support would indicate a standalone browser extension.) The latest I could find was a comment from May of 2019 on the &lt;a href=&#34;https://chrome.google.com/webstore/detail/remembear/ehpbfbahieociaeckccnklpdcmfaeegd&#34;&gt;Chrome extension&lt;/a&gt; which simply confirmed Linux and Chrome OS weren&amp;rsquo;t supported.&lt;/p&gt;
&lt;p&gt;With its slick, cute, and bear-laden UI, RememBear is probably one of the nicest-looking and most user-friendly password managers around. For the overwhelming majority of people, it also likely ticks all of the boxes they would care about as far as features are concerned. Any Linux users out there, though, will be disappointed with the complete inability to use it with their operating system of choice. Here&amp;rsquo;s to hoping for web support or a standalone browser extension at some point in the future, but for the time being Linux aficionados are better off sticking with something like 1Password or Bitwarden.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Keychron K2 V2</title>
      <link>https://hugo.unusually.pink/keychron-k2-v2/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/keychron-k2-v2/</guid>
      <description>I recently ran into a problem with my keyboard at home, a Logitech K350, AKA a Logitech Wave; the O key stopped reliably working. Sometimes it would work fine, sometimes it would work only when pressed with an excessive amount of force no touch-typist could reliably muster (at which point the key would clank down awkwardly), and sometimes it just wouldn&amp;rsquo;t work at all. Unsurprisingly, the letter O is one that I use with a good bit of regularly, so this presented a problem.</description>
      <content>&lt;p&gt;I recently ran into a problem with my keyboard at home, a &lt;a href=&#34;https://www.logitech.com/en-us/product/wireless-keyboard-k350?crid=27&#34;&gt;Logitech K350&lt;/a&gt;, AKA a Logitech Wave; the O key stopped reliably working. Sometimes it would work fine, sometimes it would work only when pressed with an excessive amount of force no touch-typist could reliably muster (at which point the key would clank down awkwardly), and sometimes it just wouldn&amp;rsquo;t work at all. Unsurprisingly, the letter O is one that I use with a good bit of regularly, so this presented a problem. I decided to go ahead and order a new keyboard and started sizing up my options. I didn&amp;rsquo;t do much research, though, before &lt;a href=&#34;http://craftbrewgeek.com&#34;&gt;Craft Brew Geek&lt;/a&gt; recommended the &lt;a href=&#34;https://www.keychron.com/products/keychron-k2-wireless-mechanical-keyboard?variant=31063869751385&#34;&gt;Keychron K2 V2&lt;/a&gt;. He hadn&amp;rsquo;t used one but had seen positive feedback on it from some highly respected people (MKBHD, anyone?), and I think he wanted someone he knew to try it out before he decided if he should get one. I was happy to oblige after doing a little research of my own and seeing almost exclusively positive feedback.&lt;/p&gt;
&lt;p&gt;The first thing worth noting is that this is &lt;strong&gt;Version 2&lt;/strong&gt;. That&amp;rsquo;s important because you can find the first version floating around on the cheap. It&amp;rsquo;s important to not mix them up, though; the initial offering of the K2 was fraught with problems that V2 tackles nicely. V2 comes in a few different variants based on the lighting and body style that you want, along with how much you want to pay. I went for the variant with RGB lighting (cool but not that important) and an aluminum frame (extremely important.) I had read online that the keyboard sans frame was light to a detriment without enough weight to properly hold it down on the desk. I did pay more for the frame, but with the build and the features, this is still relatively cheap in the world of mechanical keyboards.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/keychron_1.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The K2 is a TKL (tenkeyless) keyboard, meaning that it doesn&amp;rsquo;t have a number pad. Unlike many other TKL models, though, it has 84 keys because it still features dedicated arrow keys &lt;em&gt;and&lt;/em&gt; dedicated Home, End, Page Up, and Page Down keys. Memorizing another function layer for keyboards that don&amp;rsquo;t feature dedicated keys like this isn&amp;rsquo;t the end of the world, but I view having them as a significant quality of life bonus.&lt;/p&gt;
&lt;p&gt;The bigger quality of life bonus, though, falls to the keycaps. The K2 features macOS-based keycaps. It comes with replacement keycaps for Windows in case you use an &lt;strong&gt;that&lt;/strong&gt; operating system and need to swap Option for Windows and Command for Alt. This is pretty common among mechanical keyboards, though it&amp;rsquo;s worth mentioning that the K2 has a dedicated physical toggle to control if it&amp;rsquo;s operating in macOS or Windows mode; most keyboards use a software function for that. The bigger difference, though, is in the function row. Along with having the standard F1 - F12 markings, the keycaps also show the corresponding macOS function. As a macOS user, I can&amp;rsquo;t stress how helpful it is to have the keycaps appropriately marked so that I know which key is going to turn up my volume and which one will launch Exposé, for example. As another quality of life bonus, the K2 also features a dedicated screenshot key that&amp;rsquo;s the equivalent of hitting Command + Shift + 4 on macOS. That&amp;rsquo;s extremely cool in my opinion.&lt;/p&gt;
&lt;p&gt;On top of all of this, Keychron also provides orange keycaps that you can opt to use on Escape and on the key which controls the backlighting. I thought they looked snazzy and decided to use them, though you can swap to more standard keys if you wish. I was also a pleasant surprised that a wire keycap puller was included rather than one of the cheaper plastic ones that&amp;rsquo;s all but guaranteed to scratch up your keycaps. While there are plenty of dedicated keys, there&amp;rsquo;s even more functionality of the K2 tucked behind key combinations in conjunction with the Function key. The included instruction booklet clearly highlights all of these, and it was a matter of minutes to get everything configured the way I wanted it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/keychron_2.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The lighting in my photo isn&amp;rsquo;t great, but rest assured that you can eschew RGB in favor of locking the lights in to a nice shade of pink.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m the type of person who rarely uses any type of adjustable riser on my keyboards, and this was one of the biggest flaws with the original take on the K2; it was almost completely flat. V2 of the K2 has a nice, gentle slope that&amp;rsquo;s pretty much exactly where I want it to be. For those who want more of an angle, there are 2 sets of adjustable feet on the bottom. The official website only calls out the difference of 9 degrees, which has to be for the more drastic of the pairs. I&amp;rsquo;d guess the other is 4 degrees, but I wasn&amp;rsquo;t about to dig up a protractor to find out. The default slope makes for a &lt;em&gt;very&lt;/em&gt; nice typing experience for me, so I haven&amp;rsquo;t even worried about the feet beyond confirming that they exist.&lt;/p&gt;
&lt;p&gt;Typing on the K2 is an overall pleasant experience with one minor issue I&amp;rsquo;ll touch on later. Keychron offers three choices of switch: Gateron Blues, Browns, and Reds. This was my only real hesitance in deciding to buy the keyboard since I&amp;rsquo;ve always been a stickler for Cherry switches. I opted for the Gateron Browns even though I would prefer Blues simply because I&amp;rsquo;m using this keyboard for work, and I don&amp;rsquo;t need my typing to be any louder than it already is while I&amp;rsquo;m thundering out 120 WPM on calls. While the Gateron Browns don&amp;rsquo;t feel &lt;em&gt;quite&lt;/em&gt; as nice as Cherry Browns in my opinion, they&amp;rsquo;re &lt;em&gt;really&lt;/em&gt; close. Both Cherry and Gateron Browns even actuate at the same 55 grams. I feel good that my concern over the switches wasn&amp;rsquo;t warranted.&lt;/p&gt;
&lt;p&gt;The K2 can connect to devices either via Bluetooth or USB-C. I&amp;rsquo;ll likely never use it via Bluetooth if my Plum Nano serves as any indication, so USB-C will be my go-to method. This is where one of the two issues I have with the K2 V2 comes into play. The USB-C port is on the &lt;em&gt;left&lt;/em&gt; side of the keyboard rather than the back, which you can see in the top image. The provided USB-C cable accounts for this by connecting at a right-angle so that it can immediately be directed behind the board, and this seems to work fine&amp;hellip; as long as I have &lt;em&gt;that&lt;/em&gt; cable. If I&amp;rsquo;m ever forced to use a different, more standard cable, that&amp;rsquo;s going to make for a janky setup.&lt;/p&gt;
&lt;p&gt;The other issue I have with the K2 V2 I hesitate to even really call an &amp;ldquo;issue&amp;rdquo;; it&amp;rsquo;s more something I need to adjust to a little bit as a touch-typist. The right Shift key is a little bit shorter than it would be on a standard ANSI QWERTY keyboard. This is done to allow for the dedicated arrow keys. I would say that 98% of the time (yes, I&amp;rsquo;m completely making up this number), it&amp;rsquo;s not an issue. The other 2% of the time, I accidentally extend my pinky just a bit too far and hit the up arrow or awkwardly catch the edge of the Shift key. It&amp;rsquo;s not a huge ordeal, and as someone who has periodically dealt with using ISO keyboards before I know I&amp;rsquo;ll adjust quickly; it feels worth mentioning, though. It&amp;rsquo;s also good practice for me since my &lt;a href=&#34;https://starlabs.systems/pages/lite-mk-iii&#34;&gt;Starlabs Lite Mark III&lt;/a&gt; that&amp;rsquo;s currently sitting in customs in the UK has a much shorter right Shift key for the exact same reason.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/starlabs_lite_mk3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;On the whole, I&amp;rsquo;ve been &lt;em&gt;extremely&lt;/em&gt; pleased with the K2 V2 so far. I&amp;rsquo;ve used it for a little over a week, generally spending 9 - 14 hours a day on it between work, training, and personal projects. It&amp;rsquo;s a treat to type on, the functionality is nice without being overkill, and I think the size really hits the sweet spot between not taking over my desk and not forcing me to re-adjust it every 5 lines of code because it&amp;rsquo;s constantly moving; the aluminum frame that I opted for undoubtedly helps it in that regard. I really do think that for $90 USD you could do significantly worse, and the K2 V2 has features and a build quality I&amp;rsquo;d be expecting from a mechanical keyboard in the $120 - $150 USD price range. I think this is a great keyboard for anyone, but especially if you&amp;rsquo;re a macOS user in the market for a mechanical keyboard, the Keychron K2 V2 would be a smart place to start.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Apple Music: Back in the Saddle</title>
      <link>https://hugo.unusually.pink/apple-music-back-in-the-saddle/</link>
      <pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/apple-music-back-in-the-saddle/</guid>
      <description>For anyone who listens to the Same Shade of Difference podcast, you may have heard a brief discussion between Mark and I about how I had switched from Apple Music to Amazon Music. I&amp;rsquo;ve previously been a fan of Spotify, though I became increasingly irritated with the focus they started giving podcasts rather than music. I know it&amp;rsquo;s weird coming from someone who has spent the past couple of years creating podcasts, but I don&amp;rsquo;t listen to them.</description>
      <content>&lt;p&gt;For anyone who listens to the &lt;a href=&#34;https://sameshadeofdifference.com&#34;&gt;Same Shade of Difference&lt;/a&gt; podcast, you may have heard a brief discussion between Mark and I about how I had switched from Apple Music to Amazon Music. I&amp;rsquo;ve previously been a fan of &lt;a href=&#34;https://unusually.pink/2018-in-music-spotify-wrapped/&#34;&gt;Spotify&lt;/a&gt;, though I became increasingly irritated with the focus they started giving podcasts rather than music. I know it&amp;rsquo;s weird coming from someone who has spent the past couple of years creating podcasts, but I don&amp;rsquo;t listen to them. Additionally, I don&amp;rsquo;t really want them being advertised to me when I&amp;rsquo;m trying to look for music. When I swapped to an iPhone about a year ago, I decided to try out Apple Music since I could get a few months of it for free. After my free 3 months, I decided to stick with it. Recently, though, I swapped away from it and decided to give Amazon Music a shake. After about a month and a half, though, I quickly abandoned ship back to Apple Music.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s start with why I left Apple Music in the first place. After all, I use a MacBook Pro, an iPhone, and an iPad. Shouldn&amp;rsquo;t Apple Music be my best choice? The main issue is that the Apple Music application on macOS is, to be blunt, a dumpster fire. The application has a plethora of issues when it comes to responsiveness and playback. &amp;ldquo;Did I accidentally &lt;em&gt;miss&lt;/em&gt; clicking on that button or is the application just being super slow?&amp;rdquo; is a question I find myself asking on the regular. The biggest issue, though, is when it just randomly decides to either 1.) not load or 2.) skip every song as though playback is unavailable. It&amp;rsquo;s not at all uncommon, for example, for me to click the &lt;strong&gt;Browse&lt;/strong&gt; option from the menu only to be presented with a completely blank UI. No buttons, no albums, no genres. All I can do is quit the application, re-launch it, and hope for the best. In other instances, Apple Music will rapid-fire skip through tracks as though they&amp;rsquo;re unavailable. It&amp;rsquo;ll select a track from whatever album or playlist I&amp;rsquo;m trying to listen to, pause for a second or two, immediately skip to the next track, and just repeat this endlessly. Searching online shows plenty of people experiencing the same issues. Usually some secret handshake combination of signing out and back in, de-authorizing and re-authorizing the device, and switching networks (yes, really) will sometimes take care of the problem. It&amp;rsquo;s frustrating to the extreme.&lt;/p&gt;
&lt;p&gt;With that being said, what would make someone switch back? First, let&amp;rsquo;s talk about what&amp;rsquo;s good about Amazon Music. The application on both macOS and iOS/iPadOS is rock-solid. I didn&amp;rsquo;t experience any errors, playback problems, bugs, etc. Beyond that, though, it was just an &lt;em&gt;incredibly&lt;/em&gt; lackluster experience; while there wasn&amp;rsquo;t anything I&amp;rsquo;d qualify as &amp;ldquo;bad&amp;rdquo;, there also wasn&amp;rsquo;t anything I&amp;rsquo;d qualify as &amp;ldquo;good&amp;rdquo;. To start off, the application regularly would pester me about doing a free trial for their Premium offering that allows you to stream music at a higher bit-rate. It would offer 3 months of that, after which time it would automatically swap me from paying the standard $10 USD a month that everyone charges for their individual plan to $15 a month. Hard pass.&lt;/p&gt;
&lt;p&gt;While that was irritating, the bigger issue was the lack of personalized content. Apple Music and Spotify both offer a handful of customized playlists each week showcasing music that you like, music to fit different moods, etc. Amazon Music gives you &lt;strong&gt;one&lt;/strong&gt;; you get a discovery playlist, and it doesn&amp;rsquo;t even necessarily focus on new releases. That was a major letdown for me.&lt;/p&gt;
&lt;p&gt;I had initially thought that I would just step up the manual work to discover music on my own, but this is where Amazon Music really fell apart. As anyone who knows me is likely already aware, I listen mostly to indie music. Amazon Music doesn&amp;rsquo;t even delineate indie into its own genre; to see indie music, I had to browse through the &amp;ldquo;Alternative&amp;rdquo; section. This means that when I&amp;rsquo;m trying to check out new releases for discovery, I&amp;rsquo;m shifting through garbage like Coldplay while trying to reach gold like &lt;a href=&#34;https://youtu.be/32kiLOylCFM&#34;&gt;Falcon Jane&lt;/a&gt;. Music discovery in Amazon Music quickly became less enjoyable and more frustrating. To make matters worse, shortly before I switched away from it, the macOS application received a complete overhaul that did away with the normal ability to browse through different genres and playlists. Everything suddenly revolved around searching, and while it worked to get me to the same content as before, it was ultimately a very clunky and unintuitive experience.&lt;/p&gt;
&lt;p&gt;The nail in the coffin, though, was that Amazon Music doesn&amp;rsquo;t bother to get the rights to a not insignificant amount of international music. For example, when &lt;a href=&#34;https://www.youtube.com/watch?v=GywDFkY3z-c&#34;&gt;Lee Suhyun&amp;rsquo;s track ALIEN&lt;/a&gt; released, I was surprised to see that it wasn&amp;rsquo;t available on Amazon Music. The same thing happened with &lt;a href=&#34;https://www.youtube.com/watch?v=oBTxxpYre3g&#34;&gt;Reol&amp;rsquo;s track Q?&lt;/a&gt;. At this point, I realized that I just really needed to switch to a different service.&lt;/p&gt;
&lt;p&gt;So now the last big question: why did I switch &lt;em&gt;back&lt;/em&gt; to Apple Music instead of going back to something like Spotify? There were several reasons. One of the big ones is that I&amp;rsquo;ve been interested in subscribing to &lt;a href=&#34;https://www.apple.com/apple-one/&#34;&gt;Apple One&lt;/a&gt;. I was wanting to bump my iCloud storage space up a little bit, and if I was using Apple Music then it seemed like the easy decision that would also get me access to Apple TV+ and Apple Arcade. Additionally, I&amp;rsquo;ve been interested in the Apple HomePod for a while but never wanted to spend the $300 USD on one; when they started dropping to $200 USD over the past few months, I figured that had to be due to something new and exciting being on the horizon. Sure enough, the &lt;a href=&#34;https://www.apple.com/homepod-mini/&#34;&gt;HomePod Mini&lt;/a&gt; recently released, and I decided to pull the trigger on one. While Apple Music &lt;em&gt;does&lt;/em&gt; work with Amazon Echo devices, of which I have several, I figure the HomePod Mini will offer a much more elegant experience. The final reason is pure laziness; I didn&amp;rsquo;t want to bother with trying to update all of my playlists yet again. When I moved from Spotify to Apple Music, I spent more time than I care to admit moving all of my playlists over by hand. When I decided to try out Amazon Music, I went through the same process &lt;em&gt;again&lt;/em&gt;. I didn&amp;rsquo;t relish the thought of moving nearly a year&amp;rsquo;s worth of playlist updates from Amazon Music to Spotify; if I stuck with Apple Music I&amp;rsquo;d only have to worry about catching up my playlists on the last month of content&amp;hellip; a month that was a bit of a discovery drought due to the issues already mentioned.&lt;/p&gt;
&lt;p&gt;After switching back, I&amp;rsquo;ve already discovered significantly more music than I had while I was using Amazon. I&amp;rsquo;ve also run into a couple of issues with the macOS application for Apple Music, but I&amp;rsquo;m trying to keep my hopes up that things will be better with it on the new Macs running on the M1 chip. In the meantime, I&amp;rsquo;ve updated the links on both my &lt;a href=&#34;https://unusually.pink/about/&#34;&gt;About page&lt;/a&gt; and &lt;a href=&#34;https://jfabhd.com&#34;&gt;jfabhd.com&lt;/a&gt; to point to my &lt;a href=&#34;https://music.apple.com/profile/jfabhd&#34;&gt;Apple Music profile&lt;/a&gt;; feel free to scope out my playlists!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Books: Attack Surface</title>
      <link>https://hugo.unusually.pink/books-attack-surface/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/books-attack-surface/</guid>
      <description>Attack Surface is the latest novel by amazing author and journalist Cory Doctorow. Cory is one of those people with whom almost anyone interested in digital rights and online privacy is likely at least somewhat familiar. While I followed Cory on Twitter (back when I still used Twitter) from my early days on the platform and regularly read his content on Boing Boing, I never read any of his books until Craft Brew Geek convinced me (not that it took a lot of convincing) to read Little Brother and Homeland.</description>
      <content>&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://craphound.com/category/attacksurface/&#34;&gt;Attack Surface&lt;/a&gt;&lt;/em&gt; is the latest novel by amazing author and journalist &lt;a href=&#34;https://craphound.com/&#34;&gt;Cory Doctorow&lt;/a&gt;. Cory is one of those people with whom almost anyone interested in digital rights and online privacy is likely at least &lt;strong&gt;somewhat&lt;/strong&gt; familiar. While I followed Cory on &lt;a href=&#34;https://twitter.com/doctorow&#34;&gt;Twitter&lt;/a&gt; (back when I still used Twitter) from my early days on the platform and regularly read his content on &lt;a href=&#34;https://boingboing.net/author/cory_doctorow_1&#34;&gt;Boing Boing&lt;/a&gt;, I never read any of his books until &lt;a href=&#34;http://craftbrewgeek.com&#34;&gt;Craft Brew Geek&lt;/a&gt; convinced me (not that it took a lot of convincing) to read &lt;em&gt;&lt;a href=&#34;https://craphound.com/littlebrother/download/&#34;&gt;Little Brother&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&#34;https://craphound.com/homeland/download/&#34;&gt;Homeland&lt;/a&gt;&lt;/em&gt;. The two are young adult novels in a series that ostensibly address the fallacy of &amp;ldquo;I don&amp;rsquo;t need to worry about my privacy if I have nothing to hide.&amp;rdquo; While categorized as science fiction, the books are set in a &lt;em&gt;very&lt;/em&gt; near future, featuring invasive technologies that are either 1.) actually present today or 2.) aren&amp;rsquo;t that far off. The novels should essentially be required reading at this point for anyone who uses technology (i.e. basically everyone.) They were the topic of &lt;a href=&#34;https://www.dropbox.com/sh/v9yvrhsoahu2vlw/AAB_JaXv3isvQjVyIMdlPHm6a?dl=0&#34;&gt;Episode 15 of the Unusually Pink Podcast&lt;/a&gt;, while Mark and I more recently discussed them in the &lt;a href=&#34;https://sameshadeofdifference.com/episodes/it-s-the-end-of-the-world-as-we-know-it&#34;&gt;Same Shade of Difference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Attack Surface&lt;/em&gt; is the 3rd novel in the series. Set a few years after the events of &lt;em&gt;Homeland&lt;/em&gt;, it switches things up a little bit by focusing on one of the supporting characters from the first two novels, Masha. In the first two novels, Masha has been on the inside of extremely invasive government surveillance programs and also has had some whistleblower run-ins. &lt;em&gt;Attack Surface&lt;/em&gt; zeroes in on her perspective.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/attack_surface_cover.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In a vacuum, I feel like &lt;em&gt;Attack Surface&lt;/em&gt; is an &lt;strong&gt;extremely&lt;/strong&gt; good book, and I would highly recommend that everyone give it a read. It provides a very real and very terrifying look into the type of surveillance that&amp;rsquo;s possible in the world of state-sponsored threat actors. Operational security guidelines are almost always prefaced with the idea that not everyone has the same opsec requirements. &lt;em&gt;Attack Surface&lt;/em&gt; showcases the absolute worst case scenario of state-sponsored ATPs and what they&amp;rsquo;re capable of doing in terms that aren&amp;rsquo;t very far-fetched. I also enjoyed the change of Masha becoming the main character. In my opinion, at least for the first two thirds of the novel, she provided a nice dose of realistic pragmatism that contrasts sharply with the almost wistful naïveté provided by Marcus in the first two books. That being said, I&amp;rsquo;m a bit more critical of the writing in &lt;em&gt;Attack Surface&lt;/em&gt; than I was with &lt;em&gt;Little Brother&lt;/em&gt; and &lt;em&gt;Homeland&lt;/em&gt; for reasons that I&amp;rsquo;ll get into a little later on. Likewise, I feel like the novel had an excellent opportunity to really set itself apart from the first two books in the series, but in the end it kind of fizzled out into more of the same.&lt;/p&gt;
&lt;p&gt;As I mentioned previously, &lt;em&gt;Little Brother&lt;/em&gt; and &lt;em&gt;Homeland&lt;/em&gt; are categorized as young adult novels; the publisher, Tor, published them under their Tor Teen line. &lt;em&gt;Attack Surface&lt;/em&gt; is published under Tor, and from the start of the novel it&amp;rsquo;s apparent why. I haven&amp;rsquo;t dug into things to see if this was the intent, but it certainly feels like the novel is aimed at a slightly older audience. Masha regularly drinks to excess and enjoys using colorful language; maybe that&amp;rsquo;s why I enjoyed her so much as a protagonist. The subject matter for the book often ventures into areas untouched by the first two novels; Masha regularly deals with sexual harassment, the violence depicted is frequently more severe than before, and a rape is described with enough detail to make anyone with a moral compass feel uncomfortable and angry at the same time. Personally, I feel like this setup works well, if indeed that was the goal. Readers who may have actually been in the &amp;ldquo;young adult&amp;rdquo; range when the first two books came out would likely now be old enough to be looking for something with a bit more substance to it.&lt;/p&gt;
&lt;p&gt;However, I feel like this comes with an additional price tag for an author when it comes to telling the story, and I didn&amp;rsquo;t feel as though &lt;em&gt;Attack Surface&lt;/em&gt; was really up to the task. The story is told alternating between Masha operating at the present and Masha reliving moments of her past. It&amp;rsquo;s a nice technique that slowly bridges the gap between what happened behind the scenes in material not covered in the first two novels and brings Masha up to speed in the present. Only&amp;hellip; it doesn&amp;rsquo;t. After covering how Masha originally got started with the DHS and how she moved into the private sector with security contracting for the government, it covers how she eventually came under scrutiny for possessing the classified intelligence she had that she gave to Marcus in &lt;em&gt;Homeland&lt;/em&gt;. After the resolution of &lt;em&gt;Homeland&lt;/em&gt;, though, there&amp;rsquo;s just a massive gap in time. At the start of &lt;em&gt;Attack Surface&lt;/em&gt;, Masha is working for yet another security contract firm&amp;hellip; after she was literally kidnapped and imprisoned in Costa Rica by the last one? What on Earth has to happen to make someone decide that&amp;rsquo;s a good decision? While it may be easy to think sweeping those details under the rug isn&amp;rsquo;t a big deal, I personally think it&amp;rsquo;s &lt;em&gt;extremely&lt;/em&gt; relevant when she spends such a significant amount of time in the present debating her lifestyle and what her next security job should be even while she grapples with the knowledge that the work she&amp;rsquo;s been doing doesn&amp;rsquo;t make the world a better place. She has direct, firsthand knowledge of the seedy inner workings, rife with illegality and no one questioning if because we can means we should. This seems like a hole in the plot extremely relevant to Masha&amp;rsquo;s present state of mind.&lt;/p&gt;
&lt;p&gt;Likewise, the ending just felt haphazard to me. Masha ends up moving back to Berlin to do&amp;hellip; what? No one knows. She laments multiple times throughout the novel that she has a lot of money at her disposal but not &lt;em&gt;that&lt;/em&gt; much money. Being able to continue earning money is a common quandary for her when she&amp;rsquo;s trying to figure out her next move, and she ends up giving up many opportunities for that during the climax of the story. Are things good for her? Did she end up making an even bigger sacrifice than she had conceived in the moment? I feel like the latter could have added some gravitas and made the climax less campy.&lt;/p&gt;
&lt;p&gt;Speaking of the novel&amp;rsquo;s climax, as mentioned before I couldn&amp;rsquo;t help but feel disappointed that it just turned out to essentially be the same as the first two novels. The book started out very strong and very different from the rest of the series, with Masha doing contract work in a fictional eastern European country simmering on the brink of revolution against an authoritarian government. Masha is playing both sides, installing intrusive Internet trackers by day and helping protesters avoid them by night. Shit hits the fan almost immediately, which leads to Masha being terminated from her position. She ends up going back to the United States, and by the halfway point of the novel Marcus and Ange are once again prominent characters. The story settles into a bit of a familiar routine, and suddenly it&amp;rsquo;s up to the same handful of white kids to save the Bay Area&amp;hellip; for the &lt;strong&gt;third&lt;/strong&gt; time. I know I&amp;rsquo;m tainted a bit by my view as a jaded millennial, but that was &lt;strong&gt;why&lt;/strong&gt; I liked Masha&amp;rsquo;s pragmatic and frankly realistic outlook so much. While I understand that part of the novel is exploring her personal growth while she changes her viewpoint, I saw the erosion of that pragmatism to the same flavor of &amp;ldquo;everything&amp;rsquo;s going to work out if we stick together and do the right thing!&amp;rdquo; viewpoint coming straight from Saturday morning cartoons in the 90&amp;rsquo;s and spouted by Marcus as disappointing. The unrealistic kumbaya session after the final protest could have been tempered a bit if we had more details of Masha&amp;rsquo;s aftermath, but as I mentioned that information wasn&amp;rsquo;t shared.&lt;/p&gt;
&lt;p&gt;If anyone is still reading this, they&amp;rsquo;re likely confused as to why I said at the start of the post that &lt;em&gt;Attack Surface&lt;/em&gt; is an extremely good book since all I&amp;rsquo;ve done over the past 5 paragraphs is rip into it. I really &lt;strong&gt;do&lt;/strong&gt; think it was a good book, but it&amp;rsquo;s a good book in the way that &lt;em&gt;Little Brother&lt;/em&gt; and &lt;em&gt;Homeland&lt;/em&gt; were already good books. I don&amp;rsquo;t feel like &lt;em&gt;Attack Surface&lt;/em&gt; did anything to differentiate itself; it&amp;rsquo;s basically telling the same story for the third time, and that&amp;rsquo;s why I&amp;rsquo;m so critical of it. I feel as though the first half of the novel set the plot up to tell a fresh story with a fresh take and fresh consequences to a more mature audience. Instead, it played things safe by going back to the same story we&amp;rsquo;ve heard twice before. While that&amp;rsquo;s a strong and important story, don&amp;rsquo;t get me wrong, &lt;em&gt;Attack Surface&lt;/em&gt; could have been so much more.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Even More Storage: Yearly Bonuses For Paid ProtonMail Accounts</title>
      <link>https://hugo.unusually.pink/even-more-storage-yearly-bonuses-for-paid-protonmail-accounts/</link>
      <pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/even-more-storage-yearly-bonuses-for-paid-protonmail-accounts/</guid>
      <description>It&amp;rsquo;s no secret around this blog or for anyone who listened to the Unusually Pink Podcast that I&amp;rsquo;m a fan of ProtonMail. While it&amp;rsquo;s unfortunate that privacy in the world of computing often comes with an associated monetary cost, the simple fact of the matter is that if you aren&amp;rsquo;t paying for your email account then chances are the provider is making money off of your data that happens to be stored in it.</description>
      <content>&lt;p&gt;It&amp;rsquo;s no secret &lt;a href=&#34;https://unusually.pink/protonmail-bonus-storage/&#34;&gt;around this blog&lt;/a&gt; or for anyone who listened to the &lt;a href=&#34;https://www.dropbox.com/sh/v9yvrhsoahu2vlw/AAB_JaXv3isvQjVyIMdlPHm6a?dl=0&#34;&gt;Unusually Pink Podcast&lt;/a&gt; that I&amp;rsquo;m a fan of ProtonMail. While it&amp;rsquo;s unfortunate that privacy in the world of computing often comes with an associated monetary cost, the simple fact of the matter is that if you &lt;em&gt;aren&amp;rsquo;t&lt;/em&gt; paying for your email account then chances are the provider is making money off of your data that happens to be stored in it. Google, for example, is happy to give you free email so that they can scrape your data out of it and make a comprehensive profile about your life for advertising purposes. ProtonMail takes a firm stance against this practice, and they actually &lt;em&gt;do&lt;/em&gt; permit users to create completely free email accounts that are never scraped or monitored; their setup actually ensures that they couldn&amp;rsquo;t access the plaintext content of your email even if they wanted to. Doing this is only possible, though, because some users opt to pay for additional features and thus subsidize the free accounts. I happen to be one of those people who has been paying for a few years now both to help support the ProtonMail mission and to get access to a custom domain in my account.&lt;/p&gt;
&lt;p&gt;ProtonMail occasionally likes to give special perks to their paid customers as a token of appreciation; I&amp;rsquo;ve written before about how they&amp;rsquo;ve &lt;a href=&#34;https://unusually.pink/protonmail-bonus-storage/&#34;&gt;given away a bonus 5 GB of storage for paid accounts&lt;/a&gt;. They&amp;rsquo;ve done the same thing another time since that post, giving me 10 GB of bonus storage on top of the 5 GB that comes with my paid plan. While I said at the time of my original post that I didn&amp;rsquo;t really need the storage at the moment but was happy to have the extra bits just in case, ProtonMail has subsequently stated that the storage can be shared with the upcoming ProtonDrive secure cloud storage offering once that&amp;rsquo;s available.&lt;/p&gt;
&lt;p&gt;As another token of gratitude, ProtonMail has announced regular storage increases for paid accounts; each year that a paid account remains active, it receives 1 GB of bonus storage on the anniversary. Even better, this is retroactive. Since I&amp;rsquo;ve had a paid account for 3 years, when the initiative was implemented I immediately received 3 GB of bonus storage. I&amp;rsquo;ll get a 4th GB on my yearly anniversary coming up later this month:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The general principle is straightforward:&lt;/p&gt;
&lt;p&gt;- When you sign up for any paid Proton plan, you are automatically eligible for Storage Bonuses.&lt;/p&gt;
&lt;p&gt;- On the one year anniversary of your paid subscription, you will receive 1 GB of additional storage for free that can be used with your ProtonMail inbox. (In the future, your storage will be shared between your ProtonMail inbox and your ProtonDrive vault.)&lt;/p&gt;
&lt;p&gt;- This will happen every year, and your Storage Bonuses will accumulate as long as you have a paid plan with Proton without interruption.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While the current bonus value is 1 GB right now, they say this will increase in the future, though it&amp;rsquo;s unclear if the increase is also retroactive or if it will only apply to new bonus accumulations going forward:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The current Storage Bonus is 1 GB per year, but this will be increased in the future.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The full details are available, along with a FAQ, from &lt;a href=&#34;https://protonmail.com/support/knowledge-base/storage-bonus/?utm_campaign=ww-en-2c-mail-coms_email-storage_reward_email&amp;amp;utm_source=proton_users&amp;amp;utm_medium=email&amp;amp;utm_content=mail_paid%3E1yr&amp;amp;utm_term=learn_more_about_storage_here&#34;&gt;their support article&lt;/a&gt;. The tl;dr is basically that you get bonus storage every year on the anniversary of your paid account as long as you remain with a paid subscription on &lt;em&gt;any&lt;/em&gt; Proton product. This means that if you pay for ProtonVPN but not ProtonMail, you&amp;rsquo;re still eligible for the bonus storage. That eligibility and current storage accumulation continues to apply even if you stop paying for ProtonVPN and start paying for ProtonMail (or ProtonDrive when it comes out) as long as the two periods overlap. Having a lapse in paid subscription will reset the accumulation of bonus storage.&lt;/p&gt;
&lt;p&gt;All told, I think it&amp;rsquo;s another nice perk from ProtonMail, and with the ability to leverage the storage for ProtonDrive, a product that I&amp;rsquo;m &lt;em&gt;highly&lt;/em&gt; looking forward to, the more storage that I can get my hands on the better.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Books: Hands On Hacking</title>
      <link>https://hugo.unusually.pink/books-hands-on-hacking/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/books-hands-on-hacking/</guid>
      <description>While I&amp;rsquo;ve been stuck at home as the global coronavirus pandemic rages on (currently on day 241 of quarantine, for those who listen to the Same Shade Of Difference), I&amp;rsquo;ve been trying to make the most of my time in captivity with lots of reading, training, and personal projects to learn as much new stuff as I can. One of the items that came on to my radar a few months ago was a new infosec book titled Hands On Hacking from Wiley.</description>
      <content>&lt;p&gt;While I&amp;rsquo;ve been stuck at home as the global coronavirus pandemic rages on (currently on day 241 of quarantine, for those who listen to the &lt;a href=&#34;https://sameshadeofdifference.com/&#34;&gt;Same Shade Of Difference&lt;/a&gt;), I&amp;rsquo;ve been trying to make the most of my time in captivity with lots of reading, training, and personal projects to learn as much new stuff as I can. One of the items that came on to my radar a few months ago was a new infosec book titled &lt;em&gt;&lt;a href=&#34;https://www.wiley.com/en-us/Hands+on+Hacking-p-9781119561453&#34;&gt;Hands On Hacking&lt;/a&gt;&lt;/em&gt; from Wiley. Written in part by &lt;a href=&#34;https://twitter.com/hackerfantastic&#34;&gt;Hacker Fantastic&lt;/a&gt;, who I&amp;rsquo;ve followed on Twitter for quite a few years across my various accounts, I figured it would be a good refresher for some of the hacking concepts I&amp;rsquo;ve used before and a primer for newer tooling that I&amp;rsquo;m not as familiar with.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/hands_on_hacking.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see from the book&amp;rsquo;s cover, the idea is to teach &amp;ldquo;purple teaming&amp;rdquo;, which is the idea of doing away with the silos for the &amp;ldquo;red team&amp;rdquo; that tries to breach systems and the &amp;ldquo;blue team&amp;rdquo; that tries to defend them. The book covers the full gamut of hacking, starting with open source information gathering to get as much data as you can about your target before actively engaging with any of their systems all the way through compromising web applications and moving laterally through internal systems.&lt;/p&gt;
&lt;p&gt;All throughout, the book uses purple teaming as a focus; it very clearly outlines that taking part in any of the activities covered without the express consent of the owners of the system can carry &lt;em&gt;severe&lt;/em&gt; legal penalties. The goal is to assist you with either a career as a penetration tester or to give you the tools and knowledge to be able to pen test and secure your own systems that you manage. You will &lt;em&gt;not&lt;/em&gt; read the book and immediately find yourself living the life of a &lt;em&gt;Mr. Robot&lt;/em&gt; character.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/hackerman.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The book, in my opinion, is &lt;em&gt;very&lt;/em&gt; well written. While I was familiar with most of the concepts covered, I think it was written in a way that makes the material approachable even for readers without much prior knowledge in the world of infosec. That being said, while there is a good bit of hand-holding in the introduction to Linux, I think there are some basic, assumed competencies in the world of computing. I don&amp;rsquo;t think that&amp;rsquo;s a fault; you really have to draw the line somewhere, and I think the authors did a fantastic job of making everything as approachable as possible.&lt;/p&gt;
&lt;p&gt;The book comes with a complete lab environment with virtual machines pre-configured to be exploitable in a fashion to demonstrate the concepts covered in each chapter of the book, giving readers the option to either read the book purely for information or to work through the labs and practice executing the material discussed. In my mind it&amp;rsquo;s essentially like a self-guided, DIY version of something like the excellent &lt;a href=&#34;https://www.mcafee.com/enterprise/en-us/services/foundstone-services.html&#34;&gt;Foundstone&lt;/a&gt; Ultimate Hacking class that I was fortunate enough to take a few years ago.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re already a skilled hacker, is the book going to enlighten you to new, next-level exploits? Definitely not. But if you&amp;rsquo;re a systems administrator who is responsible for the managing servers at your company, a SaaS admin responsible for identities, or a developer responsible for creating applications exposed to the Internet at large, it&amp;rsquo;ll give you a very solid baseline for making sure that your own systems aren&amp;rsquo;t vulnerable to the most egregious of issues. I personally found the open source intelligence gathering chapter &lt;em&gt;very&lt;/em&gt; useful; it covered techniques and services for determining the amount of information about your company and specific details regarding the employees that&amp;rsquo;s available to literally anyone with an interest in finding out more. It&amp;rsquo;s allowed me to work through setting up some scripts to automatically check on this and notify me when perhaps more information is leaking out than it should due to things like 3rd party breaches where users may have signed up with a company email address.&lt;/p&gt;
&lt;p&gt;Similarly, I think the book is also a good read for leadership-level people who may not need to know the technical details of how hacks are accomplished but need to be mindful of what&amp;rsquo;s possible and what their employees should be looking for when developing and administering systems. These readers likely don&amp;rsquo;t need to go through things like achieving the exploits themselves in the lab (though obviously it&amp;rsquo;s cool if they want to), but the book can serve as a nice reference for what the company&amp;rsquo;s employees &lt;em&gt;should&lt;/em&gt; be looking for when they decide to roll out a new service or application.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Trying Out NextDNS</title>
      <link>https://hugo.unusually.pink/trying-out-nextdns/</link>
      <pubDate>Sat, 31 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/trying-out-nextdns/</guid>
      <description>I recently decided to take a little bit of time to set up NextDNS. While on the surface it&amp;rsquo;s similar to the myriad other DNS resolvers out there you can opt to use instead of the likely horrible DNS servers provided by your ISP, NextDNS is essentially a cloud-based Pi-hole. You can use some of the built-in blacklists in the product to block things like advertising, trackers, malware domains, and more.</description>
      <content>&lt;p&gt;I recently decided to take a little bit of time to set up &lt;a href=&#34;https://nextdns.io/&#34;&gt;NextDNS&lt;/a&gt;. While on the surface it&amp;rsquo;s similar to the myriad other DNS resolvers out there you can opt to use instead of the likely horrible DNS servers provided by your ISP, NextDNS is essentially a cloud-based &lt;a href=&#34;https://pi-hole.net/&#34;&gt;Pi-hole&lt;/a&gt;. You can use some of the built-in blacklists in the product to block things like advertising, trackers, malware domains, and more. There are a few key benefits to blocking things at the DNS level rather than relying on something to do the blocking your web browser. First off, most mobile browsers don&amp;rsquo;t offer the same robust extension ecosystems we&amp;rsquo;re all used to with full computers; you might be able to toggle some settings to block trackers, for example, but advertising is often a different beast altogether (though the &lt;em&gt;really&lt;/em&gt; bad advertisements typically also have egregious tackers, meaning that blocking the trackers will block the ads.) Additionally, there are some nefarious browser extension posing as ad-blockers, and there have been instances of &lt;a href=&#34;https://arstechnica.com/information-technology/2020/10/popular-chromium-ad-blockers-caught-stealing-user-data-and-accessing-accounts/&#34;&gt;legitimate extensions being sold and turned nefarious&lt;/a&gt;. Google&amp;rsquo;s &lt;a href=&#34;https://9to5google.com/2019/01/22/google-chrome-break-ad-blockers/&#34;&gt;extremely sleazy war on ad-blocking&lt;/a&gt; also makes DNS-based filtering attractive, though I&amp;rsquo;d still recommend people avoid Chromium-based browsers if at all possible. The other nice part is that you can easily configure DNS settings on a router, meaning the same degree of protection can apply to IoT devices with no accessible network settings of their own. This similarly applies to applications on your computer that connect to the network outside of a browser, as we&amp;rsquo;ll see later.&lt;/p&gt;
&lt;p&gt;NextDNS handles this by allowing you to specify your public IP address in their portal, thus linking traffic from your home with your NextDNS profile and all of the configurations that are in place there. The only caveat to it is needing to configure DDNS in some way or simply remembering to go to the portal in order to update the IP address should it ever change. Additionally, they offer apps for basically every major platform for configuring your devices and pointing them to the appropriate account. While you &lt;em&gt;can&lt;/em&gt; just update the DNS settings in your host operating system rather than using an app, the app is still required for linking your device to your profile so that it will leverage the appropriate block lists. What I found to be &lt;em&gt;really&lt;/em&gt; nice was that the iOS and iPad apps are able to leverage the new iOS 14 DNS profiles, meaning that it &lt;em&gt;doesn&amp;rsquo;t&lt;/em&gt; need to create a shell VPN tunnel just for your DNS requests; that&amp;rsquo;s a huge win.&lt;/p&gt;
&lt;p&gt;To really test it out, for about 2 weeks I disabled the ad-blockers in my common browsers and tried to let NextDNS handle the brunt of my filtering needs. Getting it configured everywhere was fairly simple. The web portal will tell you what your current public IP is and offers a simple button to update your account to leverage that IP address. This made it simple to get basically everything in my home network using it after I modified the DNS servers in my router. I still went ahead and configured the settings individually on my devices, too, for the rare instance during a global pandemic when I&amp;rsquo;m on a network other than my home network. The iOS and iPad apps just need you to tap a button to add the new DNS profile to the device. Likewise, the macOS app simply adds a new icon to your tray at the top-right and offers a toggle for turning on your NextDNS settings. Unsurprisingly, there&amp;rsquo;s no Manjaro Linux app, though the service offers a bevy of examples for configuring your DNS settings on Linux; you&amp;rsquo;re just stuck in the position of not being able to link the device to your NextDNS account if you happen to leave the home network. The only real problem I ran into was that I had configured Firefox to use DNS over HTTPS and forgotten about it; once I realized I needed an additional change beyond the OS DNS settings, everything was fine.&lt;/p&gt;
&lt;p&gt;Operating this way, for the most part browsing the web was business as usual. Not &lt;em&gt;quite&lt;/em&gt; as many advertisements were being blocked as I would have expected with a browser extension enabled (more on that later), but on the whole the experience was still positive. What really surprised me, though, was the degree to which IoT devices are just an absolute dumpster fire; checking the metrics NextDNS generates showed that anywhere from 10 - 20% of my total DNS requests were being blocked, but nearly all of the top 10 blocked domains were based on under-the-hood queries being made by my devices phoning home rather than from actual advertising or tracking on web pages. All of this is nicely showcased with graphs in the NextDNS portal:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/next_dns_graphs-1024x403.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;While I expected the combined privacy invasion of my two Amazon Echo devices to be the worst offender, my single Roku device actually took the top spot by a significant margin. My top 10 blocked domains were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scribe.logs.roku.com - 17,226&lt;/li&gt;
&lt;li&gt;device-metrics-us-2.amazon.com - 1,327&lt;/li&gt;
&lt;li&gt;telemetry.dropbox.com - 1,121&lt;/li&gt;
&lt;li&gt;giga.logs.roku.com - 1,095&lt;/li&gt;
&lt;li&gt;device-metrics-us.amazon.com - 794&lt;/li&gt;
&lt;li&gt;mads.amazon-adsystem.com - 717&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The only non-device domain making the top 10 was from telemetry queries from Dropbox, the frequency of which was a bit disturbing. Roku really caught me off guard, though, with a single device making over 18,000 queries in just a couple of weeks. While using more domains, the two Echo devices made under 3,000 (which is still really bad!)&lt;/p&gt;
&lt;p&gt;As a bit of an aside, I was curious if the devices would simply give up on whatever they were phoning home about and drop the information or if they were storing it locally to upload in a bulk at the first opportunity. I ended up disabling NextDNS on my router around 9 AM and checked on the traffic of both my Echo and my Roku, neither of which were being actively used at the time. The Roku showed zero data use since the time I had been streaming with it the night before:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/roku_wifi_small.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The Echo, on the other hand, &lt;em&gt;immediately&lt;/em&gt; spiked with network usage to transmit who-knows-what. That&amp;rsquo;s nice and terrifying:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/echo_wifi_small.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The other insight I found particularly interesting was just how deeply some of the biggest players on the web have their claws embedded across the Internet. For example, I don&amp;rsquo;t think any big Internet company is more evil than Facebook (though Google is trying hard), so I created a custom blocklist preventing &lt;code&gt;facebook.com&lt;/code&gt; from resolving. This prevents not just Facebook from loading but also some of Facebook&amp;rsquo;s other properties. For example, I hate and don&amp;rsquo;t use Instagram, but some friends occasionally send me posts from there. Instagram straight up won&amp;rsquo;t work if the main Facebook domain can&amp;rsquo;t be resolved. How gross is that?&lt;/p&gt;
&lt;p&gt;NextDNS operates by giving you 300,000 customized DNS queries per month where your policies and blacklists will be applied. After 300k queries, the service will act like a normal DNS resolver; while your devices won&amp;rsquo;t suddenly stop having functioning DNS, they won&amp;rsquo;t be benefiting from any of the blocks you might be expecting. For just a couple of dollars a month, you can get access to unlimited DNS queries, and subscribing for a year gives a month for free. I found staying on top of my query usage to be a bit confusing, though. As is shown in the screenshot above, my total number of queries for the month is provided, along with how many were blocked. I was averaging around 30,000 queries per day on this graph. I realized after the first week, though, that going into my account settings in the NextDNS portal gave me a &lt;em&gt;different&lt;/em&gt; metric on how many of my free queries had been used, and the data there was significantly lower. I ended my testing after using 280,000 queries according to the analytics graph, while my account settings showed that I had used just shy of 200,000 queries. I have no idea how those two numbers are different by 80,000 queries, especially when the two weeks of testing were done in the same month.&lt;/p&gt;
&lt;p&gt;While I liked NextDNS, it wasn&amp;rsquo;t perfect. I had mentioned previously that the blocking wasn&amp;rsquo;t quite as good as what I&amp;rsquo;d expect from just relying on an extension when browsing the web. The main reason I could see for this is that some companies host trackers and advertising on the same domain they use for other, more legitimate purposes. For example, checking the &lt;a href=&#34;https://unusually.pink/safari-14/&#34;&gt;blocked tracking metrics within Safari 14&lt;/a&gt; showed that &lt;code&gt;bing.com&lt;/code&gt; was still high in the running. Naturally a service like NextDNS can&amp;rsquo;t just block the entire Bing domain without breaking plenty of services people actually might want to use. If &amp;ldquo;close enough&amp;rdquo; satisfies your needs for blocking ads then I could see NextDNS being a good solution. If you&amp;rsquo;re like me and want to block &lt;em&gt;everything&lt;/em&gt;, though, then you&amp;rsquo;re still going to need extensions in your browser, and that makes the value proposition for paying for something like NextDNS for unlimited queries a bit less tenable. What ultimately made the decision for me, though, was that I ended up running into a handful of issues with the app I used the most: the one on macOS. I&amp;rsquo;m willing to own that the issue might stem from my setup or my device, as my MacBook has 4 different VPN clients on it that I use (and frequently switch between) for work, the network stack on the device crashes with semi-regular frequency, and my home network is &lt;em&gt;significantly&lt;/em&gt; more convoluted than most. What I saw, though, was that my DNS queries would periodically just fail. Trying to &lt;code&gt;dig&lt;/code&gt; from the CLI would give me a timeout error, like the NextDNS servers weren&amp;rsquo;t responding. Pings to known IP addresses worked fine. If I turned off the NextDNS macOS application, then everything worked fine. Toggling it back on would result in broken queries again. Fixing this was a mixed back that ranged from completely closing and re-launching the app to disabling my wireless network in macOS all the way to rebooting my laptop. Between that problem and the fact that it wasn&amp;rsquo;t a standalone blocking solution for me, I opted to not dive into paying for the service, even though it has a lot of promise and &lt;em&gt;does&lt;/em&gt; keep my Roku from being the chattiest device possible.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>SSIDs Everywhere</title>
      <link>https://hugo.unusually.pink/ssids-everywhere/</link>
      <pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/ssids-everywhere/</guid>
      <description>As someone who has been an apartment dweller for a relatively long time, there are some extremely solid perks to it. It&amp;rsquo;s nice to never have to worry about things like maintenance, for example; if something goes wrong, I open a service ticket and someone shows up to fix the problem. When my furnace wouldn&amp;rsquo;t start on a cold day, for example, I wasn&amp;rsquo;t scrambling to figure out who to call.</description>
      <content>&lt;p&gt;As someone who has been an apartment dweller for a relatively long time, there are some extremely solid perks to it. It&amp;rsquo;s nice to never have to worry about things like maintenance, for example; if something goes wrong, I open a service ticket and someone shows up to fix the problem. When my furnace wouldn&amp;rsquo;t start on a cold day, for example, I wasn&amp;rsquo;t scrambling to figure out who to call. There are some downsides as well, though. For one, many people are frustrated by the fact that they can&amp;rsquo;t customize their home to the degree they&amp;rsquo;d like with respect to things like the color of the walls. Anyone who knows me knows that I couldn&amp;rsquo;t possibly care less about that. What &lt;em&gt;does&lt;/em&gt; give me grief, though, is how significantly the spectrum around me is completely polluted by my neighbors.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ssids.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I had issues with this in my last apartment, which was roughly the same size as my current apartment but with a longer, narrower layout than my current home. When I moved my home office to the bedroom, which was at the opposite side of the apartment from where my router was, I saw a noticeable performance decrease in my home network; this was a problem when I was working from home and an even &lt;strong&gt;bigger&lt;/strong&gt; problem when I was trying to reach Platinum in Overwatch (spoiler alert, I didn&amp;rsquo;t manage to do it.) At the time, I replaced my cheap home router with a mesh WiFi setup so that I could utterly drown out my neighbors with sheer WiFi dominance. I ended up buying a pack of 3 access points because it was only slightly more expensive than buying 2 access points individually. That was more than enough to blanket my 900 square foot apartment, and I didn&amp;rsquo;t really think too much about my setup after that.&lt;/p&gt;
&lt;p&gt;Fast forward to my current apartment, which is located in a much more populous area than where I previously lived. Pre-pandemic, I still didn&amp;rsquo;t think too much about my home network setup. The only bandwidth-intensive activity I did was video streaming, and that was mainly done from streaming sticks connected to my TV that was literally right on top of the router/access point connected to my modem; I never ran into issues with it. After the pandemic kicked into high gear in this area, though, I started living from my home office and spending unholy amounts of time on web conferences. While they worked well enough most of the time, I&amp;rsquo;d periodically have spikes of extremely high latency that would cause me to sound like Megatron&amp;rsquo;s cousin while on calls. This was annoying on work calls and infuriating when &lt;a href=&#34;https://unusually.pink/the-dumpster-fire-of-remote-podcasting/&#34;&gt;trying to record podcast episodes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At first I assumed that the problem had to be upstream with my ISP being overloaded since suddenly everyone was staying home all the time. As the problem persisted, though, it made less and less sense to me. It would be reasonable if this behavior happened during the evenings when everyone is sitting around binge-watching their favorite shows because they can&amp;rsquo;t go out. When my network is choking to death on a 9 AM call, I was scratching my head. Surely not enough people could be doing video calls at that time, right? While latency affects VOIP traffic heavily, it isn&amp;rsquo;t exactly the most bandwidth-intensive thing to be doing in 2020.&lt;/p&gt;
&lt;p&gt;Thinking my mesh network was the problem, I even tried ripping it out and replacing it with a single router connected to my modem. While it at first seemed to have a bit more stability, I still ran into some of the same problems. Finally, I realized that I was seeing a &lt;em&gt;lot&lt;/em&gt; of networks when I just looked at what was available from any of my client devices. I fired up WiFi Explorer and was presented with this nightmare.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/wifi_explorer-1024x456.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re thinking that looks disgusting, you&amp;rsquo;re correct. Every channel in both the 2.4 GHz and 5 GHz bands is completely packed with networks. I&amp;rsquo;ve been checking this periodically since realizing it could be the problem, and I regularly see anywhere between 50 and 70 different wireless networks from my apartment. Yikes.&lt;/p&gt;
&lt;p&gt;Admittedly, I&amp;rsquo;m part of the problem. I&amp;rsquo;m broadcasting with a 5 GHz and a 2.4 GHz network from a router that I use exclusively for work. I&amp;rsquo;m also broadcasting a main and guest network on my main mesh setup. That causes matching SSIDs to broadcast on both the 2.4 GHz and 5 GHz spectrum on &lt;em&gt;each&lt;/em&gt; of the 3 access points &lt;em&gt;per network&lt;/em&gt;, meaning I&amp;rsquo;m technically broadcasting 12 SSIDs. Even so, I&amp;rsquo;m still competing with, at minimum, 40-ish other devices crowding the same spectrum.&lt;/p&gt;
&lt;p&gt;After coming to the realization that I may have been blaming all of the wrong things, I adjusted the setup of my access points so that the main router/access point which is connected to my modem is in direct line of sight across my apartment from the mesh access point at my office desk (which moved from the desk proper to a table next to the desk.) Since doing that, knock on wood, things have at least &lt;em&gt;seemed&lt;/em&gt; to be a bit more stable for me. Either I&amp;rsquo;ve been having a better experience on web conferences or no one bothers to complain to me about it when my audio suddenly sounds like garbage because they&amp;rsquo;re just used to that happening from my end.&lt;/p&gt;
&lt;p&gt;All that being said, I do still have an issue where the network stack on my MacBook Pro will crash, leaving me with no network connectivity until I disable and then re-enable WiFi. I haven&amp;rsquo;t managed to find a fix for that particular problem yet, though I imagine having 4 different flavors of VPN client installed probably isn&amp;rsquo;t doing me any favors.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Ubuntu Linux GRUB Error After 20.04 Upgrade</title>
      <link>https://hugo.unusually.pink/ubuntu-linux-grub-error-after-20.04-upgrade/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/ubuntu-linux-grub-error-after-20.04-upgrade/</guid>
      <description>While I&amp;rsquo;ve nuked my personal VPS, I still have a VPS that I use for work; it comes in handy for things like running cron jobs, maintaining persistent shells, and generally handling things where a Linux shell seems better than a macOS shell (I&amp;rsquo;m looking at you, remote PowerShell sessions connecting to Microsoft Exchange.) This week I decided to upgrade it from Ubuntu 18.04 to Ubuntu 20.04. I like to stick on the LTS (long term support) releases for my servers, but I do typically prefer to keep even the LTS releases upgraded rather than waiting for them to go end of life.</description>
      <content>&lt;p&gt;While I&amp;rsquo;ve &lt;a href=&#34;https://unusually.pink/github-pages-hosting/&#34;&gt;nuked my personal VPS&lt;/a&gt;, I still have a VPS that I use for work; it comes in handy for things like running &lt;code&gt;cron&lt;/code&gt; jobs, maintaining persistent shells, and generally handling things where a Linux shell seems better than a macOS shell (I&amp;rsquo;m looking at you, remote PowerShell sessions connecting to Microsoft Exchange.) This week I decided to upgrade it from Ubuntu 18.04 to Ubuntu 20.04. I like to stick on the LTS (long term support) releases for my servers, but I do typically prefer to keep even the LTS releases upgraded rather than waiting for them to go end of life. I &lt;em&gt;could&lt;/em&gt; have kept using Ubuntu 18.04 with &lt;a href=&#34;https://ubuntu.com/about/release-cycle&#34;&gt;maintenance updates until 2023 and security maintenance until 2028&lt;/a&gt;, but what&amp;rsquo;s the fun in that?&lt;/p&gt;
&lt;p&gt;Upgrading a VPS is always a bit of a nerve-wracking situation just because I don&amp;rsquo;t have local access to the host in case something goes extremely awry. Ubuntu tries to help alleviate this by opening a second SSH daemon on a different port just in case the primary daemon crashes during the upgrade, but if the machine ends up in a non-bootable state I&amp;rsquo;m still more or less hosed. Fortunately for me, things almost went off without a hitch&amp;hellip; almost.&lt;/p&gt;
&lt;p&gt;While the upgrade &lt;em&gt;did&lt;/em&gt; complete, I received an error toward the end of the process that &lt;a href=&#34;https://www.gnu.org/software/grub/&#34;&gt;GRUB&lt;/a&gt; failed to upgrade successfully. This was mildly terrifying since GRUB is the bootloader; if it&amp;rsquo;s not working properly the system won&amp;rsquo;t boot, and I can&amp;rsquo;t access the host of the VPS to troubleshoot it. Luckily, GRUB continued to work in my case, and my system was able to reboot successfully after the 20.04 upgrade and beyond. GRUB just wasn&amp;rsquo;t getting upgraded. I quickly noticed that I also received an error from GRUB every time I ran &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt; to update my system. Again, the other packages would upgrade successfully, but GRUB would always complain:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dpkg: error processing package grub-pc (&amp;ndash;configure):&lt;/p&gt;
&lt;p&gt;installed grub-pc package post-installation script subprocess returned error exit&lt;/p&gt;
&lt;p&gt;status 1&lt;/p&gt;
&lt;p&gt;Errors were encountered while processing: grub-pc&lt;/p&gt;
&lt;p&gt;E: Sub-process /usr/bin/dpkg returned an error code (1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After spending some time just ignoring the problem since it wasn&amp;rsquo;t exactly critical, I finally decided to do some digging. It turns out that problems like this have apparently plagued Ubuntu upgrades for a while, as I found a thread with the &lt;a href=&#34;https://askubuntu.com/questions/636456/14-04-upgrade-triggers-grub-pc-failure/636523#636523&#34;&gt;same problem all the way back with an upgrade to Ubuntu 14.04&lt;/a&gt;. The solution in that case was to simply &amp;ldquo;nuke and pave&amp;rdquo; by removing GRUB and then re-installing it. It&amp;rsquo;s once again a bit of a white-knuckle situation since if anything happens between removing and reinstalling GRUB the system will not have the ability to boot. The steps were very similar to the linked thread with some minor differences in the era of Ubuntu 20.04. The first step was still to purge GRUB:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt-get purge grub-pc grub-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Running this command in 2020 removes &lt;code&gt;/etc/grub.d/&lt;/code&gt; already, so there&amp;rsquo;s no reason to manually run the removal. Instead, I next moved straight to re-installing GRUB:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt-get install grub-pc grub-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The installation process kicks off an interactive wizard asking which disk(s) GRUB should be installed to. In my case, I only needed it on the main disk, which is &lt;code&gt;/dev/sda&lt;/code&gt;. With that done, I updated GRUB and then rebooted:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo update-grub
sudo reboot now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This part kind of sucked as I was left running &lt;code&gt;nmap&lt;/code&gt; against the SSH port for my VPS and hoping that GRUB was properly set up to allow the system to boot. After a nervous 15 seconds, though, the port started to respond again, and I could successfully SSH into the server. Re-checking for updates showed that everything was fine; the errors about GRUB having a needed upgrade that couldn&amp;rsquo;t be installed were gone. Admittedly, it was probably unnecessary to go through this upgrade without any specific reason for it, but the beauty of Ubuntu is its popularity. Rarely will there be an issue someone else hasn&amp;rsquo;t encountered, solved, and documented before, and this problem was no exception.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Offsite Podcasting</title>
      <link>https://hugo.unusually.pink/offsite-podcasting/</link>
      <pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/offsite-podcasting/</guid>
      <description>I&amp;rsquo;ve written before about how difficult it can be to record podcasts remotely, something that has continued to be a struggle throughout the pandemic. For the Unusually Pink Podcast, the irritation of recording remotely was enough to make both Brandi and myself decide it was best to throw in the towel after a year. Mark and I have managed to continue doing well with the Same Shade Of Difference podcast, though significantly more work is involved in getting an episode together when done remotely.</description>
      <content>&lt;p&gt;I&amp;rsquo;ve written before about how &lt;a href=&#34;https://unusually.pink/the-dumpster-fire-of-remote-podcasting/&#34;&gt;difficult it can be to record podcasts remotely&lt;/a&gt;, something that has continued to be a struggle throughout the pandemic. For the Unusually Pink Podcast, the irritation of recording remotely was enough to make both Brandi and myself decide it was best to throw in the towel after a year. Mark and I have managed to continue doing well with the &lt;a href=&#34;https://sameshadeofdifference.com/&#34;&gt;Same Shade Of Difference&lt;/a&gt; podcast, though &lt;em&gt;significantly&lt;/em&gt; more work is involved in getting an episode together when done remotely. I say that like I have anything to do with it, but it&amp;rsquo;s really all Mark going through the work of recording our podcast episodes that we do over Discord, editing the files, adding in the music, and everything else. It&amp;rsquo;s substantially more effort, and at the end of the day we still don&amp;rsquo;t end up with as clean and natural of a product as we would while recording in person; latency means we still periodically try to talk over one another even as we endeavor to avoid exactly that with video calls.&lt;/p&gt;
&lt;p&gt;What we&amp;rsquo;ve been experimenting with lately, though, are offsite recordings. It gives us a similar experience to the onsite recordings we used to do from our old podcast studio but in random locations. We first actually gave this a shot at &lt;a href=&#34;https://www.deadlizardbrewing.com/&#34;&gt;Dead Lizard Brewing Company&lt;/a&gt; in Orlando when we were there for the &lt;a href=&#34;https://unusually.pink/podfest-multimedia-expo/&#34;&gt;Podfest Expo&lt;/a&gt;, AKA the last thing we did before the pandemic ground everything to a halt here. That was a surprisingly good experience, and you might be surprised at how &lt;em&gt;infrequently&lt;/em&gt; even the loudest background noise comes through to the recording.&lt;/p&gt;
&lt;p&gt;With how cool the experience was at Dead Lizard, Mark and I have been trying to basically emulate that experience now from places that allow us to sit outdoors, away from everyone else. We&amp;rsquo;re racing against time a bit as the weather continues to get colder, but it&amp;rsquo;s mostly been a great experience thus far. We first recorded at the &lt;a href=&#34;https://www.westsixth.com/westsixthfarm&#34;&gt;West Sixth Farm&lt;/a&gt; for the &amp;ldquo;&lt;a href=&#34;https://sameshadeofdifference.com/episodes/how-we-work-in-the-covid-19-era&#34;&gt;How We Work in the COVID-19 Era&lt;/a&gt;&amp;rdquo; episode. The Farm is a &lt;em&gt;terrific&lt;/em&gt; location, with a covered pavilion area that has picnic tables, accessible WiFi, and outdoor power we can use. Barley the farm dog came to hang out with us for a little while, and it&amp;rsquo;s a &lt;em&gt;very&lt;/em&gt; difficult view to top while recording.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/edit_farm_dog-rotated.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/edit_farm_field.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The one downside of this setup is that, with things being relatively out in the open, we do end up at the mercy of the wind. We attempted to record a second Same Shade Of Difference episode there maybe about a month ago, but we had to scrap the idea because the windscreens for our microphones couldn&amp;rsquo;t quite keep up with the wind that would have caused a constant disruption to the episode.&lt;/p&gt;
&lt;p&gt;More recently, we recorded at &lt;a href=&#34;https://www.boonecountyky.org/departments/parks/england_idlewild_park_and_dog_park.aspx&#34;&gt;Idlewild Park&lt;/a&gt; in northern Kentucky. This was also a cool experience where we were able to take a quick look around, find a pavilion with no one else at it, and post up to record without having to worry about being too close to anyone. We &lt;em&gt;were&lt;/em&gt; fairly close to Cincinnati/Northern Kentucky International Airport, but even that sound barely came through the microphones.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/edit_park_plane.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/edit_park_setup.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you look closely, you can see a plane coming in for a landing in the first photo.&lt;/p&gt;
&lt;p&gt;That episode isn&amp;rsquo;t live yet, but look for it soon over at the &lt;a href=&#34;https://sameshadeofdifference.com/&#34;&gt;Same Shade Of Difference website&lt;/a&gt; or your podcast source of choice.&lt;/p&gt;
&lt;p&gt;As with anything, there are caveats to offsite recording. While the West Sixth Farm is an insanely good location due to this, things like electricity and Internet access aren&amp;rsquo;t guaranteed when you&amp;rsquo;re trying to stay away from everyone else. While at Idlewild Park, we just leaned on the batteries for our gear and used the hotspots from our phones and tablets for connectivity. The pavilions at both locations were clutch for the possibility of inclement weather. For both locations, either Mark or myself had to travel at least a bit to get there, so having backups of pretty much everything is helpful. Spare batteries, memory cards, headphones, etc. is useful to save yourself from a scrapped recording session. I say this as if I provide any of it, but it&amp;rsquo;s really all Mark who has both everything you need &lt;strong&gt;and&lt;/strong&gt; backups of everything you need in his bag at all times. I give him a lot of grief over how heavy his backpack is, but I&amp;rsquo;d be lying if I said it hadn&amp;rsquo;t saved me more than a few times.&lt;/p&gt;
&lt;p&gt;On the whole, I would &lt;em&gt;highly&lt;/em&gt; recommend anyone struggling with remote podcast recording over the Internet try meeting up at an out of the way place to record in person while being outdoors and socially distant, weather permitting. The elephant in the room for this topic, of course, is how you &lt;em&gt;record&lt;/em&gt; the episode since dragging something like the &lt;a href=&#34;https://www.rode.com/rodecasterpro&#34;&gt;RODECaster Pro&lt;/a&gt; out there isn&amp;rsquo;t feasible, even if it&amp;rsquo;s technically possible since the device will run off of D batteries. The recordings in Orlando and at the Farm were done with Mark&amp;rsquo;s &lt;a href=&#34;https://zoomcorp.com/en/us/handheld-recorders/handheld-recorders/h4n-pro/&#34;&gt;Zoom H4n Pro&lt;/a&gt;, and while that device did a terrific job of recording, it still left a lot to be desired with regard to the amount of edit work that was required afterward. Without any built-in soundboard someone (AKA Mark) would have to go in and actually edit our recording to insert things like our intro music. To alleviate this, Mark recently got the new &lt;a href=&#34;https://zoomcorp.com/en/us/podtrak-recorders/podcast-recorders/podtrak-p4/&#34;&gt;PodTrak P4&lt;/a&gt;. I won&amp;rsquo;t share any thoughts on that here, though, as that&amp;rsquo;s the topic of a future podcast episode! Stay tuned to the &lt;a href=&#34;https://sameshadeofdifference.com/&#34;&gt;Same Shade Of Difference&lt;/a&gt; if you&amp;rsquo;re interested in our take on that particular device.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Updating PowerShellGet</title>
      <link>https://hugo.unusually.pink/updating-powershellget/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/updating-powershellget/</guid>
      <description>It&amp;rsquo;s not too often these days that I find myself needing to update the underpinnings of PowerShell. The majority of the PowerShell work I do now is based on PowerShell Core, the current version of which is 7.0.3, and frequently just comes with newer versions of the supporting modules. PowerShell Core began with PowerShell 6 and is created with .NET Core, which is Microsoft&amp;rsquo;s open source and cross-platform flavor of .</description>
      <content>&lt;p&gt;It&amp;rsquo;s not too often these days that I find myself needing to update the underpinnings of PowerShell. The majority of the PowerShell work I do now is based on &lt;a href=&#34;https://github.com/PowerShell/PowerShell&#34;&gt;PowerShell Core&lt;/a&gt;, the current version of which is 7.0.3, and frequently just comes with newer versions of the supporting modules. PowerShell Core began with PowerShell 6 and is created with .NET Core, which is Microsoft&amp;rsquo;s open source and cross-platform flavor of .NET. PowerShell version 5 and before, known as Windows PowerShell, is the original, Windows-specific variant of PowerShell. Microsoft doesn&amp;rsquo;t really do any new development work on Windows PowerShell, instead opting to work on PowerShell Core and slowly make the full set of functionality available on all platforms.&lt;/p&gt;
&lt;p&gt;This is awesome, but some systems very specifically target Windows PowerShell. This can easily happen since the interpreter even has a different name; Windows PowerShell calls &lt;code&gt;powershell.exe&lt;/code&gt; while PowerShell Core calls &lt;code&gt;pwsh.exe&lt;/code&gt; in an effort to allow the two versions to co-exist on the same Windows host. As a result, systems which proxy PowerShell commands or scripts on your behalf down to a target machine that have not been updated to expect PowerShell Core will generally target Windows PowerShell instead. This was the situation I found myself in last week.&lt;/p&gt;
&lt;p&gt;I was attempting to load a script that I had written into a monitoring platform which will then send my script down to any number of &amp;ldquo;collector&amp;rdquo; machines in order to for it to execute and do the actual data aggregation. In this case, my script failed because it was calling the &lt;code&gt;MSAL.PS&lt;/code&gt; module. &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-dotnet&#34;&gt;MSAL&lt;/a&gt; is the Microsoft Authentication Library, and as the name indicates it facilitates authentication to Azure AD. It replaces the older Azure AD Authentication Library (ADAL), and is honestly &lt;em&gt;much&lt;/em&gt; nicer to use. The module needs to be installed first, though, and while I had previously installed it on the target system under PowerShell Core, Windows PowerShell is a completely separate entity with a separate space for modules. I remoted to the system and ran the following to handle the installation from an administrative Windows PowerShell session:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Install-Module -Name MSAL.PS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Instead of joy, I got the following error message:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WARNING: The specified module &amp;lsquo;MSAL.PS&amp;rsquo; with PowerShellGetFormatVersion &amp;lsquo;2.0&amp;rsquo; is not supported by the current version of PowerShellGet. Get the latest version of the PowerShellGet module to install this module, &amp;lsquo;MSAL.PS&amp;rsquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ick&amp;hellip; some things were a bit old in the Windows PowerShell installation. This was one of the rare instances where the error message didn&amp;rsquo;t tell me &lt;em&gt;exactly&lt;/em&gt; how to fix the issue, though, so I did a few searches on this exact error. The trick is that updating &lt;code&gt;PowerShellGet&lt;/code&gt; involves not one but two steps.&lt;/p&gt;
&lt;p&gt;While &lt;code&gt;PowerShellGet&lt;/code&gt; is a module specific for discovering and installing PowerShell packages from the &lt;a href=&#34;https://www.powershellgallery.com/&#34;&gt;PowerShell Gallery&lt;/a&gt;, it leverages Microsoft&amp;rsquo;s much more generic &lt;a href=&#34;https://www.nuget.org/&#34;&gt;NuGet package manager&lt;/a&gt;. To get the latest version of PowerShellGet, I &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/gallery/installing-psget?view=powershell-7&#34;&gt;first had to make sure I was using the latest version of NuGet&lt;/a&gt; by running:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Install-PackageProvider Nuget -Force&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once that completed, &lt;em&gt;then&lt;/em&gt; I was able to successfully update PowerShellGet via:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Install-Module -Name PowerShellGet -Force&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once the update completes, the current PowerShell session will still be running the old version. I just closed PowerShell, re-launched a new administrator instance, and then successfully installed the module via the same cmdlet from earlier:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Install-Module -Name MSAL.PS&lt;/code&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Safari 14</title>
      <link>https://hugo.unusually.pink/safari-14/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/safari-14/</guid>
      <description>Last week the 10.15.7 update to macOS Catalina came with a nice surprise: Safari 14. I was caught off guard by this since I had assumed we wouldn&amp;rsquo;t see Safari 14 until Big Sur released later this year. It was also a nice surprise for me since Safari has become my browser of choice, not just on my iPhone and iPad, but also on my MacBook Pro. The big reason for this is that I do my best to avoid any Chromium-based browser.</description>
      <content>&lt;p&gt;Last week the 10.15.7 update to macOS Catalina came with a nice surprise: Safari 14. I was caught off guard by this since I had assumed we wouldn&amp;rsquo;t see Safari 14 until &lt;a href=&#34;https://unusually.pink/thoughts-on-apples-wwdc-2020/&#34;&gt;Big Sur released later this year&lt;/a&gt;. It was also a nice surprise for me since Safari has become my browser of choice, not just on my iPhone and iPad, but also on my MacBook Pro. The big reason for this is that I do my best to avoid any &lt;a href=&#34;https://en.wikipedia.org/wiki/Chromium_(web_browser)&#34;&gt;Chromium&lt;/a&gt;-based browser. Over the last few years we&amp;rsquo;ve seen diversity in browsers erode more and more as new browsers are built based on Chromium (e.g. Brave) while others abandon their own engines in favor of using Chromium (e.g. Opera and Edge.) I personally see this homogeneous browsing platform as being pretty bad for the Internet as a whole, as it opens up the possibility for web developers to focus all of their development on Chrome and ignore everything else. This leads to sites that &lt;em&gt;only&lt;/em&gt; work on Chrome and that ignore web standards, just like we saw back in the day when much of the web was developed with only Internet Explorer 6 in mind. The difference now is the way the web has evolved into an entire platform. In 2004 the main issue was that sites developed just for IE 6 wouldn&amp;rsquo;t quite render properly on other browsers. In 2020, there are entire web apps that straight up won&amp;rsquo;t work on non-Chromium browsers. That&amp;rsquo;s something I can&amp;rsquo;t support.&lt;/p&gt;
&lt;p&gt;The two &lt;em&gt;major&lt;/em&gt; browsers moving forward with different engines are Firefox (with Gecko) and Safari (with WebKit.) I was previously using Firefox on my laptops, but I became extremely concerned recently when &lt;a href=&#34;https://blog.mozilla.org/blog/2020/08/11/changing-world-changing-mozilla/&#34;&gt;Mozilla had massive layoffs and switched their mission to focus on revenue&lt;/a&gt;. I certainly understand that Mozilla needs to make money in order to continue making Firefox, but when a group lays off their entire incident response team, I don&amp;rsquo;t exactly feel warm and fuzzy inside about using the product. I still use it on my Linux installations, but on macOS I switched to Safari.&lt;/p&gt;
&lt;p&gt;The pleasant part about switching to Safari is that, for the most part, it&amp;rsquo;s been a very slick browser that I&amp;rsquo;ve enjoyed. While Safari 14 doesn&amp;rsquo;t do anything too Earth-shattering or even different from any other browsers, it does bring Apple&amp;rsquo;s offering up to parity with some of the major players. For example, Safari will now &lt;em&gt;finally&lt;/em&gt; display favicons for websites on tabs. How they&amp;rsquo;ve made it this far without supporting them I&amp;rsquo;ll never understand, but it immediately makes a huge difference in quickly finding the tab I want&amp;hellip; and I say this as a person who typically doesn&amp;rsquo;t have more than 10 tabs open at any given time. Tab addicts (you know who you are) will especially appreciate this when Safari starts stacking tabs on top of one another. As another update to tabs, Safari can now preview the content of a page when the mouse is hovered over a tab. This can also be useful for quickly finding the appropriate tab without actually having to switch to anything.&lt;/p&gt;
&lt;p&gt;The big change, though, is how Safari communicates with the user about how it has helped protect against invasive tracking. This feature is &lt;em&gt;extremely&lt;/em&gt; similar to the Protections Dashboard in Firefox. There&amp;rsquo;s an icon to the left of the address bar that can be clicked at any given time to see a breakdown of trackers on the current page. Clicking will also allow me to see the specifics of what trackers are being blocked:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/safari_icon.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;For a bigger picture, I can also get an overall view of what&amp;rsquo;s been blocked in the past 30 days. I can see which sites were attempting to be the most invasive, and similar to the per-site rendering, each can be expanded to show which trackers they had embedded:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/safari_websites.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Similarly, I can click on the &lt;strong&gt;Trackers&lt;/strong&gt; heading in order to see a list of which trackers appear the most frequently across the sites I&amp;rsquo;m visiting. I can expand those listings to see which specific sites are hosting that tracker:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/safari_trackers.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t think it should come as a surprise to anyone that Google, Bing, and Facebook appear the most frequently after just a short period of testing. It&amp;rsquo;s also interesting to see trackers from both Facebook and Snapchat when I don&amp;rsquo;t use either of those &amp;ldquo;services&amp;rdquo;. It really shows you how pervasive they are across the Internet.&lt;/p&gt;
&lt;p&gt;While I can already hear the Apple-haters I know railing on the fact that Firefox already has this feature, in my opinion it&amp;rsquo;s nice to see Apple bringing their browser up to feature parity and offering a more transparent and secure browsing experience to people in a package that &lt;em&gt;also&lt;/em&gt; does not leverage Chromium but which &lt;em&gt;does&lt;/em&gt; have a support team behind it that&amp;rsquo;s more than a skeleton crew. Similarly, you &lt;em&gt;still&lt;/em&gt; don&amp;rsquo;t see anything like this today in Chrome or Edge, likely because the companies behind them both appear relatively high up in the tracker list.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Connecting An Existing Firebase Hosting Project To A New Site</title>
      <link>https://hugo.unusually.pink/connecting-an-existing-firebase-hosting-project-to-a-new-site/</link>
      <pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/connecting-an-existing-firebase-hosting-project-to-a-new-site/</guid>
      <description>As a follow-up to my last post on GitHub Pages, I mentioned that I moved one of my websites to Firebase. Firebase is a platform from Google for creating web and mobile applications. As a PaaS offering, there are a lot of different parts to the service, but as a platform for web applications hosting is naturally one of them. The free Spark plan offers 10 GB of storage, 360 MB of data transfer per day (which works out to 10 GB of bandwidth per month), and support for custom domains and SSL.</description>
      <content>&lt;p&gt;As a follow-up to my &lt;a href=&#34;https://unusually.pink/github-pages-hosting/&#34;&gt;last post on GitHub Pages&lt;/a&gt;, I mentioned that I moved one of my websites to &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;. Firebase is a platform from Google for creating web and mobile applications. As a PaaS offering, there are a &lt;strong&gt;lot&lt;/strong&gt; of different parts to the service, but as a platform for web applications hosting is naturally one of them. The &lt;a href=&#34;https://firebase.google.com/pricing/&#34;&gt;free Spark plan&lt;/a&gt; offers 10 GB of storage, 360 MB of data transfer per day (which works out to 10 GB of bandwidth per month), and support for custom domains and SSL. That&amp;rsquo;s more than enough for me to host a simple, single page website that&amp;rsquo;s only made up of static HTML, CSS, and a single image. If anyone is curious, my site is using just 1.8 MB of storage and 15 MB of bandwidth. Note that bandwidth used divided by storage used will not be indicative of total hits due to caching, compression, etc.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve used Firebase before, so I already had my Google account linked up to Firebase, and I even had a project still technically &amp;ldquo;live&amp;rdquo; there, though the domain had long since been shifted somewhere else. To be honest, it had been so long since I used Firebase that I almost forgot about it until I just happened to start receiving some well-timed emails from the service informing me that I needed to re-verify ownership of the domain I was using for my defunct project. I had no interest in re-verifying anything, but I did want to start hosting something new there.&lt;/p&gt;
&lt;p&gt;The first step for hosting new content was to log in to the &lt;a href=&#34;https://console.firebase.google.com/&#34;&gt;Firebase Console&lt;/a&gt;. Since I had already used the service, this gave me tiles of my existing projects; in my scenario, I just had a single project for my hosting. I clicked on that tile, and I was taken to a Project Overview screen. This gives me a high-level look at my project. To get to the hosting-specific functionality, though, I just had to click the &lt;strong&gt;Hosting&lt;/strong&gt; option under the &lt;strong&gt;Develop&lt;/strong&gt; menu to the left.&lt;/p&gt;
&lt;p&gt;On the hosting dashboard, the first item listed contains all of the domains associated with the project. Clicking the 3 dots &amp;hellip; next to a domain allowed me to delete it; I removed the two entries (apex domain and www) for the domain I used previously. Then I clicked the button for &lt;strong&gt;Add a custom domain&lt;/strong&gt;. I followed the instructions on the screen to add a custom domain; I won&amp;rsquo;t document the steps here since they&amp;rsquo;re directly covered through the &lt;a href=&#34;https://firebase.google.com/docs/hosting/custom-domain&#34;&gt;Firebase custom domain documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With everything configured on the Firebase side, I next needed to crack into the Firebase CLI to link up my local project. I opted to &lt;a href=&#34;https://firebase.google.com/docs/cli/#mac-linux-standalone-binary&#34;&gt;install the standalone CLI&lt;/a&gt;, though you can still get it through &lt;code&gt;npm&lt;/code&gt; if you prefer to roll that way. The first thing I had to do was link the CLI to my Firebase account. This is different based on whether you&amp;rsquo;re going to be using the CLI from a system with a GUI or if you&amp;rsquo;re doing it from a headless system you&amp;rsquo;re accessing via SSH. I was using it from a headless system where I cannot pop a browser to follow the normal authentication process; as a result I ran:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;firebase login --no-localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you&amp;rsquo;re running this from a system with a GUI, I believe you just omit the &lt;code&gt;--no-localhost&lt;/code&gt; parameter. In the headless setup, though, this gives a Firebase URL to navigate to on another system. I copied it out of my terminal and pasted it into the browser in my laptop. This gives me an authentication code for the CLI. I copied that from my browser, pasted it into my terminal, and that linked the CLI to my account in the Firebase platform.&lt;/p&gt;
&lt;p&gt;Since I was just moving my content from my old VPS to Firebase, I didn&amp;rsquo;t have to worry about actually &lt;em&gt;creating&lt;/em&gt; a website; I already had one that was backed up in a tarball. I simply had to expand my tarball on the same system where I was using the Firebase CLI. I did this by creating a new directory for the project, expanding my tarball that had all of my site&amp;rsquo;s content, and then copying that content to the project directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;mkdir ~/laifu
tar -zxvf ~/temp/laifu.tar.gz
cp -r ~/temp/html ~/laifu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you look closely at the commands above, you&amp;rsquo;ll see that after I expand the tarball I&amp;rsquo;m recursively copying not the entire directory but the &lt;code&gt;html&lt;/code&gt; folder from it. This is due to the fact that my tarball is of the entire &lt;code&gt;/var/www/laifu.moe/&lt;/code&gt; directory that Nginx was previously hosting on my VPS, and the &lt;code&gt;html&lt;/code&gt; directory is what contains the content of the site. If your backup is storing the content directly (e.g. it&amp;rsquo;s not in a subfolder) that&amp;rsquo;s fine. However, you&amp;rsquo;ll want to make a new folder inside of your project directory that you copy the content to because you do &lt;em&gt;not&lt;/em&gt; want the content of the site to be in the root of the Firebase project&amp;rsquo;s directory. For example, your &lt;code&gt;mkdir&lt;/code&gt; command would look something like: &lt;code&gt;~/myproject/html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;One I had the files situated accordingly, I needed to tell Firebase that my directory was a Firebase project. Similar to using &lt;code&gt;git&lt;/code&gt;, I do this by navigating to my project directory and running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;firebase init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gets the ball rolling by asking some questions interactively through the CLI. One question will ask what service the project should be connected to; be sure to pick &amp;ldquo;Hosting.&amp;rdquo; After that there should be a prompt for which existing hosting project you&amp;rsquo;d like to use. The existing project should be listed as an option to be selected. If it&amp;rsquo;s not there, you can cancel out of the process and ensure everything worked correctly with your authentication by running the following and verifying that you see the project. If it&amp;rsquo;s missing, you may need to redo the authentication (e.g. maybe you were in the wrong Google account when pasting into your browser.)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;firebase project:list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After selecting the project, the CLI will ask what to use as the &amp;ldquo;public directory.&amp;rdquo; This is essentially asking what directory &lt;em&gt;inside&lt;/em&gt; of the project directory contains the web content to be hosted. In my case I picked &lt;code&gt;html&lt;/code&gt; since that&amp;rsquo;s what I named the folder.&lt;/p&gt;
&lt;p&gt;Be wary of the next couple of prompts, which will trigger regardless of whether or not there&amp;rsquo;s something in your public directory matching them. When prompted about your &lt;code&gt;404.html&lt;/code&gt; page, opt not to overwrite it unless you really hate your existing one. When prompted about &lt;code&gt;index.html&lt;/code&gt;, &lt;strong&gt;definitely&lt;/strong&gt; don&amp;rsquo;t overwrite it or you&amp;rsquo;ll lose the first page of your site.&lt;/p&gt;
&lt;p&gt;Once that&amp;rsquo;s all done, you should get a message:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Firebase initialization complete!”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This means that the directory has been initialized successfully as a Firebase project, but the local content still hasn&amp;rsquo;t been pushed to the cloud. So the last step is to run the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;firebase deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will give a &amp;ldquo;Deploy complete!&amp;rdquo; message along with a Firebase-specific URL in the format of:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://project-name-GUID.web.app&#34;&gt;https://project-name-GUID.web.app&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copying this URL and pasting it into a browser should allow you to verify that the content you expect is now being hosted, even if you&amp;rsquo;re currently waiting for DNS TTLs to expire before you can navigate to the custom DNS. The Hosting Dashboard of the Firebase console will also show the update in the &amp;ldquo;Release History&amp;rdquo; section.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>GitHub Pages Hosting</title>
      <link>https://hugo.unusually.pink/github-pages-hosting/</link>
      <pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/github-pages-hosting/</guid>
      <description>As I had mentioned in my post about Dropbox Passwords, I&amp;rsquo;m looking to cut down on the number of services that I pay for each month. One of the areas I&amp;rsquo;ve decided to cut down on are my domains; I&amp;rsquo;m letting a few domains that I never ended up finding much of a use for expire rather than having them automatically renew. Some have been renewing like this for years just because I didn&amp;rsquo;t want to lose them for some reason despite never having any real use for them.</description>
      <content>&lt;p&gt;As I had mentioned in my &lt;a href=&#34;https://unusually.pink/dropbox-passwords/&#34;&gt;post about Dropbox Passwords&lt;/a&gt;, I&amp;rsquo;m looking to cut down on the number of services that I pay for each month. One of the areas I&amp;rsquo;ve decided to cut down on are my domains; I&amp;rsquo;m letting a few domains that I never ended up finding much of a use for expire rather than having them automatically renew. Some have been renewing like this for years just because I didn&amp;rsquo;t want to lose them for some reason despite never having any real use for them. With a decrease in my domains comes a decrease in websites, to the point where I started to wonder if I could get away with ditching my VPS. I had been using the same VPS for over 2 years, and it served me well. In a world with so many hosting options, though, it seemed overkill just to run 2 static websites, each of which were only a single page.&lt;/p&gt;
&lt;p&gt;One of my sites I placed on &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;. I&amp;rsquo;m not a fan of using Google products, but I&amp;rsquo;ve used Firebase previously (moving my website to an existing, stale Firebase project will be the topic of another post), and the free &lt;a href=&#34;https://firebase.google.com/pricing&#34;&gt;Spark plan&lt;/a&gt; gives me more than enough for a simple site with 1 GB of storage and 10 GB of egress traffic each month.&lt;/p&gt;
&lt;p&gt;I wanted to check out some different options for &lt;a href=&#34;https://jfabhd.com&#34;&gt;jfabhd.com&lt;/a&gt;, though. After recently reading one of &lt;a href=&#34;https://kevq.uk/static-site-generators-revisited/&#34;&gt;Kev Quirk&amp;rsquo;s blog posts&lt;/a&gt;, I thought I would give &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; a shot. Their &lt;a href=&#34;https://www.netlify.com/pricing/&#34;&gt;free Starter plan&lt;/a&gt; seems great for a simple hobby site and includes CI (continuous integration) from a git repository. I signed up for an account but quickly disliked the fact that leveraging my own domain meant I needed to move my nameservers for it to Netlify. While this isn&amp;rsquo;t horrible, I &lt;em&gt;really&lt;/em&gt; prefer to keep managing my DNS in a single place as opposed to scattering nameservers around to wherever my content is hosted. Currently all of my personal domains have DNS hosted in the same place, and I&amp;rsquo;d like to keep it that way. As a result, I shelved the idea of Netlify and looked to &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;I actually used GitHub Pages before, way back in the day when they were brand new and I set up my first &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;-based blog. It wasn&amp;rsquo;t bad by any stretch, but a lot of it was clunky. I remembered having to manually add some text files to the repository to configure my custom domain and to host content out of a folder that was named differently than what was expected. Likewise, there were no SSL options, so I ended up putting my GitHub Pages site behind &lt;a href=&#34;https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/&#34;&gt;CloudFlare&lt;/a&gt; in order to secure it. I figured this would be a good opportunity to see what, if anything, had changed. If I hated it, I wouldn&amp;rsquo;t be out anything and could continue to look at other options.&lt;/p&gt;
&lt;p&gt;The initial setup is still the same as I remember: just create a public repository with a name of:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github-account.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I did this through the GitHub website in less than a minute. Next up I ran &lt;code&gt;git clone&lt;/code&gt; in order to initialize the repository on my local laptop in the same directory where I keep all of my other GitHub repos. With my local environment ready, I just copied the handful of files that I had backed up from my VPS into the root directory for the repository; if I don&amp;rsquo;t take any other action, GitHub will host content from the root of the repo. Since this is a static, single page site, I don&amp;rsquo;t need to worry about compiling it with static site generators like Jekyll or &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. I was able to &lt;code&gt;commit&lt;/code&gt; the change for adding the files, navigate to &lt;a href=&#34;https://jfabry-noc.github.io&#34;&gt;https://jfaby-noc.github.io&lt;/a&gt;, and see my site.&lt;/p&gt;
&lt;p&gt;With the content out of the way, I wanted to set up my custom domain. The GitHub side of the work can now be done through the &lt;strong&gt;Settings&lt;/strong&gt; menu of the repository; it basically replaces the manual work that I previously had to do by adding files to my repository:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/gh_pages.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The top allows me to change the branch and directory to host content from; in my case I could just leave the defaults. The &lt;strong&gt;Custom domain&lt;/strong&gt; sections allows me to type in my domain of choice. This just adds a file named &lt;code&gt;CNAME&lt;/code&gt; to my repo containing the domain information. Then I just had to follow &lt;a href=&#34;https://docs.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site&#34;&gt;the directions&lt;/a&gt; for setting up a custom domain in my DNS host&amp;rsquo;s settings.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It&amp;rsquo;s a little wonky from the directions, but to make GitHub redirect everything appropriately when using both an apex domain and a subdomain, you follow both sections of the instructions verbatim. For example, I wanted the domain to be &lt;code&gt;jfabhd.com&lt;/code&gt;, but I also wanted &lt;code&gt;www.jfabhd.com&lt;/code&gt; to still redirect to the site. I configured the apex domain via the instructions above, creating 4 A records pointing to different IP addresses. Then I configured a CNAME record for &lt;code&gt;www.jfabhd.com&lt;/code&gt; pointing &lt;em&gt;not&lt;/em&gt; to &lt;code&gt;jfabhd.com&lt;/code&gt;, but instead to &lt;code&gt;jfaby-noc.github.io&lt;/code&gt;. If you do it this way, GitHub will work it all out under the hood.&lt;/p&gt;
&lt;p&gt;Immediately after setting up my DNS records, the option for &lt;strong&gt;Enforce HTTPS&lt;/strong&gt; was not available, telling me that the site was not configured properly. I rightly assumed this just meant DNS needed time to propagate. I checked back 15 minutes later (which is the TTL of my DNS records), and it presented me with a new message that the certificate wasn&amp;rsquo;t finished being created yet. I once again rightly assumed that they were spinning up these certificates through &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;, so I browsed &lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;Hacker News&lt;/a&gt; for a few minutes until refreshing my repository&amp;rsquo;s settings showed that the option to force HTTPS was now available. I simply checked the box, waited a few minutes, and then verified that going explicitly to &lt;code&gt;http://jfabhd.com&lt;/code&gt; would redirect me successfully to &lt;code&gt;https://jfabhd.com&lt;/code&gt;. If this doesn&amp;rsquo;t work for you, chances are that you just didn&amp;rsquo;t give it enough time. While the tooltip in the GibHub UI says it can take up to 24 hours, it took about 5 minutes for my site.&lt;/p&gt;
&lt;p&gt;The last thing to check was that the CI was working so that changes to the repo would be reflected on the site. A few things had changed since I took the backup of my site, meaning there were some needed tweaks with which I could test. For one I restarted this blog and I deleted my Twitter account since Twitter is a cesspool (that might be a good topic for another post&amp;hellip;), so I wanted to swap the Twitter link on my site with one for this blog. I first did a &lt;code&gt;git pull&lt;/code&gt; to get local copies of things like the &lt;code&gt;CNAME&lt;/code&gt; file that had been made in the cloud, and then I quickly updated my HTML to share a link with the &lt;a href=&#34;https://fontawesome.com/icons/rss?style=solid&#34;&gt;Font Awesome RSS feed icon&lt;/a&gt; as the content. After committing and pushing the change, I refreshed the site to confirm it had also been updated.&lt;/p&gt;
&lt;p&gt;On the whole, there&amp;rsquo;s really nothing for me to complain about with GitHub Pages. It&amp;rsquo;s free, I can use the same GitHub account I&amp;rsquo;m already in every day, I can use a custom domain without moving my DNS, and I get a Let&amp;rsquo;s Encrypt certificate out of the box. Obviously, though, my use case for it is very simple, and your mileage may vary. With options like this, though, I feel even better about my idea to stop running my own VPS just to host a couple of small, low-traffic websites.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Salvaging Images From Squarespace</title>
      <link>https://hugo.unusually.pink/salvaging-images-from-squarespace/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/salvaging-images-from-squarespace/</guid>
      <description>I wrote previously about moving this blog from Squarespace to WordPress. One of my cited concerns with Squarespace was being locked into that particular platform without a lot of options for moving somewhere else. So how did I move my content to WordPress? I was able to export the written content for the posts themselves from within Squarespace, fortunately. Inside of Settings &amp;gt; Advanced is an Import / Export option. The only export offering is WordPress, so I guess it was lucky that&amp;rsquo;s where I was moving.</description>
      <content>&lt;p&gt;I wrote previously about &lt;a href=&#34;https://unusually.pink/unusually-pink-migration/&#34;&gt;moving this blog from Squarespace to WordPress&lt;/a&gt;. One of my cited concerns with Squarespace was being locked into that particular platform without a lot of options for moving somewhere else. So how did I move my content to WordPress? I was able to export the &lt;em&gt;written&lt;/em&gt; content for the posts themselves from within Squarespace, fortunately. Inside of Settings &amp;gt; Advanced is an &lt;strong&gt;Import / Export&lt;/strong&gt; option. The &lt;em&gt;only&lt;/em&gt; export offering is WordPress, so I guess it was lucky that&amp;rsquo;s where I was moving. This gives an XML file with the written content and metadata for each post. Unfortunately, there is no option to export the &lt;em&gt;images&lt;/em&gt; that I&amp;rsquo;ve uploaded over the past year of creating content over at Squarespace; within the XML file the images show up as &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags with a link to the Squarespace CDN for the actual image. For example, this is what I see where the image is for the last post I authored over on Squarespace:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;padding-bottom:45.903255462646484%;&amp;quot; class=&amp;quot; image-block-wrapper has-aspect-ratio &amp;quot; data-animation-role=&amp;quot;image&amp;quot; &amp;gt; &amp;lt;noscript&amp;gt;&amp;lt;img src=&amp;quot;https://images.squarespace-cdn.com/content/v1/5cabd40b755be258403ccb99/1595366630913-VD12AA9IHURXLT6CWQ66/ke17ZwdGBToddI8pDm48kKEtlFlv-8yggmb8KJA0a9wUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcpEap199WJ5tA07nqy9HB7RsfdGE2RUqSBzw535kCng92V_tkyiZ3FgjXcK6wugnz/html.png&amp;quot; alt=&amp;quot;html.png&amp;quot; /&amp;gt;&amp;lt;/noscript&amp;gt;&amp;lt;img class=&amp;quot;thumb-image&amp;quot; data-src=&amp;quot;https://images.squarespace-cdn.com/content/v1/5cabd40b755be258403ccb99/1595366630913-VD12AA9IHURXLT6CWQ66/ke17ZwdGBToddI8pDm48kKEtlFlv-8yggmb8KJA0a9wUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcpEap199WJ5tA07nqy9HB7RsfdGE2RUqSBzw535kCng92V_tkyiZ3FgjXcK6wugnz/html.png&amp;quot; data-image=&amp;quot;https://images.squarespace-cdn.com/content/v1/5cabd40b755be258403ccb99/1595366630913-VD12AA9IHURXLT6CWQ66/ke17ZwdGBToddI8pDm48kKEtlFlv-8yggmb8KJA0a9wUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcpEap199WJ5tA07nqy9HB7RsfdGE2RUqSBzw535kCng92V_tkyiZ3FgjXcK6wugnz/html.png&amp;quot; data-image-dimensions=&amp;quot;1013x465&amp;quot; data-image-focal-point=&amp;quot;0.5,0.5&amp;quot; alt=&amp;quot;html.png&amp;quot; data-load=&amp;quot;false&amp;quot; data-image-id=&amp;quot;5f175ce6cb20a366ea6f4d62&amp;quot; data-type=&amp;quot;image&amp;quot; /&amp;gt; &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you think that looks disgusting, that&amp;rsquo;s because it is. When I imported the XML file into WordPress, I saw an option to download any attachments on each post. I checked that box, but since the images are linked to the Squarespace CDN they&amp;rsquo;re considered to be HTML content rather than attachments. As a result, WordPress simply embeds the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; in each post as a custom HTML block that doesn&amp;rsquo;t actually render the image.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/cash_money.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Set on &lt;strong&gt;not&lt;/strong&gt; going through 50 posts to manually save the images out of them, I started looking at the XML to see if I could do anything useful with the image URLs. One thing that immediately concerned me was that, when I wasn&amp;rsquo;t sure what I was going to do with the &lt;code&gt;unusually.pink&lt;/code&gt; domain but knew that I didn&amp;rsquo;t want to keep it at Squarespace, I marked the Squarespace site as Private, meaning the only way to view the content was to log in. I &lt;em&gt;assumed&lt;/em&gt; this meant the image content on the Squarespace CDN would be inaccessible until I made the site public again. After copying an image URL from my XML file, though, I saw that it was still publicly available. Flagging a Squarespace site as private means you can&amp;rsquo;t load the site directly, but content on Squarespace&amp;rsquo;s CDN is still accessible. That in itself seems like a problem to me and a very good reason to leave the platform, but in this one case it was working to my benefit. I realized that I could parse all of the images files out of the XML file with a script and download them programmatically.&lt;/p&gt;
&lt;p&gt;As you can see from the XML snippet above, images on the Squarespace CDN have URLs like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://images.squarespace-cdn.com/content/v1/5cabd40b755be258403ccb99/1595366630913-VD12AA9IHURXLT6CWQ66/ke17ZwdGBToddI8pDm48kKEtlFlv-8yggmb8KJA0a9wUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N\_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcpEap199WJ5tA07nqy9HB7RsfdGE2RUqSBzw535kCng92V\_tkyiZ3FgjXcK6wugnz/html.png
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There&amp;rsquo;s a whole lot of CDN nonsense, followed by a forward slash and the original file name at the very end. While this would be handy for getting the original file name, I didn&amp;rsquo;t want to end up with dozens of images in a folder where I had no idea what post they belonged to, and I definitely didn&amp;rsquo;t want to manually correlate the file name with the CDN link in each of the HTML blocks in WordPress.&lt;/p&gt;
&lt;p&gt;The XML, though, also includes the title of each post, and I realized that if I was scanning each line of the XML for image tags, I could also check for the title tag and keep a variable constantly updated with that. With this idea, I would just &lt;em&gt;start&lt;/em&gt; each file name with the post title so that they would be grouped together. Once the dots were connected, it was simple to come up with the following short PowerShell script:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It downloads all of the images referenced in the XML file in the format of:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;postTitle_fileName.extension
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I added some extra checks to remove unsavory characters from the file names; while it&amp;rsquo;s a valid character in most modern filesystems, for example, have you ever tried to actually programmatically do things from a Bash shell with a file that has a &lt;code&gt;[&lt;/code&gt; in the name? It&amp;rsquo;s not pretty.&lt;/p&gt;
&lt;p&gt;While this saved me from having to manually download each image from Squarespace, I still had to manually go through each post in WordPress, remove the custom HTML block where each image should have been, and then upload the appropriate image. With the way I downloaded the images, though, I just started at the top of the directory and worked my way through the images alphabetically since each post was grouped together. It sucked, but it could have been a &lt;em&gt;lot&lt;/em&gt; worse. If nothing else it made me glad that I moved forward with migrating the site now rather than waiting a few more months for the Squarespace subscription to lapse; I didn&amp;rsquo;t want to deal with this for any more posts than was strictly necessary.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Dropbox Passwords</title>
      <link>https://hugo.unusually.pink/dropbox-passwords/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/dropbox-passwords/</guid>
      <description>I tend to pay for a lot of subscription services. In fact, my friend Mark and I have enough of them between us that we needed not one but two episodes of our podcast just to talk about all of our subscriptions. Since the pandemic means I have nothing better to do with my time than sit around and think about things like how much money I spend on subscriptions, though, I&amp;rsquo;ve been thinking about which ones I might be able to do without, which ones I could swap for cheaper services, etc.</description>
      <content>&lt;p&gt;I tend to pay for a &lt;em&gt;lot&lt;/em&gt; of subscription services. In fact, my friend Mark and I have enough of them between us that we needed not &lt;a href=&#34;https://sameshadeofdifference.com/episodes/mo-money-mo-money&#34;&gt;one&lt;/a&gt; but &lt;a href=&#34;https://sameshadeofdifference.com/episodes/even-mo-money&#34;&gt;two&lt;/a&gt; episodes of our podcast just to talk about all of our subscriptions. Since the pandemic means I have nothing better to do with my time than sit around and think about things like how much money I spend on subscriptions, though, I&amp;rsquo;ve been thinking about which ones I might be able to do without, which ones I could swap for cheaper services, etc. to save myself a little bit of money each year. It often feels trivial to tack on yet another thing that costs $5 - $10 a month, but over the course of the year it adds up.&lt;/p&gt;
&lt;p&gt;Enter &lt;a href=&#34;https://www.dropbox.com/features/security/passwords&#34;&gt;Dropbox Passwords&lt;/a&gt;, a password manager built into Dropbox. In the past I&amp;rsquo;ve used Dropbox to sync passwords in conjunction with &lt;a href=&#34;https://www.keepassx.org/&#34;&gt;KeePassX&lt;/a&gt;, so having the same functionality built directly into the platform seemed nice. The fact that it&amp;rsquo;s a feature included with my Dropbox Plus plan and would save me from paying $80 a year for my current password manager is also a nice bonus. First I just had to put it through its paces.&lt;/p&gt;
&lt;h2 id=&#34;migration&#34;&gt;Migration&lt;/h2&gt;
&lt;p&gt;Migrating to a new password manager is typically a fairly painless process. Every password manager I&amp;rsquo;ve ever used has given me the option to export my passwords to a variety of plaintext file formats. Naturally, having a plaintext file with all of your credentials is a &lt;em&gt;terrible&lt;/em&gt; idea, but unless the machine you&amp;rsquo;re operating on is a digital cesspool it should be fine for the few minutes it takes to import the file somewhere else.&lt;/p&gt;
&lt;p&gt;In my case, I exported a CSV and imported it into Dropbox Passwords. I initially got a message that there weren&amp;rsquo;t any accounts to import. I opened the CSV file and saw that some of the columns had weird headings and assumed Dropbox didn&amp;rsquo;t know what fields in the CSV mapped to which fields within Passwords. Their &lt;a href=&#34;https://help.dropbox.com/installs-integrations/desktop/how-to-use-dropbox-passwords&#34;&gt;help documentation&lt;/a&gt; covers what&amp;rsquo;s needed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The columns in your CSV file must be labeled so Dropbox Passwords knows how to import the information. Although Dropbox Passwords can recognize a range of labels, we recommend labeling them “Name”, “Password”, “Username”, “Notes”, and “URL”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I updated the column headings to match the documentation above, and everything was fine.&lt;/p&gt;
&lt;h2 id=&#34;desktop-client&#34;&gt;Desktop Client&lt;/h2&gt;
&lt;p&gt;The desktop client for Dropbox Passwords is spartan to say the least. You get fields for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Site Name&lt;/li&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Password&lt;/li&gt;
&lt;li&gt;URL&lt;/li&gt;
&lt;li&gt;Notes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s it. In other password managers, I frequently leverage either additional passwords or custom fields to add things like app passwords, API keys, etc. While I could store those in the free-form Notes field in Dropbox Passwords, the values aren&amp;rsquo;t masked out like they would be in other services with dedicated fields for this sort of thing.&lt;/p&gt;
&lt;p&gt;After the initial setup where I logged in with my Dropbox credentials, the app gave me a &amp;ldquo;word list.&amp;rdquo; This PDF just had 12, random, English words on it. This serves as an extra security mechanism that I&amp;rsquo;ll touch on in the next section.&lt;/p&gt;
&lt;p&gt;After the app was set up, it asked me to create a 6 digit PIN. That PIN is used to unlock the app if it times out due to inactivity. It&amp;rsquo;s worth noting that the browser extensions will &lt;em&gt;not&lt;/em&gt; autofill login information is the application is currently locked; more on that later as well.&lt;/p&gt;
&lt;h2 id=&#34;mobile-apps&#34;&gt;Mobile Apps&lt;/h2&gt;
&lt;p&gt;There isn&amp;rsquo;t too much to say about the mobile apps; they&amp;rsquo;re basically exactly what you would expect. It is worth mentioning that, at the time of this writing, there&amp;rsquo;s no iPad version of the app, meaning I&amp;rsquo;m stuck looking at the blown-up iOS app. It&amp;rsquo;s not a huge ordeal, though, because aside from logging in initially I almost &lt;em&gt;never&lt;/em&gt; open the app itself. Like every other password manager, iOS can be configured to automatically get passwords out of it without requiring an app switch. It also integrates with Face ID and Touch ID on iOS for quick unlocking.&lt;/p&gt;
&lt;h2 id=&#34;multi-factor-authentication&#34;&gt;Multi Factor Authentication&lt;/h2&gt;
&lt;p&gt;Dropbox Passwords automatically implements a sort of MFA. When I logged in to the app on my phone, for example, it gave me a prompt on the desktop client. I had to accept the prompt there to confirm that I was, in fact, trying to configure the app on a phone. Likewise, when I configured the app on my iPad, I received a prompt on both my laptop and my phone.&lt;/p&gt;
&lt;p&gt;This is where you might wonder what happens if I don&amp;rsquo;t have any of those other devices handy. In that case, I can use the word list to log in. I actually ended up doing this one time, and it worked without a hitch. What happens if I also lose the word list? Let&amp;rsquo;s hope I never find out. It&amp;rsquo;s nice to know, though, that despite the fact that the content is tied to a Dropbox account, Dropbox account credentials alone aren&amp;rsquo;t enough to access it.&lt;/p&gt;
&lt;h2 id=&#34;browser-extensions&#34;&gt;Browser Extensions&lt;/h2&gt;
&lt;p&gt;You might wonder why I talked about desktop and mobile clients, switched gears to authentication, and then came back to a &amp;ldquo;client.&amp;rdquo; The reason is that the browser extensions are literally just a wrapper that provides integration with the desktop app for things like autofilling credentials. For example, clicking on the Dropbox Passwords extension icon in Safari on macOS doesn&amp;rsquo;t even open a UI for the extension&amp;hellip; it pops open the full Dropbox Passwords client. I see this frequently when nothing autofills in my browser, I click on the icon for the browser extension, and then it opens the full app where I see it requesting my PIN to unlock it.&lt;/p&gt;
&lt;p&gt;The reason why wrapper browser extensions are noteworthy for me is that there are &lt;strong&gt;no&lt;/strong&gt; standalone extensions or even direct web access. If Dropbox Passwords doesn&amp;rsquo;t have a client on your platform of choice, you&amp;rsquo;re simply out of luck. For example, I can&amp;rsquo;t access my passwords when using Manjaro Linux on my Pinebook Pro. I verified this by installing the browser extension; clicking on it will bring me to a lovely message that the application isn&amp;rsquo;t available for my platform.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/dbp_linux-1024x464.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Where this seems &lt;em&gt;really&lt;/em&gt; insane to me is that if I log into my Dropbox account on the web I can &lt;em&gt;see&lt;/em&gt; the vault for Dropbox Passwords! But clicking on it gives me the same screen as shown in the image above.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/dropbox.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I can&amp;rsquo;t actually do anything to access it. Even &lt;em&gt;just&lt;/em&gt; some kind of web portal like I can access with &lt;a href=&#34;https://bitwarden.com/&#34;&gt;Bitwarden&lt;/a&gt;, &lt;a href=&#34;https://www.lastpass.com/&#34;&gt;LastPass&lt;/a&gt;, or &lt;a href=&#34;https://1password.com/&#34;&gt;1Password&lt;/a&gt; would be better than &lt;strong&gt;nothing&lt;/strong&gt;. I can definitely understand not making a native Linux app a priority, but not having a browser extension or web access in 2020 blows my mind more than a little.&lt;/p&gt;
&lt;p&gt;I &lt;strong&gt;really&lt;/strong&gt; hope this is something the Dropbox Passwords team is actively working on. While the overall service isn&amp;rsquo;t quite as slick or polished as some of its competitors, the fact that it comes included with paid Dropbox Plans is a huge boon; people like myself will have to think twice about paying extra money for a service they already have included with their existing Dropbox subscription. There are some hurdles to overcome for Dropbox Passwords to reach parity with its competitors, but for many people it&amp;rsquo;ll be good enough as-is.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Migration</title>
      <link>https://hugo.unusually.pink/unusually-pink-migration/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-migration/</guid>
      <description>So Long, Squarespace! If anyone stumbles across this site who was previously an Unusually Pink reader, then you might notice that the site looks a bit different after a few months of hiatus. In the short, just under 2 year lifespan of the site it has now moved to its 3rd host. Originally it was hosted on a Vultr VPS that I had been hosting a few other things on, back when I originally bought the domain because I loved the name but had no idea what to do with it.</description>
      <content>&lt;h2 id=&#34;so-long-squarespace&#34;&gt;So Long, Squarespace!&lt;/h2&gt;
&lt;p&gt;If anyone stumbles across this site who was previously an Unusually Pink reader, then you might notice that the site looks a bit different after a few months of hiatus. In the short, just under 2 year lifespan of the site it has now moved to its 3rd host. Originally it was hosted on a &lt;a href=&#34;https://www.vultr.com/&#34;&gt;Vultr VPS&lt;/a&gt; that I had been hosting a few other things on, back when I &lt;a href=&#34;https://unusually.pink/its-all-about-being-unusually-pink/&#34;&gt;originally bought the domain because I loved the name but had no idea what to do with it&lt;/a&gt;. Then Brandi, my former co-host, and I decided to &lt;a href=&#34;https://www.dropbox.com/sh/v9yvrhsoahu2vlw/AAB_JaXv3isvQjVyIMdlPHm6a?dl=0&#34;&gt;start a podcast&lt;/a&gt;; it quickly became apparent that my web development skills weren&amp;rsquo;t exactly up to par with what we wanted to accomplish. As a result, we moved the site over to &lt;a href=&#34;https://www.squarespace.com/&#34;&gt;Squarespace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our podcast lived just long enough for the Squarespace hosting to renew before Brandi and I both decided that things had run their course. It was unfortunate that I had just forked over another year&amp;rsquo;s worth of money to Squarespace for hosting before reaching that decision. With that being said, you might be wondering why on Earth I&amp;rsquo;d be re-hosting the site somewhere else if I still have time left on the Squarespace subscription; more on that will come a little later on. With this being my first time using Squarespace, though, I thought I would first share some thoughts after running a site there for a year.&lt;/p&gt;
&lt;h2 id=&#34;the-good&#34;&gt;The Good&lt;/h2&gt;
&lt;p&gt;When I initially decided to move the site from my VPS to Squarespace, it was mainly because I knew I needed hosting &lt;em&gt;somewhere&lt;/em&gt;, and it seemed like a good chance to mess around with something new. I had run numerous blogs on a free &lt;a href=&#34;https://wordpress.com&#34;&gt;WordPress.com&lt;/a&gt; account along with compiling many of my own blogs with &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; as I tend to &lt;a href=&#34;https://unusually.pink/full-content-rss-feeds-with-hugo/&#34;&gt;discuss frequently&lt;/a&gt;. With us wanting to have a presence online that made us look like we knew what we were doing, though, I figured this was a worthwhile opportunity to justify spending the money on hosting with Squarespace.&lt;/p&gt;
&lt;p&gt;Squarespace offers, hands down, the &lt;em&gt;nicest&lt;/em&gt; management interface I&amp;rsquo;ve ever seen. Everything is very slick and inviting, without being overly cluttered and complicated. It&amp;rsquo;s simple to add new pages to your site or even branches to your site. For example, I originally migrated the blog I had been running under the Unusually Pink domain to Squarespace, but I quickly realized that the best way to handle the show notes for each podcast episode would &lt;em&gt;also&lt;/em&gt; be basically a blog. It was trivial to literally add another blog to the site; I just had to tell Squarespace what directory I wanted to host that under and which of the two would be the &amp;ldquo;main&amp;rdquo; page of the site. The two were then independent of one another.&lt;/p&gt;
&lt;p&gt;Squarespace doesn&amp;rsquo;t offer nearly as many themes as you&amp;rsquo;ll find with something like WordPress, but all of the Squarespace themes are &lt;em&gt;highly&lt;/em&gt; customizable without having to wander into the realm of HTML and CSS. For example, for any theme I can change literally every color by simply using the menus presented to me. On the flip side, the WordPress theme you see right now only offered a handful of elements for color modification. Even worse, this theme offered &lt;em&gt;more&lt;/em&gt; options than many of the others I looked at, where changing anything beyond the text color would&amp;rsquo;ve involved modifying the CSS.&lt;/p&gt;
&lt;p&gt;Finally, Squarespace gives you an absurd amount of information about the traffic to your site, all without the need for any type of plugins. You can simply link up Google credentials to integrate with Google Analytics, for example, and see what people are searching for to reach your site, what position you&amp;rsquo;re in for the search results, the click percentage, how many impressions you get, etc. It also offers a very slick, interactive map if you want to drill down to the specifics of where your hits stem from.&lt;/p&gt;
&lt;h2 id=&#34;the-bad&#34;&gt;The Bad&lt;/h2&gt;
&lt;p&gt;The main purpose for the previous site on Squarespace was blogging. Case in point, there were &lt;em&gt;two&lt;/em&gt; blogs hosted on it; one for my own random posts and one for the show notes that went along with each podcast episode. Easily the single biggest nail in the Squarespace coffin is that the service is in no way &lt;em&gt;designed&lt;/em&gt; for blogging. That might seem contradictory considering I just said that I hosted not one but &lt;strong&gt;two&lt;/strong&gt; blogs on a single site there, but allow me to elaborate.&lt;/p&gt;
&lt;p&gt;Adding a blog to Squarespace just means that when you go to edit the site, you have two different streams of posts you can choose from. You pick the blog, say you want to make a new post, and start to edit the content. This is where things immediately get murky. The editor for authoring content in Squarespace is pretty bad. It tries to break the content of each post down into blocks the way the current WordPress editor does, but it does so in an extremely clunky, unintuitive way. Simple things like handling the appearance of media you upload is often not possible, meaning that I had to resize every photo prior to uploading since I knew there would be no good options for scaling this after the fact. Likewise, trying to embed any sort of content was frequently gated behind a paywall; I couldn&amp;rsquo;t embed the player for each episode into the post with the show notes because they wanted me to pay more for that privilege. I couldn&amp;rsquo;t embed tweets but had to just link to them. That may not have been a big deal were it not for the fact that the Squarespace plan I was on was already more than &lt;strong&gt;double&lt;/strong&gt; what I&amp;rsquo;m paying for hosting now.&lt;/p&gt;
&lt;p&gt;As another blow to blogging, Squarespace doesn&amp;rsquo;t provide any real outlet for managing the posts on the site. While in the management interface, for example, going to one of the two blogs I had added would simply show me a lists of posts on the left in chronological order. If the post I needed to modify was at the very bottom of the list because it was old, then I had to just keep scrolling until I got to it, letting the clusters of posts incrementally load the further I scrolled. There weren&amp;rsquo;t any options to just search for the post I wanted. This may have been a limitation of the theme I selected, but I was equally disappointed that I couldn&amp;rsquo;t search the blog itself for specific content, either. I frequently author blog posts that I know will help &lt;strong&gt;me&lt;/strong&gt; in the future; they live on a blog as opposed to just in my personal notes because they might also be beneficial to someone else. If I can&amp;rsquo;t easily get back to that content, though, without mindlessly clicking a &amp;ldquo;Next&amp;rdquo; button, that&amp;rsquo;s a problem. This WordPress blog offers both a search box and sane pagination; neither was an option for my Squarespace deployment. I&amp;rsquo;d frequently have to search the web for what I wanted to find with the URL of my own site to reach it. That&amp;rsquo;s a problem.&lt;/p&gt;
&lt;p&gt;The last thing I&amp;rsquo;ll mention is portability. Admittedly, WordPress might be just as bad at this, but it&amp;rsquo;s extremely difficult to take content from Squarespace and move it somewhere else. &lt;strong&gt;This&lt;/strong&gt; was the big reason why I didn&amp;rsquo;t want to continue creating content on Squarespace even though I&amp;rsquo;ve already paid for the hosting there; I knew that I didn&amp;rsquo;t want to stick with Squarespace once the current hosting expired, but anything new I posted there would just be more work to move to somewhere else later on. Squarespace offers you the ability to export your content, but it&amp;rsquo;s to an XML file. While this will get the written content for each post and the metadata about it, it will not include any media. I managed to throw together a bit of a workaround that&amp;rsquo;ll most likely be the topic of my next post, but it was still a large amount of work to move everything from one host to another.&lt;/p&gt;
&lt;p&gt;An obvious question at this point would be:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But aren&amp;rsquo;t you just in the same option regarding portability after moving to WordPress?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The answer is&amp;hellip; maybe. As long as I don&amp;rsquo;t become disenfranchised with the platform as a whole, there are &lt;em&gt;many&lt;/em&gt; different WordPress hosting platforms out there. If I want to move from one to another, I can easily export my site or take a backup of it and move the content somewhere else. I had initially tried moving a lot of the content from Squarespace to a Hugo site I already ran, but I very quickly ran into many of the same issues I described with Squarespace regarding management and discoverability; while being lightweight is nice, sometimes having a CMS is beneficial.&lt;/p&gt;
&lt;h2 id=&#34;wrap-up&#34;&gt;Wrap-Up&lt;/h2&gt;
&lt;p&gt;Despite the vibe you may get, I don&amp;rsquo;t dislike Squarespace at all. I feel like their business is really tailored to users who want a professional, mostly static website but who don&amp;rsquo;t have the skills to create that themselves. For a hobbyist like myself with a focus on blogging, the premium you pay for Squarespace gets you essentially nothing. Any WordPress instance is going to be a better blogging platform, and one that is significantly cheaper at that. Similarly, if you need to have firm divisions in your site (e.g. a blog for the sake of shitposting and a blog for podcast show notes), you can&amp;rsquo;t easily do that within WordPress. While you can create multiple pages, such as the &lt;a href=&#34;https://unusually.pink/about/&#34;&gt;About page&lt;/a&gt; here, you can&amp;rsquo;t set up an entirely separate blog.&lt;/p&gt;
&lt;p&gt;At least for the moment, what I did with Squarespace for both a blog and podcast repository wouldn&amp;rsquo;t be possible with WordPress. For a standalone blog, though, the experience is &lt;em&gt;significantly&lt;/em&gt; better on WordPress. It&amp;rsquo;s important to understand what the goal of your site is and what you need out of your platform. When that goal changes, moving platforms might be the best move. Hopefully my next post on how I migrated my images between Squarespace and WordPress can help with that.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Note-Taking With Notable</title>
      <link>https://hugo.unusually.pink/note-taking-with-notable/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/note-taking-with-notable/</guid>
      <description>The Others I’ve struggled for years with finding a good, reliable, and simple note-taking application that fit my needs and didn’t lock me in to a particular platform. When I started my career, I was using Evernote for handling my notes at work. At the time, the free version of Evernote was pretty solid which was good because I didn’t have the money to be spending on notes. After a few years, however, Evernote apparently decided that not enough people were paying for the premium version of the product; as a result they crippled the free version.</description>
      <content>&lt;h2 id=&#34;the-others&#34;&gt;The Others&lt;/h2&gt;
&lt;p&gt;I’ve struggled for years with finding a good, reliable, and simple note-taking application that fit my needs and &lt;em&gt;didn’t&lt;/em&gt; lock me in to a particular platform. When I started my career, I was using &lt;a href=&#34;https://evernote.com/&#34;&gt;Evernote&lt;/a&gt; for handling my notes at work. At the time, the free version of Evernote was pretty solid which was good because I didn’t have the money to be spending on notes. After a few years, however, Evernote apparently decided that not enough people were paying for the premium version of the product; as a result they crippled the free version. The free version had previously been limited to the amount of data you could sync in a month, and that alone seemed reasonable. They added on to this by limiting the number of &lt;em&gt;devices&lt;/em&gt; which could connect to an account. Since having my work laptop, personal laptop, and phone all connect was no longer an option, I decided to look for something else.&lt;/p&gt;
&lt;p&gt;At the time, nothing else really stuck out to me. I was working in a &lt;strong&gt;very&lt;/strong&gt; Microsoft-centric environment and was managing Office 365 at the time a fairly new service. I opted to use &lt;a href=&#34;https://www.onenote.com/signin?wdorigin=ondc&#34;&gt;OneNote&lt;/a&gt; since it would integrate in to Office 365. I almost immediately hated pretty much everything about OneNote, from the appearance, to how shitty the web app was at the time, to how poorly it would index and search my notes. However, I stuck with it for &lt;em&gt;years&lt;/em&gt; because 1.) it was able to import my years of existing notes from Evernote and 2.) intertia made it easy to stay with a product (even if I strongly disliked it) because it meant I didn’t need to invest my time in anything else.&lt;/p&gt;
&lt;p&gt;When I finally switched to a new job about a year ago, though, I decided it was time for a fresh start with my notes. I was working in a new role that meant my years of previous notes were no longer going to be nearly as important to me as they were. In the rare instance I needed one, I could easily pop open the OneNote (finally improved) web app and find it; I didn’t need to worry about importing those notes into another system for daily use. Since the job change also marked a change in switching from Windows to macOS for work, I originally started off using &lt;a href=&#34;https://www.icloud.com/notes&#34;&gt;Apple Notes&lt;/a&gt;. I rather like Apple Notes in that it’s simple, fast, lightweight, and it syncs nicely between my MacBook, iPhone, and iPad. However, I quickly found that being locked in to Apple’s ecosystem for my notes wasn’t exactly what I was wanting. For example, while there’s a web app for Apple Notes, it’s clunky and slow. This means accessing my notes from my personal laptop running Linux is a painful experience. Likewise, what if I stopped using Apple products in the future? It makes no sense to be locked in to a particular hardware vendor when it comes to something as ubiquitous as note-taking software. While I still use Apple Notes occasionally for quick, personal notes that I’m only accessing from my phone, I didn’t want to continue using it as my primary note-taking application.&lt;/p&gt;
&lt;p&gt;Since I was already an avid Dropbox user and had been for many years, I decided to give &lt;a href=&#34;https://www.dropbox.com/paper&#34;&gt;Dropbox Paper&lt;/a&gt; a try. I was initially drawn to it since it seemed like it was basically &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt;, the markup language I perfer to write things in. In fact, all of the posts for this blog are created in Markdown and compiled through &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. In reality, though, the syntax wasn’t exactly Markdown but a weird mix where some pieces of Markdown had been cherry-picked (e.g. bold, italics) while others were ignored (e.g. hyperlinks.) Being that the files were created with a &lt;code&gt;.paper&lt;/code&gt; extension also meant they weren’t Markdown files I could directly edit with something else in a clean manner; I was locked in to Dropbox. What if I wanted to change my cloud storage to something different, which could very well happen if &lt;a href=&#34;https://protonmail.com/blog/protondrive-security/&#34;&gt;ProtonDrive&lt;/a&gt; lives up to my expectations when it releases.&lt;/p&gt;
&lt;p&gt;This is when I started to realize that what I &lt;strong&gt;really&lt;/strong&gt; wanted was something that would allow me to easily work with Markdown but that would leave vanilla Markdown files on my system. These files could be synced through whatever means I wanted to use, be in Dropbox, ProtonDrive, iCloud, or anything else; I didn’t want to be dependent upon a particular sync mechanism. Likewise, I needed the files to &lt;strong&gt;be&lt;/strong&gt; Markdown so that I wasn’t dependent upon a particular application, either. I’ve discussed before how I love having all of the posts on this site saved as Markdown because it means that I can (and have!) moved them quickly and easily between different websites. I wanted to have the same flexibility with my notes.&lt;/p&gt;
&lt;h2 id=&#34;notable&#34;&gt;Notable&lt;/h2&gt;
&lt;h3 id=&#34;the-good&#34;&gt;The Good&lt;/h3&gt;
&lt;p&gt;I did a quick search for note-taking applications that deal with Markdown, and one of the first results I got was &lt;a href=&#34;https://notable.app/&#34;&gt;Notable&lt;/a&gt;. Almost immediately it seemed to fit the bill. It was a simple, lightweight application that dealt with Markdown files. When a file is open in edit mode, I see all of the Markdown syntax I know and love. When I save a file, the Markdown is rendered for easy consumption. While I don’t get a live-preview like I do with &lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;, I think this is a much more elegant setup for note-taking and reference.&lt;/p&gt;
&lt;p&gt;It’s important to note, pun not intended, that the name for “Notable” gives away the fact that it is &lt;em&gt;focused&lt;/em&gt; on notes in particular. When I was discussing my attempts to find a good Markdown editor for my notes, a friend of mine shared with me an &lt;a href=&#34;https://www.relay.fm/mpu/548&#34;&gt;episode of the Mac Power Users podcast focused on Markdown&lt;/a&gt;. While they list a lot of options (with an obvious focus on software for Apple products), many were not note-specific; some were just Markdown editors. For example, &lt;a href=&#34;https://bywordapp.com/&#34;&gt;Byword&lt;/a&gt; looks cool but seems to be much more focused on a minimalist writing experience than on a note-taking experience. While I could use something like that and simply search through my notes with &lt;code&gt;grep&lt;/code&gt; from the CLI, if I wanted to do that I would just use Vim or Atom as my editor and be done with it. I was &lt;em&gt;really&lt;/em&gt; looking for something that would allow me to easily categorize and search my notes. Notable does this through tags which can be applied to each of my notes. Tags are used as an organization method; with them it’s easy to then do a text search across the content of either all of my notes or on just the notes with particular tags applied.&lt;/p&gt;
&lt;p&gt;All of the notes created in Notable are &lt;code&gt;.md&lt;/code&gt; files that live in a directory I choose. At the moment, that directory is inside of my Dropbox folder. This is especially cool for a couple of reasons. First off, Dropbox can render Markdown files. So if I just need to &lt;em&gt;reference&lt;/em&gt; one of my notes from another device, I can simply go through Dropbox on the web, open the file, and reference all of my notes. I just have to know the name of the file since the tags are not readily accessible or searchable outside of Noteable. All of that information is stored as metadata at the top of each &lt;code&gt;.md&lt;/code&gt; file.&lt;/p&gt;
&lt;h3 id=&#34;the-bad&#34;&gt;The Bad&lt;/h3&gt;
&lt;p&gt;While using Notable has been working well for me after about a month, there are a couple of things that could be better. The immediate problem is that there isn’t any type of mobile app, and even if there were a mobile app I don’t know exactly how it would continue to sync since Dropbox isn’t keeping my files directly on my iPhone and iPad the way that it does on my MacBook. I think the design of Notable would need to be fundamentally changed, and suddenly integration with cloud storage would need to be done at the application level rather than the filesystem level. I don’t think that’s a good solution. Similarly, I also don’t really &lt;strong&gt;want&lt;/strong&gt; to be authoring a bunch of Markdown content on my mobile devices, either. Most of the notes I’d be using on my phone are more personal (e.g. my grocery list) and those I continue to use Apple Notes for. In the instance I need to &lt;em&gt;view&lt;/em&gt; some notes from Notable on my mobile device, that’s where opening them from Dropbox and rendering the Markdown works rather well.&lt;/p&gt;
&lt;p&gt;Notable itself exists on a wide array of platforms. While it’s fairly simple to install on macOS or Debian-based Linux, I haven’t installed it yet on my Manjaro Linux laptop where it would be available via the &lt;a href=&#34;https://aur.archlinux.org/packages/notable-bin/&#34;&gt;AUR&lt;/a&gt;. I didn’t see the point since on this machine I haven’t installed &lt;a href=&#34;https://aur.archlinux.org/packages/dropbox/&#34;&gt;Dropbox&lt;/a&gt;, either, and that’s where all of the notes are. On this machine, however, I mainly only need to reference blog-specific notes; for those I’m typically just once again opening the files from Dropbox on the web. In the instance that I want to edit a note, I can use &lt;a href=&#34;https://dillinger.io/&#34;&gt;Dillinger&lt;/a&gt; for that to edit the files directly in Dropbox from the cloud. In another life, I made &lt;em&gt;heavy&lt;/em&gt; use of Dillinger for authoring blog posts for WordPress via Markdown; this was back when WordPress had support for authoring content in Markdown but didn’t support it in their editor.&lt;/p&gt;
&lt;p&gt;In &lt;em&gt;very&lt;/em&gt; rare cases I’ve wanted to create a new note in Notable but didn’t have access to my MacBook. In that case, from Dropbox I can simply copy an existing note, manually update the metadata to apply the appropriate tags, and then make whatever notes I need. I’ve verified in a few occasions that this seems to work without a hitch, though I suppose it’s possible to mess something up in the metadata if you really farkle it up.&lt;/p&gt;
&lt;p&gt;Overall, the downsides I’ve enumerated here are more minor inconveniences than serious issues. I am curious how well the application will scale; right now I have a few dozen notes saved and everything is snappy. If I reach the same number of notes that I had in OneNote, though, I’m curious how quickly things like searching and swapping between notes will continue to be. The good news, though, is that since I’m not really locked in to Notable given that the files are just Markdown, if there are any problems in the future it shouldn’t be too terribly difficult to switch to something else or just work with the files directly if I can’t find a better solution.&lt;/p&gt;
&lt;p&gt;If you’re comfortable with Markdown and the idea of controlling your notes without being locked into a particular application for editing and syncing them is important to you, then I would highly recommend checking out Notable. I’m extremely pleased with it right now, and for the low cost of free there’s really no reason &lt;em&gt;not&lt;/em&gt; to give it a shot. It’s worth mentioning that while Notable &lt;a href=&#34;https://github.com/notable/notable/blob/master/SOURCE_CODE.md&#34;&gt;was originally open source&lt;/a&gt;, that’s no longer the case. While I’d personally prefer if it was open source, it’s not a dealbreaker for me.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>It&#39;s Always DNS</title>
      <link>https://hugo.unusually.pink/its-always-dns/</link>
      <pubDate>Sun, 30 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/its-always-dns/</guid>
      <description>There&amp;rsquo;s a saying among system administrators:
 It&amp;rsquo;s always DNS.
 Meaning that whenever there’s an issue, DNS is likely the culprit. This morning that adage proved itself yet again.
My home network is currently running off of a Cradlepoint router. Cradlepoint’s specialty is making routers that can leverage LTE, so my router is configured to use my home ISP as the primary WAN link, but it will fail over to a cellular connection if my home ISP is unavailable.</description>
      <content>&lt;p&gt;There&amp;rsquo;s a saying among system administrators:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s always DNS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Meaning that whenever there’s an issue, DNS is likely the culprit. This morning that adage proved itself yet again.&lt;/p&gt;
&lt;p&gt;My home network is currently running off of a &lt;a href=&#34;https://cradlepoint.com/&#34;&gt;Cradlepoint&lt;/a&gt; router. Cradlepoint’s specialty is making routers that can leverage LTE, so my router is configured to use my home ISP as the primary WAN link, but it will fail over to a cellular connection if my home ISP is unavailable. This is pretty handy, especially considering that I now work from home full-time. That being said, mobile data isn’t cheap here, and the data plan the Cradlepoint is using is paid for by my company. While it’s nice to fail over to LTE while I’m trying to work, I &lt;em&gt;don’t&lt;/em&gt; want to be eating through LTE data while I’m just sitting on the couch watching Hulu. As a result, I’ve configured alerting from the router’s cloud management platform to notify me when a failover occurs so that I can troubleshoot the network and tailor my online activity accordingly if I’m going to be on LTE for a while.&lt;/p&gt;
&lt;p&gt;This morning was basically one of the worst starts to a weekend morning where I want to hang out with a cup of coffee and catch up on my RSS feeds. I woke up to an email alert from a few hours prior letting me know that my router had failed over to LTE. It happened once around 6 AM for a few minutes, failed back over to my ISP network, and then maintained that for roughly 40 minutes before failing over to LTE again a little before 7 AM. The first step, which I could easily do from bed with my phone, was to check for any outages from my ISP. Logging into my account there showed me that there weren’t any known outages, though.&lt;/p&gt;
&lt;p&gt;Finally being forced to shuffle out of bed and into the living room to get eyes on the situation, I saw that the lights on the modem looked normal. I logged into the router’s management interface and verified that everything looked correct. I rebooted the modem to be safe, and the Cradlepoint immediately reconnected to LTE rather than using my modem’s connection. I bounced the Cradlepoint, and the connection status persisted. I disabled LTE on the router, and it listed the Ethernet port as the current WAN link, which seemed good. I tried connecting to &lt;a href=&#34;https://laifu.moe&#34;&gt;Laifu.moe&lt;/a&gt;, though, and it wouldn’t load up. I tried to ping one of the &lt;a href=&#34;https://www.opendns.com/&#34;&gt;OpenDNS&lt;/a&gt; servers of &lt;code&gt;208.67.220.220&lt;/code&gt; and also got no response. This was a critical mistake, though I didn’t know it yet at the time.&lt;/p&gt;
&lt;p&gt;Thinking now that maybe something was up with my Cradlepoint, I pulled a bin of miscellaneous tech stuff out of the closet and fished through it to find the router from my ISP that I never use. I plugged that in line after my modem, removing the Cradlepoint from the equation, and bounced the modem. The ISP-provided router came online right away with the characteristic blue light that indicates everything is fine. I connected my laptop to its WiFi network and tried to load a webpage… with no success. I once again tried to ping &lt;code&gt;208.67.220.220&lt;/code&gt; also without any response.&lt;/p&gt;
&lt;p&gt;This was when I finally realized the flaw in my troubleshooting. Both the Cradlepoint and my ISP-provided router had been configured by me to use the OpenDNS servers as what they hand out with DHCP leases. Literally all of my devices are using &lt;code&gt;208.67.220.220&lt;/code&gt; and &lt;code&gt;208.67.222.222&lt;/code&gt; as their DNS servers. Likewise, the Cradlepoint needs something it can test to determine if a WAN link is up or down so that it can fail over to LTE and fail back to the Ethernet WAN link. I had &lt;em&gt;that&lt;/em&gt; set as &lt;code&gt;208.67.220.220&lt;/code&gt; as well. So what if &lt;strong&gt;that&lt;/strong&gt; was the problem? While still connected to my ISP router’s WiFi network, I tried to ping &lt;code&gt;8.8.8.8&lt;/code&gt; and immediately got a response. OpenDNS is what was unreachable.&lt;/p&gt;
&lt;p&gt;Ripping the ISP router out of the network, I linked the Cradlepoint back up. I reconfigured it to use &lt;a href=&#34;http://1.1.1.1/&#34;&gt;1.1.1.1&lt;/a&gt; as the DNS servers it hands out, and to leverage that for the state of the WAN link. As soon as I did that, everything began working and the Cradlepoint failed back to the Ethernet WAN link on the next check. I should probably rethink this setup where I’m using the same IP address for DNS as I am for the state of the WAN, but I should also remember that it’s always DNS and check that a little earlier in the process.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Full Content RSS Feeds With Hugo</title>
      <link>https://hugo.unusually.pink/full-content-rss-feeds-with-hugo/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/full-content-rss-feeds-with-hugo/</guid>
      <description>Last week I made a test post on Mastodon linking to one of my blogs via curl. I was doing this to see how to best handle the formatting for a script I was working on to periodically check my blog and link to any new posts from Mastodon. My friend tomasino who I’ve known for quite a while through SDF reached out to ask if there was an RSS feed for it.</description>
      <content>&lt;p&gt;Last week I made a test post on Mastodon linking to one of my blogs via &lt;code&gt;curl&lt;/code&gt;. I was doing this to see how to best handle the formatting for a script I was working on to periodically check my blog and link to any new posts from Mastodon. My friend &lt;a href=&#34;https://tilde.zone/@tomasino&#34;&gt;tomasino&lt;/a&gt; who I’ve known for quite a while through SDF reached out to ask if there was an RSS feed for it. (Note that I now link to the RSS feed from the menu!) After he subscribed, he noticed that the RSS feed is only showing part of each post. It turns out that &lt;a href=&#34;https://themes.gohugo.io/hugo-theme-terminal/&#34;&gt;my theme&lt;/a&gt;, like many others, is using the &lt;a href=&#34;https://gohugo.io/templates/rss/&#34;&gt;default RSS template&lt;/a&gt; in Hugo. This only publishes a portion of each post to the RSS feed, the idea undoubtedly being that people will navigate to the site to finish reading the content, allowing whatever trackers are in place to see this. Since I don’t have any trackers on my site and don’t care about hits, this just serves to be a pain in the butt for anyone trying to use RSS; I personally hate having to move out of my own RSS reader in order to finish reading something.&lt;/p&gt;
&lt;p&gt;With a &lt;em&gt;lot&lt;/em&gt; of help from tomasino (who clearly knows a &lt;strong&gt;significantly&lt;/strong&gt; more about RSS than I do), I started trying to modify my RSS template to include the full content for each post. Since the Terminal theme is using the default template, I started by taking the &lt;a href=&#34;https://github.com/gohugoio/hugo/blob/master/tpl/tplimpl/embedded/templates/_default/rss.xml&#34;&gt;base template content&lt;/a&gt; and placing that in &lt;code&gt;/layouts/_defaults/&lt;/code&gt; as &lt;code&gt;index.xml&lt;/code&gt; so that I had something to modify. The first thing that I did was modify the &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; tag so that it contained &lt;code&gt;.Content&lt;/code&gt; instead of &lt;code&gt;.Summary&lt;/code&gt;. This &lt;em&gt;did&lt;/em&gt; cause the full content to be displayed in the RSS feed but caused all sorts of HTML encoding problems. Next I tried modifying the &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; block again so that instead of:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.Content | html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It was:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.Content | safeHTML
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This was… slightly better. It fixed the HTML encoding problems, but it also caused the paragraph tags to disappear, meaning each post was a wall of text. tomasino’s thought was that I needed a &lt;code&gt;CDATA&lt;/code&gt; block, which I also saw &lt;a href=&#34;https://discourse.gohugo.io/t/full-text-rss-feed/8368/2&#34;&gt;mentioned in the Hugo support forum&lt;/a&gt;. The problem I quickly ran into was that the block, which I was now adding in addition to the &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; block, needed to look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;content:encoded&amp;gt;&amp;lt;![CDATA[{{ .Content | safeHTML }}]]&amp;gt;&amp;lt;/content:encoded&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Adding that directly to to the layout file cause the leading &lt;code&gt;&amp;lt;&lt;/code&gt; get HTML encoded, thus breaking the entire thing. Back to hunting on DuckDuckGo, I found &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/1740&#34;&gt;several people&lt;/a&gt; with the &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4242&#34;&gt;same issue&lt;/a&gt;. While a few people in those threads had offered some solutions for how to properly escape things, tomasino ultimately found the &lt;a href=&#34;https://github.com/ttys3/hugo-theme-terminal/commit/86c8d80e396b82f28927b659e0e0edd9d8959afe&#34;&gt;cleanest solution&lt;/a&gt;. After recompiling my site yet again, the encoding looked good, but the XML was still missing some metadata. Trying to open it in Firefox would give the following error:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;XML Parsing Error: prefix not bound to a namespace&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s worth noting, since I was missing this initially, that Firefox will &lt;em&gt;not&lt;/em&gt; render the XML when you’re using the &lt;code&gt;view-source:&lt;/code&gt; view. This makes complete sense, but I had overlooked it. You need to actually navigate to the file normally, e.g. &lt;a href=&#34;https://my.site/index.xml&#34;&gt;https://my.site/index.xml&lt;/a&gt;. What was going on here was that I needed to define the namespace, which I did by just copying the same line from tomasino’s own XML file for a site of his:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;rss version=&amp;quot;2.0&amp;quot; xmlns:atom=&amp;quot;http://www.w3.org/2005/Atom&amp;quot; xmlns:content=&amp;quot;http://purl.org/rss/1.0/modules/content/&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After this addition and yet another recompile of the site, everything finally started to appear correctly in RSS readers. Suffice to say I would’ve preferred if I could simply toggle something in my &lt;code&gt;config.toml&lt;/code&gt; file to switch my RSS feed from a summary to the full text, but at least it’s possible to modify this on your own if you have to.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Python&#39;s Beautiful Soup</title>
      <link>https://hugo.unusually.pink/pythons-beautiful-soup/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/pythons-beautiful-soup/</guid>
      <description>In my last post, I more or less just complained about what a dumpster fire developing anything for Twitter is. Originally, though, the post was intended to be about what I was developing for Twitter. It’s nothing amazing or even complicated, but it was a fun learning experience… Twitter itself not withstanding. I made a Twitter bot tweeting different shades of pink each day. Since that’ll most likely seem nonsensical to most people, let me explain.</description>
      <content>&lt;p&gt;In my &lt;a href=&#34;https://unusually.pink/twitter-development-impressions/&#34;&gt;last post&lt;/a&gt;, I more or less just complained about what a dumpster fire developing anything for Twitter is. Originally, though, the post was intended to be about &lt;em&gt;what&lt;/em&gt; I was developing for Twitter. It’s nothing amazing or even complicated, but it was a fun learning experience… Twitter itself not withstanding. I made a Twitter bot tweeting different shades of pink each day. Since that’ll most likely seem nonsensical to most people, let me explain.&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;A little over a year ago, a friend and I started a podcast. I won’t go into the backstory of why we named it what we did, but the name of the podcast revolved around the color pink due to an inside joke between my friend and I. We ended up publishing 21 episodes in the span of a year before we decided to stop it. I had moved about an hour away from where I previously lived for a new job, so recording in-person involved a decent bit of travel for one of us. Then the coronavirus pandemic really started to take off in my country, and given what a dumpster fire trying to record a podcast remotely is, my friend and I jointly decided to shutter the podcast. It was a fun experience, but nothing either of us were really wanting to keep putting time and money into. As is typically the case, we reached this conclusion just a month after the hosting for both the podcast and our website renewed. Go figure.&lt;/p&gt;
&lt;p&gt;That being said, we had set up social media for the podcast, and that social media was now doing exactly nothing. While I didn’t want to do anything with the Facebook or Instagram accounts that my co-host ran (you couldn’t pay me to touch a Facebook property), I thought about what I could do with the lingering Twitter account. I eventually decided to make a simple bot that would tweet a different shade of the color pink each day.&lt;/p&gt;
&lt;h2 id=&#34;python-and-beautiful-soup&#34;&gt;Python and Beautiful Soup&lt;/h2&gt;
&lt;p&gt;As I &lt;a href=&#34;https://unusually.pink/twitter-development-impressions/&#34;&gt;mentioned previously&lt;/a&gt;, the actual code to post to Twitter ended up being extremely simple. I just used the &lt;a href=&#34;https://github.com/ryanmcgrath/twython&#34;&gt;Twython&lt;/a&gt; library to do the heavy lifting. What ended up being more interesting was how to create the database of colors I would use. After all, I don’t personally know that many different shades fo pink, and I wanted to include the RGB and hex color codes for each shade in the daily post. I basically needed a repository of shades of pink. After some DuckDuckGo-fu, I eventually found &lt;a href=&#34;https://html-color.codes/pink#:~:text=Pink%20Color%20Codes%3A%20colors%20shown%20are%20similar%20to,palevioletred%3A%20%23db7093%20%2F%20rgb%28219%2C112%2C147%29%20deeppink%3A%20%23ff1493%20%2F%20rgb%28255%2C20%2C147%29&#34;&gt;a page that included not just the RGB and hex color codes, but also a &lt;em&gt;name&lt;/em&gt;&lt;/a&gt;. It was exactly what I needed.&lt;/p&gt;
&lt;p&gt;The only problem was how to get the information from that page into something I could use in my script for the bot. My immediate thought was to copy and paste all of the information, but along with being error-prone over hundreds of shades, that’s also insanely tedious. In a shell script, something like &lt;code&gt;xmllint&lt;/code&gt; would fit the bill. Since I was already working in Python, though, I decided to use &lt;a href=&#34;https://pypi.org/project/beautifulsoup4/&#34;&gt;Beautiful Soup&lt;/a&gt;. I had actually used Beautiful Soup one time before on a project years ago where I admittedly didn’t really know Python and most definitely didn’t understand what I was doing with Beautiful Soup; I just ended up copying and pasting a bunch of code from the Internet until things worked the way I wanted.&lt;/p&gt;
&lt;p&gt;This time, I took just a little time to read the documentation for Beautiful Soup and understand what I was actually doing. The crux of my script comes down to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;divisions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;div&amp;#34;&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;class&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;color-inner&amp;#34;&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gets me each of the &lt;code&gt;div&lt;/code&gt; groupings for a color. With each of those groupings defined, it was then simple to get the name, hex, and RGB information I needed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; division &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; divisions:
    color_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; division&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;span&amp;#34;&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;class&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;color-sub&amp;#34;&lt;/span&gt;})&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()
    color_hex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; division&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;span&amp;#34;&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;class&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;color-id&amp;#34;&lt;/span&gt;})&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()
    color_rgb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; division&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;span&amp;#34;&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;class&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;color-rgb&amp;#34;&lt;/span&gt;})&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Instead of trying to copy everything by hand, I had a working script to get all of the colors without needing to worry about human error. Plus, if the source website adds any new colors it’s trivial to re-run the script and get an updated list. I ended up making a map for each color and adding all of the maps to a list.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;rows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: color_name, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hex&amp;#34;&lt;/span&gt;: color_hex, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rgb&amp;#34;&lt;/span&gt;: color_rgb})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then I wrapped it all up at the end by exporting the list of maps to a JSON file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pinks.json&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; outfile:
   json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dump(all_colors, outfile)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;My other script which actually pushes the post to Twitter ingests this JSON file and then selects a random shade from it.&lt;/p&gt;
&lt;h2 id=&#34;twitter-still-sucks&#34;&gt;Twitter Still Sucks&lt;/h2&gt;
&lt;p&gt;As if further proof was needed that Twitter is garbage, though, I found myself simultaneously amused and irritated just a few days ago when I saw that a daily post had not been completed. When logging into the account for the bot, I received a notification that the account had been flagged for “suspicious activity”, and I had to walk through a verification process before the account could post again. It’s amazing to me that a platform which tolerates the most hateful and dangerous rhetoric chooses to flag a clear bot that makes a single post each day with details on a different shade of the color pink as “suspicious.” It’s just further proof that Twitter really isn’t worth anyone’s time at this point.&lt;/p&gt;
&lt;p&gt;My latest project, though, involves pushing data to Mastodon instead of Twitter. This post will serve as the first test of it, so assuming everything works look for a post on that in the near future.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Twitter Development Impressions</title>
      <link>https://hugo.unusually.pink/twitter-development-impressions/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/twitter-development-impressions/</guid>
      <description>I recently had an idea to turn the Twitter account for my defunct podcast into a Twitter bot posting a new shade of pink every day; it makes sense because the podcast and Twitter account were centered around the color pink. I didn’t really think anyone would care about this particular bot, but it seemed like a fun project idea to work on. It ended up being an interesting learning experience, but not at all for the reasons I actually expected.</description>
      <content>&lt;p&gt;I recently had an idea to turn the Twitter account for my defunct podcast into a Twitter bot posting a new shade of pink every day; it makes sense because the podcast and Twitter account were centered around the color pink. I didn’t really think anyone would care about this particular bot, but it seemed like a fun project idea to work on. It ended up being an interesting learning experience, but not at all for the reasons I actually expected.&lt;/p&gt;
&lt;h2 id=&#34;developer-account&#34;&gt;Developer Account&lt;/h2&gt;
&lt;p&gt;Getting a Twitter developer account can be either really simple or really irritating, and there’s no discernable difference that dictates what experience you’ll get. I went to the &lt;a href=&#34;https://developer.twitter.com/en&#34;&gt;Developer portal&lt;/a&gt; and registered for a developer account with my normal Twitter account. This account is clearly me IRL; my name is in it, I have a photo of myself on the account, it links to my personal website, and the post history clearly indicates that the account is a person rather than a bot. As part of registering for the account, I had to describe what I was going to create. I honestly stated that I was just going to create a bot that would tweet a shade of pink each day. Twitter asks questions such as if you plan to export data out of the service, if you plan to display information posted to Twitter outside of Twitter, etc. I answered “no” to all of these questions since I wasn’t pulling any data out of the service. I just needed to post.&lt;/p&gt;
&lt;p&gt;After I completed the registration form, I received a message that my account was under review and I would receive a notification when that review was completed. I was a little bummed since it happened to be a long weekend for me, and I was hoping that this project would give me something to fill the time. I was hopeful maybe the review would be completed quickly. I was wrong. It took just shy of 2 weeks before the review was completed. I had almost forgotten about the whole thing since I’ve been trying to stay off of Twitter as of late, but then I got an email telling me I was allowed in. Wild.&lt;/p&gt;
&lt;h2 id=&#34;authentication&#34;&gt;Authentication&lt;/h2&gt;
&lt;p&gt;Handling &lt;a href=&#34;https://docs.joinmastodon.org/methods/apps/oauth/&#34;&gt;authentication with Mastodon&lt;/a&gt; is a relatively simple, straightforward process if you’ve done this sort of thing with… pretty much any API. It’s a little different than the type of things I do for work since creating a client means people &lt;em&gt;other&lt;/em&gt; than the person writing the code can be authenticating, but it still makes sense and is well documented. On the other hand, &lt;a href=&#34;https://developer.twitter.com/en/docs/basics/authentication/oauth-1-0a&#34;&gt;authenticating through Twitter&lt;/a&gt; is a complete nightmare. Outside of the specifics of authentication, everything in Twitter’s documentation seems aimed at keeping each individual page as short as possible. As a result, every page links to numerous other pages, and you end up having dozens of browser tabs open just to have some clue as to what your complete workflow looks like. For the OAuth 1.0a option, which is &lt;em&gt;the&lt;/em&gt; option to use if you need an account other than the registered developer account to leverage an application, they recommend strongly against making the &lt;a href=&#34;https://awk.ninja/posts/groovy_jwt/&#34;&gt;JWT&lt;/a&gt; yourself in favor of leveraging a library… but they don’t actually share any of the particulars about their JWT setup… or even &lt;em&gt;call&lt;/em&gt; it a JWT. You very clearly get the impression that Twitter doesn’t want anyone actually using their API. Crazy.&lt;/p&gt;
&lt;p&gt;After seeing the poor documentation, I abandoned my ideas of making my bot in Rust or maybe Bash, and instead just decided to use Python with the &lt;a href=&#34;https://github.com/ryanmcgrath/twython&#34;&gt;twython library&lt;/a&gt;. I’ve manually parsed together enough JWTs that I didn’t think I cared enough to do it again for this. Seeing the workflow for twython showcased the next bit of crazy, though, which is that the &lt;a href=&#34;https://developer.twitter.com/en/docs/basics/authentication/oauth-1-0a/obtaining-user-access-tokens&#34;&gt;authentication workflow sends the OAuth token to the callback URL&lt;/a&gt;. I basically needed to set up something completely different with an HTTP listener for the OAuth token so that I could move forwad with authentication. That was &lt;em&gt;entirely&lt;/em&gt; more than I wanted to put into this simple bot.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;The craziness of this makes me still think I’m not actually understanding the setup properly. I did verify, though, that the response received from where I was running the code included just the HTTP status, so the information is not coming back to the sender by default. Likewise, I couldn’t open my application up to other users without giving a callback URL, so omitting that wasn’t an option, either. Hit me up on Mastodon if I’m just dumb and there’s a reasonable way to handle this that I’m misunderstanding.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;registering-another-developer-account&#34;&gt;Registering Another Developer Account&lt;/h2&gt;
&lt;p&gt;At this point I realized that I really should have just registered for a developer account with the account I was planning to use with the bot. I started that process again fully expecting to wait another two weeks. I filled out all of the same information during the registration process, but this time when I completed the form I was immediately kicked over to the developer portal to start working on whatever I needed.&lt;/p&gt;
&lt;p&gt;I’m still amazed that while the registration for my actual account that I use as a human being, I had to wait two weeks to get developer access. When I registered witht the account that had been used for my podcast, though, I was allowed access sans review. The podcast Twitter account generally had nothing posted to it other than the automatic posts from &lt;a href=&#34;https://www.squarespace.com/&#34;&gt;Squarespace&lt;/a&gt;, had the podcast logo as the profile picture, had no website linked, and quite clearly was not a person… yet that’s the account that got in right away. Okie dokie!&lt;/p&gt;
&lt;h2 id=&#34;wrap-up&#34;&gt;Wrap-Up&lt;/h2&gt;
&lt;p&gt;Since I now had the account I was planning to post from in the developer portal, I could spin up my OAuth token directly from there in my browser as opposed to having to leverage 3-legged OAuth to a callback URL. As I started working on the code, though, I quickly realized that the script for the bot to post was going to be insanely easy. Instead, the much more interesting part of the code was the script I wrote to make a little local repository of information on shades of pink that was completely unrelated to Twitter. I had originally planned to cover that in this post, but since this ended up being longer than I expected that’s what I’ll cover next time around.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Grep and Sed to Modify All Files in a Directory</title>
      <link>https://hugo.unusually.pink/grep-and-sed-to-modify-all-files-in-a-directory/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/grep-and-sed-to-modify-all-files-in-a-directory/</guid>
      <description>I recently decided to rebrand one of my websites, complete with a different domain, title, and author (that’s me!) This is part of the beauty of using a static site generator like Hugo; I updated the domain in my configuration file, and everything else just magically changed when the site was recompiled. The caveat is that I wanted to change the author attribute in each post to a different name to match my new Mastodon profile.</description>
      <content>&lt;p&gt;I recently decided to rebrand one of my websites, complete with a different domain, title, and author (that’s me!) This is part of the beauty of using a static site generator like &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;; I updated the domain in my configuration file, and everything else just magically changed when the site was recompiled. The caveat is that I wanted to change the &lt;code&gt;author&lt;/code&gt; attribute in each post to a different name to match my &lt;a href=&#34;https://fosstodon.org/@consoleaccess&#34;&gt;new Mastodon profile&lt;/a&gt;. In this particular &lt;a href=&#34;https://themes.gohugo.io/hugo-theme-terminal/&#34;&gt;Hugo theme&lt;/a&gt; the author is specified in each post rather than in the central &lt;code&gt;config.toml&lt;/code&gt; file so that I can have different authors in a single site. This meant I needed to mass modify all of my posts to change the author (at least for the ones that have it since I previously used a theme where the author wasn’t specified.) I knew that this should be possible with &lt;code&gt;sed&lt;/code&gt; but couldn’t remember the exact syntax. Since Hugo stores all of the Markdown files for my posts in a single directory, though, I knew it shouldn’t be too complicated.&lt;/p&gt;
&lt;p&gt;The syntax &lt;code&gt;sed&lt;/code&gt; uses to do find-and-replace is &lt;em&gt;very&lt;/em&gt; familiar to me since I use the same syntax in &lt;code&gt;vim&lt;/code&gt; all the time. It’s great for those moments when I realize I’ve given a particular variable or function an extremely poor name and need to change every instance in a particular file. So what I really needed in this case was to recall how to use the CLI to change the value in multiple files; specifically I needed to change every file in a particular directory. It didn’t take many searches for me to confirm that this would require another utility to discover each file so that &lt;code&gt;sed&lt;/code&gt; could then update them. Ultimately I got up and running with the following commands thanks to &lt;a href=&#34;https://isaacsukin.com/news/2013/06/command-line-tip-replace-word-all-files-directory&#34;&gt;what I found on this site&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;grep -lr -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;author = \&amp;#34;oldName\&amp;#34;&amp;#34;&lt;/span&gt; . | xargs sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s/author = \&amp;#34;oldName\&amp;#34;/author = \&amp;#34;consoleaccess\&amp;#34;/g&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this case, &lt;code&gt;grep&lt;/code&gt; is discovering the files and then I’m using &lt;code&gt;xargs&lt;/code&gt; to redirect the output from &lt;code&gt;grep&lt;/code&gt; to the arguments for &lt;code&gt;sed&lt;/code&gt;. I won’t rehash the specific parameters of each command, as the original site I linked to above does a terrific job of that. However, it’s worth mentioning that I was able to swap out &lt;em&gt;just&lt;/em&gt; the instances of my old account name for the Markdown file’s &lt;strong&gt;author&lt;/strong&gt; property by specifying the full line instead of just the account name; all I had to do was use the &lt;code&gt;\&lt;/code&gt; to escape things like the double-quotes that I needed to include. This way everything runs as efficiently as possible since &lt;code&gt;grep&lt;/code&gt; is only returning the files that contain the old name in the author property, and then &lt;code&gt;sed&lt;/code&gt; is only changing that single line of each file passed to it.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Quarantine Time Script</title>
      <link>https://hugo.unusually.pink/quarantine-time-script/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/quarantine-time-script/</guid>
      <description>Are you tired of sitting at home wondering how many days you’ve been choosing to quarantine like a responsible adult? Me too! The number of times I’ve been in conversations or working on posts for blogs or social media and thought, “Wait, how long have I been at home now?” followed by wasting time doing rough calendar math in my head was enough that I finally burned some time this weekend putting together a script for it.</description>
      <content>&lt;p&gt;Are you tired of sitting at home wondering how many days you’ve been choosing to quarantine like a responsible adult? Me too! The number of times I’ve been in conversations or working on posts for blogs or social media and thought, “Wait, how long have I been at home now?” followed by wasting time doing rough calendar math in my head was enough that I finally burned some time this weekend putting together a script for it.&lt;/p&gt;
&lt;p&gt;In the interest of full disclosure, every time this has come up before I’ve done some very simple PowerShell to actually calculate this, at least once I passed the point where I couldn’t just think of it off the top of my head:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$now = Get-Date
$then = Get-Date -Date &amp;quot;2020/03/11&amp;quot;
($now - $then).Days
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Clearly this is extremely simple! I’ve found myself needing a few shell scripts, though, so I figured it would be a good opportunity to write this in Bash instead for a little exposure. The biggest key was to just figure out how the heck to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a date at a specific time.&lt;/li&gt;
&lt;li&gt;Subtract the dates.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;date-at-a-specific-time&#34;&gt;Date at a specific time&lt;/h2&gt;
&lt;p&gt;This was pretty easy after a quick &lt;a href=&#34;https://duckduckgo.com&#34;&gt;DuckDuckGo&lt;/a&gt; search. The &lt;code&gt;date&lt;/code&gt; utility includes a &lt;code&gt;-d&lt;/code&gt; parameter that allows me to give it a string that it’ll use as the date, just like &lt;code&gt;-Date&lt;/code&gt; does in PowerShell.&lt;/p&gt;
&lt;h2 id=&#34;subtract-the-dates&#34;&gt;Subtract the dates&lt;/h2&gt;
&lt;p&gt;The second piece also ended up being &lt;em&gt;much&lt;/em&gt; more straightforward than I expected. The &lt;code&gt;date&lt;/code&gt; utility similarly includes a few codes I can use to specify how I’d like the date to be formatted, including &lt;code&gt;%s&lt;/code&gt; which will give the date in seconds relative to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_time&#34;&gt;Unix epoch time&lt;/a&gt;. I could get both dates in seconds, subtract the current date from when I started quarantine, and then convert the seconds to days. For those keeping score at home, there are 86,400 seconds in a day.&lt;/p&gt;
&lt;p&gt;As an added bonus, &lt;code&gt;date&lt;/code&gt; returns the time in seconds just like everything else in the universe that isn’t Java-based. I’m looking at you, &lt;a href=&#34;https://failti.me/posts/groovy_prog/&#34;&gt;Groovy&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;getting-a-starting-date&#34;&gt;Getting a starting date&lt;/h2&gt;
&lt;p&gt;The easy method would’ve been to hard-code the date when I started quarantine and leave it at that. To make it a little more extensible, though, I instead opted to pass the date as a parameter. Given that people can pass anything as a parameter, though, I put together a regex to enforce the YYYY/MM/DD format on whatever is typed. That being said, I still included an additional check after parsing the starting date regardless since it would still be possible to specify a date that matches the regex but that isn’t real (e.g. 2020/02/31.)&lt;/p&gt;
&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s the code in all of its janky glory.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It’s extremely simple, but it was a fun little learning experience to kill some time on a weekend when I was sitting at home… continuing to quarantine…&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Hugo and the Implausibly Old Timestamp</title>
      <link>https://hugo.unusually.pink/hugo-and-the-implausibly-old-timestamp/</link>
      <pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/hugo-and-the-implausibly-old-timestamp/</guid>
      <description>Management of one of my blogs is handled through a variety of shell scripts. I have a script for executing hugo to rebuild the site and copy the output of the public directory to the folder where Nginx hosts it, for example. One of my scripts creates a tarball of the site and uses rsync to copy it to another server so that, if my VPS blows up, I can easily retrieve the backup.</description>
      <content>&lt;p&gt;Management of one of my blogs is handled through a variety of shell scripts. I have a script for executing &lt;code&gt;hugo&lt;/code&gt; to rebuild the site and copy the output of the &lt;code&gt;public&lt;/code&gt; directory to the folder where Nginx hosts it, for example. One of my scripts creates a tarball of the site and uses &lt;code&gt;rsync&lt;/code&gt; to copy it to another server so that, if my VPS blows up, I can easily retrieve the backup.&lt;/p&gt;
&lt;p&gt;After composing &lt;a href=&#34;https://unusually.pink/making-a-hash-for-the-html-integrity-property/&#34;&gt;yesterday’s post&lt;/a&gt;, though, I ran into an error with the backup script. It basically runs the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;tar -zvcf /home/fail/backups/failti_me.tar.gz blog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This started throwing a warning:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tar: blog/public: implausibly old time stamp 1754-08-30 16:53:05.128654848 -0550&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It claimed the &lt;strong&gt;public&lt;/strong&gt; directory where Hugo publishes the compiled site contents to was created in 1754… which is probably a bit older than seems plausible. My blog still published correctly; it was only &lt;code&gt;tar&lt;/code&gt; being salty about the weird timestamp. I used &lt;code&gt;stat&lt;/code&gt; to check the directory and confirmed that the timetsamp on when it was modified was completely borked:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;stat blog/public/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That told me:&lt;/p&gt;
&lt;p&gt;File: blog/public/
Size: 4096        Blocks: 8          IO Block: 4096   directory
Device: fc01h/64513d    Inode: 512063      Links: 73
Access: (0755/drwxr-xr-x)  Uid: ( 1000/    john)   Gid: ( 1000/    john)
Access: 2020-07-21 18:58:28.669384769 -0500
Modify: 1754-08-30 16:53:05.128654848 -0550
Change: 2020-07-21 18:58:28.189382080 -0500
Birth: -&lt;/p&gt;
&lt;p&gt;After some searches online I found the following &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/6161&#34;&gt;GitHub issue thread&lt;/a&gt; confirming that plenty of people other than me were seeing the same problem and that it was still present in the current version of Hugo. While I had initially been confused as to why I suddenly started seeing this now since I hadn’t upgraded Hugo or anything like that, I saw a few comments indicating that placing items in Hugo’s static directory seemed to trigger the issue; I had placed an image there from my last post, and it was the first addition to that directory in quite a while. With some additional searching and testing, I verified I could do the following to simply ignore the warning from &lt;code&gt;tar&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;tar -zvcf /home/fail/backups/failti_me.tar.gz blog --warning&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no-timestamp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I didn’t like the idea of having such a wonky date on my filesystem; as a result, I started searching for how I could fix it by manually adjusting the “Modify” timestamp. &lt;code&gt;touch&lt;/code&gt; seemed like a likely candidate, and after reviewing the &lt;a href=&#34;http://manpages.ubuntu.com/manpages/trusty/man1/touch.1.html&#34;&gt;man page&lt;/a&gt; I saw that there was a &lt;code&gt;-t&lt;/code&gt; flag for it which would allow me to manually specify the timestamp. I basically just wanted to set it to the current time so I added the following to the my script which recompiles the site, placing it after the build and before &lt;code&gt;rsync&lt;/code&gt;ing the contents of the public directory to the Nginx directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;STUPID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+%y%m%d%H%M&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
touch -t $STUPID /home/john/blog/public/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sure enough, after running this the resulting &lt;code&gt;tar&lt;/code&gt; command has no qualms. Likewise, re-running the &lt;code&gt;stat&lt;/code&gt; command from above shows the current date and time as the modified time on the directory. I really hope this bug gets fixed soon since it seems to have been around for a hot minute, but at least I have a workaround for the time being.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Making A Hash For The HTML Integrity Property</title>
      <link>https://hugo.unusually.pink/making-a-hash-for-the-html-integrity-property/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/making-a-hash-for-the-html-integrity-property/</guid>
      <description>I caused a little bit of chaos for myself the other night when I updated one of my websites. The site is a static, single page that I use for work-related bookmarks; it&amp;rsquo;s basically a site I stood up to have something at a domain I wanted to buy. While making a couple of changes to the links, I decided to update the background image. That was a little bit gross to do since the site was originally compiled with Hugo, but after the initial setup I just modified the HTML directly.</description>
      <content>&lt;p&gt;I caused a little bit of chaos for myself the other night when I updated one of my websites. The site is a static, single page that I use for work-related bookmarks; it&amp;rsquo;s basically a site I stood up to have &lt;em&gt;something&lt;/em&gt; at a domain I wanted to buy. While making a couple of changes to the links, I decided to update the background image. That was a little bit gross to do since the site was originally compiled with &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, but after the initial setup I just modified the HTML directly. In this case I used Vim to search the minified CSS to see where the background image was specified and update it to the file I wanted.&lt;/p&gt;
&lt;p&gt;After making that change, I refreshed the page to be greeted by this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/MakingAHashForTheHTMLIntegrityProperty_html-e1599494214431.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Of course, originally I didn’t think to open the developer console. Instead, I just noticed that after making the change, &lt;em&gt;none&lt;/em&gt; of my CSS was loading. Cool. Checking the source HTML file, I quickly noticed that the &lt;code&gt;link&lt;/code&gt; tag in the header where I tell it which CSS file to use had an &lt;code&gt;integrity&lt;/code&gt; property. Following that property was a straight that started with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sha256-
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It was already pretty apparent what was happening. The &lt;code&gt;integrity&lt;/code&gt; property is giving a SHA256 hash of my CSS file. Since I changed that file, the current hash no longer matched the specified hash. As a result, the CSS file was ignored. I verified this by removing the &lt;code&gt;integrity&lt;/code&gt; tag and refreshing the page. Sure enough, everything now loaded as expected. Not wanting to leave it at that, though, I dug a bit more into the property. I eventually found a great &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity&#34;&gt;MDN article&lt;/a&gt; on it. The idea is that you specify this property for files you&amp;rsquo;re pulling from a CDN, such as you&amp;rsquo;d commonly use for &lt;a href=&#34;https://getbootstrap.com/docs/3.3/getting-started/#download-cdn&#34;&gt;Bootstrap&lt;/a&gt;. Since you don&amp;rsquo;t control the source for those files, you can opt to not use them if they change without your knowledge. Pretty cool! The developer of my particular Hugo theme decided to include this in their code. While removing it fixed the issue, I figured it would be a good learning experience to use it, even if it didn&amp;rsquo;t &lt;em&gt;really&lt;/em&gt; make sense considering I was hosting the CSS locally on the same server as the website.&lt;/p&gt;
&lt;p&gt;The key was to figure out how to create the SHA256 hash. Without reading things completely (my bad; always RTFM), I first just created a hash the way I typically would:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;shasum -a &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt; ./my.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I used the output of this to complete my &lt;code&gt;integrity&lt;/code&gt; specification in HTML, and was greeted with the same disgusting, CSS-less webpage from the screenshot above. After a little more reading, I realized &lt;a href=&#34;https://stackoverflow.com/questions/54065781/how-to-generate-sha-for-integrity-html-tag&#34;&gt;the hash needed to be a base64 encoding of binary&lt;/a&gt;. I tried again with the following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;openssl dgst -sha256 -binary ./my.css | openssl base64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that if you remove the pipe and the &lt;code&gt;-binary&lt;/code&gt; switch, you&amp;rsquo;ll see the ouput of the &lt;code&gt;openssl&lt;/code&gt; command matches the output of the &lt;code&gt;shasum&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;I tried replacing the old hash in my HTML file with the new one, refreshed the page yet again, and sure enough this time everything worked as expected. As I mentioned, it doesn&amp;rsquo;t do me a ton of good in this scenario since the HTML and CSS files are all hosted off of the same machine that I control, so if someone else is changing that CSS file I have way bigger problems. It was a good learning experience for the future, though.&lt;/p&gt;
&lt;p&gt;Stay pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Groovy Programming HttpClient</title>
      <link>https://hugo.unusually.pink/groovy-programming-httpclient/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/groovy-programming-httpclient/</guid>
      <description>As a follow-up to my post on creating a JWT in Groovy, I did manage to figure out how to make an HttpClient in Groovy as opposed to making raw connections. You can see this implemented in the GitHub repository I used for the previously linked post. It was honestly pretty easy to do, and there are tons of tutorials out there; the code is essentially the same regardless of whether you&amp;rsquo;re doing it in Java, Kotlin, or Groovy.</description>
      <content>&lt;p&gt;As a follow-up to my &lt;a href=&#34;https://www.unusually.pink/blog/creating-a-jwt-in-the-groovy-programming-language&#34;&gt;post on creating a JWT in Groovy&lt;/a&gt;, I &lt;em&gt;did&lt;/em&gt; manage to figure out how to make an &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpClient.html&#34;&gt;HttpClient&lt;/a&gt; in Groovy as opposed to making raw connections. You can see this implemented in the &lt;a href=&#34;https://github.com/JFFail/GroovyJWT/blob/master/jwt.groovy&#34;&gt;GitHub repository&lt;/a&gt; I used for the previously linked post. It was honestly pretty easy to do, and there are &lt;strong&gt;tons&lt;/strong&gt; of tutorials out there; the code is essentially the same regardless of whether you&amp;rsquo;re doing it in Java, Kotlin, or Groovy. Similar to the last time, it&amp;rsquo;ll be easier to look at all of the code in the GitHub repo, but I&amp;rsquo;ll call out the specific snippets I&amp;rsquo;m referencing throughout the post.&lt;/p&gt;
&lt;h3 id=&#34;imports&#34;&gt;Imports&lt;/h3&gt;
&lt;p&gt;I do need a handful of imports to get up and running with this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.net.http.HttpClient
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.net.http.HttpRequest
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.net.http.HttpRequest.BodyPublishers
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.net.http.HttpResponse
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.net.http.HttpResponse.BodyHandlers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If these fail to import when you try to execute the code, you are likely &lt;em&gt;not&lt;/em&gt; operating at Java 11 or above. More on why I know that later&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;payload&#34;&gt;Payload&lt;/h3&gt;
&lt;p&gt;In the last post I created a JWT. Now I need to take it and parse it into JSON to send it to the API endpoint so that I can get an access token. The simplest way to do this is to place it in a Map and then convert the Map to JSON.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Map payloadMap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;auth_token&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; jwt&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
def payloadJson &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JsonOutput&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toJson&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;payloadMap&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-the-client&#34;&gt;Create The Client&lt;/h3&gt;
&lt;p&gt;The process of making requests in this method involves 3 steps. The first is to create the HttpClient object.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def httpClient &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; HttpClient&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;newBuilder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;connectTimeout&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Duration&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ofSeconds&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;followRedirects&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HttpClient&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Redirect&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NORMAL&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can set any number that fits with your use case for the timeout duration; 5 seconds was safe for me. There are a &lt;em&gt;lot&lt;/em&gt; of other options for the client so be sure to check out the documentation if you need more.&lt;/p&gt;
&lt;h3 id=&#34;create-the-request&#34;&gt;Create The Request&lt;/h3&gt;
&lt;p&gt;The request object is where the specifics of the connection are identified, like the URL and the method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def request &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; HttpRequest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;newBuilder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POST&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HttpRequest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BodyPublishers&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ofString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;payloadJson&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;uri&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;URI&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/json; charset=utf-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accept&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\*/\*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the second line, I&amp;rsquo;m specifying POST since I need to send data. I&amp;rsquo;ll cover a GET example later on. In the same line, I need to specify the format of my payload as being JSON; just throwing a JSON string at the endpoint will &lt;strong&gt;not&lt;/strong&gt; work. If you only have a single header you can use &lt;code&gt;.header&lt;/code&gt; instead of &lt;code&gt;.headers&lt;/code&gt;. What caught me off guard with the headers is that you specify multiple of them not as key-value pairs like a Map but as a simple list, with each value just following its corresponding key.&lt;/p&gt;
&lt;h3 id=&#34;send-the-request&#34;&gt;Send The Request&lt;/h3&gt;
&lt;p&gt;With the client and request both created, now it&amp;rsquo;s time to send the request.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; httpClient&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;send&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; HttpResponse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BodyHandlers&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ofString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is also pretty straightforward; it&amp;rsquo;s just worth mentioning that I&amp;rsquo;m specifying I want the response to be parsed into a string.&lt;/p&gt;
&lt;h3 id=&#34;error-checking&#34;&gt;Error Checking&lt;/h3&gt;
&lt;p&gt;I can check the &lt;code&gt;statusCode()&lt;/code&gt; method to verify my request was successful and then take action upon the reply.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;statusCode&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 200 &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    println &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${response.body()}&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    println &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: Status code: ${response.statusCode()}&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From here I can parse the results to a Map and do my normal thing.&lt;/p&gt;
&lt;h3 id=&#34;get-example&#34;&gt;GET Example&lt;/h3&gt;
&lt;p&gt;Using GET is the same as POST except for some details in the request. Obviously POST is replaced with GET, and then I have additional headers to specify.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def request &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; HttpRequest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;newBuilder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;uri&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;URI&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;currentUrl&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/json; charset=utf-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accept&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\*/\*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bearer $token&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Naturally the exact headers you need will depend on the API you&amp;rsquo;re calling. Other than that, though, the process is the exact same as it was with POST, including the way you execute the request.&lt;/p&gt;
&lt;p&gt;Of course, after I implemented all of this I discovered that the back-end in my environment that was actually executing the code was &lt;em&gt;not&lt;/em&gt; running Java 11 or better, so I couldn&amp;rsquo;t even use this setup. It&amp;rsquo;s good to know for the future, though!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Creating a JWT in the Groovy Programming Language</title>
      <link>https://hugo.unusually.pink/creating-a-jwt-in-the-groovy-programming-language/</link>
      <pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/creating-a-jwt-in-the-groovy-programming-language/</guid>
      <description>On Friday I found myself in a new situation. I was working with APIs for a new service my company has started using, but their setup was a bit more involved than what I&amp;rsquo;ve typically experienced. Accessing many services via their REST API requires you to follow a few steps to generate an application ID and an API key, you pass those with your request, and you&amp;rsquo;re done. The downside to this is that it can open up security vulnerabilities; if something happens to your API keys, for example, they can be used for nefarious purposes.</description>
      <content>&lt;p&gt;On Friday I found myself in a new situation. I was working with APIs for a new service my company has started using, but their setup was a bit more involved than what I&amp;rsquo;ve typically experienced. Accessing many services via their REST API requires you to follow a few steps to generate an application ID and an API key, you pass those with your request, and you&amp;rsquo;re done. The downside to this is that it can open up security vulnerabilities; if something happens to your API keys, for example, &lt;a href=&#34;https://medium.com/@selvaganesh93/what-happens-if-you-accidentally-commit-your-aws-access-token-to-public-github-be50d378b4c7&#34;&gt;they can be used for nefarious purposes&lt;/a&gt;. Enter the &lt;a href=&#34;https://medium.com/@selvaganesh93/what-happens-if-you-accidentally-commit-your-aws-access-token-to-public-github-be50d378b4c7&#34;&gt;JSON Web Token&lt;/a&gt; or JWT. You create a JWT by parsing together a bunch of information, like your application ID, the validity period, etc., sign it with a secret, and exchange it for an access token you can actually use to make your normal API calls.&lt;/p&gt;
&lt;p&gt;A JWT has a few advantages. First, it expires. The validity period varies based on the service; the one I was working with was 30 minutes. So if your access token is compromised, it can only work for however much time is left on the token. They can also be configured to leverage a UUID as a one-time &lt;a href=&#34;https://en.wikipedia.org/wiki/Cryptographic_nonce&#34;&gt;nonce&lt;/a&gt; to prevent replay attacks.&lt;/p&gt;
&lt;h1 id=&#34;background&#34;&gt;Background&lt;/h1&gt;
&lt;p&gt;The new service I was working with used JWTs for authentication, so I had to figure out how to do that. The vendor provided sample code, but they were leveraging Python and using a library in Python to handle the JWT. That didn&amp;rsquo;t help me too much because leveraging Python in my current setup would be difficult, and calling a library means the sample code didn&amp;rsquo;t show me how to piece things together. I&amp;rsquo;ve mentioned before that the best language for the platform I&amp;rsquo;m dealing with at the moment is &lt;a href=&#34;https://www.unusually.pink/blog/groovy-programming-creating-an-iso-date-at-a-specific-date-and-time-in-utc&#34;&gt;Groovy&lt;/a&gt;, but after some searches I found essentially no information on parsing together a JWT in Groovy. My other option for languages is PowerShell, so after some searches I found a &lt;a href=&#34;https://www.reddit.com/r/PowerShell/comments/8bc3rb/generate_jwt_json_web_token_in_powershell/&#34;&gt;hero on Reddit who posted the exact code to create a JWT&lt;/a&gt;. I modified the code a little bit to account for the properties the service I was leveraging required in the payload; I managed to create a JWT, exchange it for an access token, and make successful requests from the API. Awesome!&lt;/p&gt;
&lt;p&gt;Yesterday, though, I found myself sitting at home during another quarantine weekend, and I decided to see if I could recreate that code in Groovy since the PowerShell code was extremely readable; I just had to figure out how to do the same thing in Grooovy.&lt;/p&gt;
&lt;h1 id=&#34;high-level&#34;&gt;High Level&lt;/h1&gt;
&lt;p&gt;At a high level, the process of creating a JWT looks like this.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Find the current time and the expiration time for the token, both in &lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_time&#34;&gt;Unix time&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a UUID to prevent replay attacks.&lt;/li&gt;
&lt;li&gt;Create maps for the header and payload.&lt;/li&gt;
&lt;li&gt;Convert those maps to JSON and then encode them as UTF-8 base64 strings.&lt;/li&gt;
&lt;li&gt;Combine the encoded header and payload. Then create a SHA256 signature for it based on the secret key of the application where I generated the application ID.&lt;/li&gt;
&lt;li&gt;Combine the header, payload, and signature together. Pass that to the service with HTTP POST, and receive back the authentication token.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;the-code&#34;&gt;The Code&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ll paste individual snippets here, but the full code is in a &lt;a href=&#34;https://github.com/JFFail/GroovyJWT&#34;&gt;Github repository&lt;/a&gt;. For reference with this post, my function definition looks like this; you can see that I&amp;rsquo;m passing a lot of information in for everything the payload will need:&lt;/p&gt;
&lt;p&gt;def createJWT(JsonSlurper slurper, Integer validSeconds, String appID, String tenantID, String appSecret, String iss)&lt;/p&gt;
&lt;h3 id=&#34;unix-time&#34;&gt;Unix Time&lt;/h3&gt;
&lt;p&gt;Getting Unix time was pretty straightforward given the &lt;code&gt;currentTimeMillis&lt;/code&gt; function in Java&amp;rsquo;s System library.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;TimeZone&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setDefault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TimeZone&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getTimeZone&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;UTC&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
def rightNowMilli &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
def rightNowSec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;rightNowMilli &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; 1000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
def expirationSec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rightNowSec &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; validSeconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The only hangup was that I need the time in seconds, not milliseconds, thus why I divided the value by 1000. After that, I just had to add on the number of seconds for the lifetime of the token to get the expiration time; in my case it was 1800 seconds (30 minutes.)&lt;/p&gt;
&lt;h3 id=&#34;uuid&#34;&gt;UUID&lt;/h3&gt;
&lt;p&gt;Next up I needed to generate a UUID as a unique identifier so that no one can try to re-issue this exact same request. There&amp;rsquo;s a UUID object type already, so I could generate a new, random UUID with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def jtiValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; UUID&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;randomUUID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;maps&#34;&gt;Maps&lt;/h3&gt;
&lt;p&gt;For ease of later conversion to JSON, I next created maps for both the header and the payload.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Map header &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;alg&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HS256&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; typ&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JWT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
Map payload &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;exp&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; expirationSec&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; iat&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; rightNowSec&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; iss&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; iss&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sub&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; appID&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; tid&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; tenantID&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; jti&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; jtiValue&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I hard-coded the values in the header map, though it&amp;rsquo;s worth mentioning SHA256 could be different. Likewise, the payload will depend heavily on the service from which a token is being requested; this is where you&amp;rsquo;re most likely to need to make modifications specific to your use case.&lt;/p&gt;
&lt;h3 id=&#34;json-conversion&#34;&gt;JSON Conversion&lt;/h3&gt;
&lt;p&gt;Next the maps are converted to JSON strings. Groovy&amp;rsquo;s &lt;code&gt;JsonOutput&lt;/code&gt; library makes this easy with a single method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def headerJson &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JsonOutput&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toJson&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;header&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
def payloadJson &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JsonOutput&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toJson&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;payload&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that I needed to import the library before calling it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; groovy.json.JsonOutput
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;base64-conversion&#34;&gt;Base64 Conversion&lt;/h3&gt;
&lt;p&gt;The JSON values for the header and payload both need to be converted to base64 strings. I initially started doing this in a &lt;strong&gt;far&lt;/strong&gt; more difficult manner by creating a function that would convert the bytes and return a byte array before stumbling across the fact that Strings have a &lt;code&gt;getBytes&lt;/code&gt; method. Note that Strings also have a &lt;code&gt;bytes&lt;/code&gt; property I could call directly; in my testing this seemed to give me the same result, but I liked using &lt;code&gt;getBytes&lt;/code&gt; instead because I could specify that they were UTF-8.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def headerBase64 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; headerJson&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBytes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;encodeBase64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;].&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;replaceAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\+&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;replaceAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
def payloadBase64 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; payloadJson&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBytes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;encodeBase64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;].&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;replaceAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\+&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;replaceAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I didn&amp;rsquo;t see any cases where the &lt;code&gt;replaceAll&lt;/code&gt; methods really did anything, but since they were in the original code I figured there must have been some use.&lt;/p&gt;
&lt;h3 id=&#34;signature&#34;&gt;Signature&lt;/h3&gt;
&lt;p&gt;This part basically involved a &lt;strong&gt;lot&lt;/strong&gt; of &lt;a href=&#34;https://duckduckgo.com&#34;&gt;DuckDuckGo&lt;/a&gt; searches and piecing together things I found. Most of this is just Java code, and I&amp;rsquo;m honestly a little surprised that it worked&amp;hellip; &lt;a href=&#34;https://github.com/JFFail/GroovyJWT/commit/c43d189d9bcab9ca81ca4d0df7820e4532ec3299#diff-d351cb51d1faad4d0047444e8ca114ac&#34;&gt;this commit&lt;/a&gt; shows how confident I was feeling. Note that once again I had to make some imports to leverage different crypto libraries:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; javax.crypto.spec.SecretKeySpec
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; javax.crypto.Mac
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then the code for it is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def toBeSigned &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; headerBase64 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; payloadBase64
SecretKeySpec secretKeySpec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SecretKeySpec&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;appSecret&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBytes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HmacSHA256&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Mac mac &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Mac&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInstance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HmacSHA256&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
mac&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;secretKeySpec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; digest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mac&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;doFinal&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;toBeSigned&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBytes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
def signature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; digest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;encodeBase64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;].&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;replaceAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\+&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;replaceAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is first concatenating together the header and payload, with a period separating the two base64 encoded values. Then I create a secret key specification using the secret key from my app. Next I instantiate a message authentication code using SHA256. That&amp;rsquo;s used to create a signature against the aforementioned header/payload combination, the result of which is also a base64 encoded string.&lt;/p&gt;
&lt;h3 id=&#34;combination&#34;&gt;Combination&lt;/h3&gt;
&lt;p&gt;The final step is to simply concatenate together the header, payload, and signature, all separated by periods:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;def token &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; headerBase64 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; payloadBase64 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; signature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This value is what I return to the caller. I won&amp;rsquo;t go over the details here, but in the GitHub repository I have code where I actually make a POST against the API endpoint and receive an access token back in exchange for the JWT I created, so I know everything is working. I &lt;em&gt;might&lt;/em&gt; update that code in the future to use a newer &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpClient.html&#34;&gt;HttpClient&lt;/a&gt; from Java 11+ based on some things I had done last night in Kotlin; if I end up doing that I think it would be a good item for another post in the future.&lt;/p&gt;
&lt;p&gt;Until next time, crypto on and stay pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>GoToot CLI Mastodon Client</title>
      <link>https://hugo.unusually.pink/gotoot-cli-mastodon-client/</link>
      <pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/gotoot-cli-mastodon-client/</guid>
      <description>While I&amp;rsquo;m stuck at home for the foreseeable future, I&amp;rsquo;ve been trying to make the most of my time by using it for some learning instead of simply setting new personal records for how many hours of Netflix and YouTube I can watch in a single month. One of the things I decided to work on was creating a Mastodon client. If you aren&amp;rsquo;t familiar with Mastodon, it&amp;rsquo;s a social network most likened to Twitter.</description>
      <content>&lt;p&gt;While I&amp;rsquo;m stuck at home for the foreseeable future, I&amp;rsquo;ve been trying to make the most of my time by using it for some learning instead of simply setting new personal records for how many hours of Netflix and YouTube I can watch in a single month. One of the things I decided to work on was creating a &lt;a href=&#34;https://joinmastodon.org/&#34;&gt;Mastodon&lt;/a&gt; client. If you aren&amp;rsquo;t familiar with Mastodon, it&amp;rsquo;s a social network most likened to Twitter. Instead of being centralized, though, Mastodon is federated, meaning different people can run their own &amp;ldquo;instance&amp;rdquo; of Mastodon, and through federation they can interact with other instances. This is cool for a few reasons, not the least of which is that if there&amp;rsquo;s an instance with terrible policies letting their users post all sorts of toxic garbage, an instance administrator can simply opt to not federate with that instance, meaning that users from the instances are effectively cut off from one another.&lt;/p&gt;
&lt;p&gt;As I mentioned in my &lt;a href=&#34;https://www.unusually.pink/blog/self-hosting-a-static-website&#34;&gt;last post&lt;/a&gt;, I&amp;rsquo;m not much for making frontend interfaces so it only made sense that I&amp;rsquo;d make a CLI-based client. Note that this is by no means an original idea; I was actually inspired by the &lt;a href=&#34;https://github.com/magicalraccoon/tootstream&#34;&gt;tootstream&lt;/a&gt; client that I regularly use. tootstream is written in Python, and I thought about making my own client in Python as well given that it&amp;rsquo;s a super fun language. I also thought about writing it in PowerShell since I have a lot of experience with it. Ultimately, though, I did the exact opposite and started working on it in &lt;a href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt; since it&amp;rsquo;s always &lt;em&gt;seemed&lt;/em&gt; like a really interesting language that people enjoy but that I&amp;rsquo;ve never had cause to use. I thought it would be a good learning experience to work with a compiled, statically typed language instead of the interpretted languages that I&amp;rsquo;m already (decently) experienced with. This is why I ended up stumbling across &lt;a href=&#34;https://www.unusually.pink/blog/json-to-go&#34;&gt;JSON-to-Go&lt;/a&gt;. It&amp;rsquo;s also been good experience with work with a slightly lower level language than whta I typically use; to say the least, getting back a byte array from my first HTTP GET request wasn&amp;rsquo;t something I expected.&lt;/p&gt;
&lt;p&gt;I kicked off development of the client this weekend since, being a long weekend, I have even more free time than usual. It&amp;rsquo;s been quite the learning experience, and while I&amp;rsquo;ve felt frustrated at times it&amp;rsquo;s also been very rewarding. Luckily there&amp;rsquo;s a good bit of documentation and resources out there for Go so that I could look up what I needed without &lt;em&gt;too&lt;/em&gt; much pain. The &lt;em&gt;one&lt;/em&gt; thing I struggled with finding was how to create an HTTP client in Go that I could POST with that had both headers and form data; that might be a good post for another day.&lt;/p&gt;
&lt;p&gt;For my own sanity, I spun up a &lt;a href=&#34;https://github.com/JFFail/GoToot&#34;&gt;GitHub repository for my project&lt;/a&gt;. It&amp;rsquo;s still &lt;em&gt;extremely&lt;/em&gt; early, and I wouldn&amp;rsquo;t recommend anyone else try using it yet. Right before firing up this post, I managed to get my &lt;a href=&#34;https://mastodon.sdf.org/@failtime/104457064244657710&#34;&gt;first toot posted with it&lt;/a&gt; followed shortly by &lt;a href=&#34;https://mastodon.sdf.org/@failtime/104457150393716358&#34;&gt;one with corrected formatting&lt;/a&gt;. I think next will be displaying the Home and Local timelines, followed by being able to favorite, boost, and reply to those statuses. Suffice to say, there&amp;rsquo;s a lot of work left to do.&lt;/p&gt;
&lt;p&gt;I also think this has been a good experience so far with maybe tempering my expectations a little when learning new programming langauges (or learning &lt;em&gt;anything&lt;/em&gt; really.) I often endeavor to learn a new language only to not make the progress I &lt;strong&gt;think&lt;/strong&gt; that I should be making, get frustrated, and then give up since I&amp;rsquo;m doing it for myself rather than because I&amp;rsquo;m required to for my job or anything like that. In this case it&amp;rsquo;s been nice to just sit down for a little bit, work on a tiny piece of code, make some incremental progress, and take things at a leisurely paace. If I get stuck, I simply do something else for a little while. As I remembered being the case back in college when I was taking Computer Science classes, the best way to overcome a hurdle in programming often is to &lt;strong&gt;stop&lt;/strong&gt; looking at the problem; I&amp;rsquo;ve had ideas for solutions pop into my head at all sorts of random times.&lt;/p&gt;
&lt;p&gt;Maybe by the time the quarantine is over I&amp;rsquo;ll have a fully function client!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>JSON-to-Go</title>
      <link>https://hugo.unusually.pink/json-to-go/</link>
      <pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/json-to-go/</guid>
      <description>Lately I&amp;rsquo;ve been working through the very arduous (for me) process of learning Go for some personal projects. I selected Go because I typically use interpretted, dynamically typed languages for work, so I thought it would be a good learning experience to work with a compiled, statically typed language. To me at least, Go seemed a bit more approachable than something like C or Rust. I started trying to learn Kotlin since I&amp;rsquo;ve been working with another JVM-based language in Groovy, but it&amp;rsquo;s extremely difficult to use Kotlin from just the command line without an IDE; when I couldn&amp;rsquo;t figure out how to add an external package to a project without an IDE I basically gave up on it since it didn&amp;rsquo;t fit at all into my workflow.</description>
      <content>&lt;p&gt;Lately I&amp;rsquo;ve been working through the &lt;em&gt;very&lt;/em&gt; arduous (for me) process of learning &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; for some personal projects. I selected Go because I typically use interpretted, dynamically typed languages for work, so I thought it would be a good learning experience to work with a compiled, statically typed language. To me at least, Go seemed a bit more approachable than something like C or Rust. I started trying to learn &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin&lt;/a&gt; since I&amp;rsquo;ve been working with another JVM-based language in &lt;a href=&#34;https://failti.me/posts/groovy_prog/&#34;&gt;Groovy&lt;/a&gt;, but it&amp;rsquo;s extremely difficult to use Kotlin from just the command line without an IDE; when I couldn&amp;rsquo;t figure out how to add an external package to a project without an IDE I basically gave up on it since it didn&amp;rsquo;t fit at all into my workflow. Go, on the other hand, has a handy package manager built into the same binary you use to compile your own code.&lt;/p&gt;
&lt;p&gt;After going through a book to get the basics of Go down (I won&amp;rsquo;t link the book because I actually thought it was a pretty terrible source, and I wouldn&amp;rsquo;t recommend it) I jumped in to doing a little bit of API work since that&amp;rsquo;ll be important for some of the project ideas I&amp;rsquo;m kicking around. It was fairly simple to look up how to leverage the &lt;code&gt;io/ioutil&lt;/code&gt; and &lt;code&gt;net/http&lt;/code&gt; packages to make an unauthenticated call to a REST API endpoint. This gives the data back in a byte slice. I can cast that to a string to view it and verify that I got back the expected data, but obviously I can&amp;rsquo;t actually &lt;em&gt;do&lt;/em&gt; anything I want with the data in a byte slice. In many other languages this is where I would use some type of JSON library to parse the response into something like a map/hashtable/dictionary. I&amp;rsquo;m used to languages where the interpreter just kind of figures that out for you based on the syntax of the JSON.&lt;/p&gt;
&lt;p&gt;Go isn&amp;rsquo;t like that, though. Instead, I need to define a &lt;code&gt;struct&lt;/code&gt; that matches the format of the API response. If I have that, I can use the &lt;code&gt;encoding/json&lt;/code&gt; package in Go to create a struct. That&amp;rsquo;s something I &lt;em&gt;could&lt;/em&gt; do manually, but that would be extremely tedious. For example, this is what I see when dumping the byte array I get back from querying my &lt;a href=&#34;https://mastodon.sdf.org/@failtime&#34;&gt;own Mastodon account&lt;/a&gt; as a string:&lt;/p&gt;
&lt;p&gt;{
[
{
&amp;ldquo;id&amp;rdquo;:&amp;ldquo;49&amp;rdquo;,
&amp;ldquo;username&amp;rdquo;:&amp;ldquo;failtime&amp;rdquo;,
&amp;ldquo;acct&amp;rdquo;:&amp;ldquo;failtime&amp;rdquo;,
&amp;ldquo;display_name&amp;rdquo;:&amp;ldquo;failtime&amp;rdquo;,
&amp;ldquo;locked&amp;rdquo;:false,
&amp;ldquo;bot&amp;rdquo;:false,
&amp;ldquo;discoverable&amp;rdquo;:false,
&amp;ldquo;group&amp;rdquo;:false,
&amp;ldquo;created_at&amp;rdquo;:&amp;ldquo;2017-04-24T15:48:10.334Z&amp;rdquo;,
&amp;ldquo;note&amp;rdquo;:&amp;quot;\u003cp\u003eProfessional loser.\u003c/p\u003e&amp;quot;,
&amp;ldquo;url&amp;rdquo;:&amp;ldquo;&lt;a href=&#34;https://mastodon.sdf.org/@failtime%22,&#34;&gt;https://mastodon.sdf.org/@failtime&amp;quot;,&lt;/a&gt;
&amp;ldquo;avatar&amp;rdquo;:&amp;ldquo;&lt;a href=&#34;https://mastodon.sdf.org/system/accounts/avatars/000/000/049/original/3fe810f812b83712.jpg?1567388103%22,&#34;&gt;https://mastodon.sdf.org/system/accounts/avatars/000/000/049/original/3fe810f812b83712.jpg?1567388103&amp;quot;,&lt;/a&gt;
&amp;ldquo;avatar_static&amp;rdquo;:&amp;ldquo;&lt;a href=&#34;https://mastodon.sdf.org/system/accounts/avatars/000/000/049/original/3fe810f812b83712.jpg?1567388103%22,&#34;&gt;https://mastodon.sdf.org/system/accounts/avatars/000/000/049/original/3fe810f812b83712.jpg?1567388103&amp;quot;,&lt;/a&gt;
&amp;ldquo;header&amp;rdquo;:&amp;ldquo;&lt;a href=&#34;https://mastodon.sdf.org/system/accounts/headers/000/000/049/original/45632b66add48db3.jpg?1592224165%22,&#34;&gt;https://mastodon.sdf.org/system/accounts/headers/000/000/049/original/45632b66add48db3.jpg?1592224165&amp;quot;,&lt;/a&gt;
&amp;ldquo;header_static&amp;rdquo;:&amp;ldquo;&lt;a href=&#34;https://mastodon.sdf.org/system/accounts/headers/000/000/049/original/45632b66add48db3.jpg?1592224165%22,&#34;&gt;https://mastodon.sdf.org/system/accounts/headers/000/000/049/original/45632b66add48db3.jpg?1592224165&amp;quot;,&lt;/a&gt;
&amp;ldquo;followers_count&amp;rdquo;:99,
&amp;ldquo;following_count&amp;rdquo;:69,
&amp;ldquo;statuses_count&amp;rdquo;:1880,
&amp;ldquo;last_status_at&amp;rdquo;:&amp;ldquo;2020-06-27&amp;rdquo;,
&amp;ldquo;emojis&amp;rdquo;:[],
&amp;ldquo;fields&amp;rdquo;:[
{
&amp;ldquo;name&amp;rdquo;:&amp;ldquo;Blog&amp;rdquo;,
&amp;ldquo;value&amp;rdquo;:&amp;quot;\u003ca href=\&amp;ldquo;&lt;a href=&#34;https://failti.me&#34;&gt;https://failti.me&lt;/a&gt;\&amp;rdquo; rel=\&amp;ldquo;me nofollow noopener noreferrer\&amp;rdquo; target=\&amp;quot;_blank\&amp;quot;\u003e\u003cspan class=\&amp;ldquo;invisible\&amp;quot;\u003ehttps://\u003c/span\u003e\u003cspan class=\&amp;quot;\&amp;quot;\u003efailti.me\u003c/span\u003e\u003cspan class=\&amp;ldquo;invisible\&amp;quot;\u003e\u003c/span\u003e\u003c/a\u003e&amp;rdquo;,
&amp;ldquo;verified_at&amp;rdquo;:&amp;ldquo;2020-06-24T00:27:59.294+00:00&amp;rdquo;
},
{
&amp;ldquo;name&amp;rdquo;:&amp;ldquo;Laifu&amp;rdquo;,
&amp;ldquo;value&amp;rdquo;:&amp;quot;\u003ca href=\&amp;ldquo;&lt;a href=&#34;https://laifu.moe&#34;&gt;https://laifu.moe&lt;/a&gt;\&amp;rdquo; rel=\&amp;ldquo;me nofollow noopener noreferrer\&amp;rdquo; target=\&amp;quot;_blank\&amp;quot;\u003e\u003cspan class=\&amp;ldquo;invisible\&amp;quot;\u003ehttps://\u003c/span\u003e\u003cspan class=\&amp;quot;\&amp;quot;\u003elaifu.moe\u003c/span\u003e\u003cspan class=\&amp;ldquo;invisible\&amp;quot;\u003e\u003c/span\u003e\u003c/a\u003e&amp;rdquo;,
&amp;ldquo;verified_at&amp;rdquo;:&amp;ldquo;2020-06-15T00:37:19.734+00:00&amp;rdquo;
}
]
}
]
}&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;really&lt;/em&gt; don&amp;rsquo;t want to have to go through that to create a struct out of it. I started digging around to see if there was a better way and, as is usually the case when dealing with code, came across a &lt;a href=&#34;https://stackoverflow.com/questions/43624404/golang-how-to-parse-unmarshal-decode-a-json-array-api-response&#34;&gt;Stack Overflow post on the topic&lt;/a&gt;. Along with some other helpful information that I used to improve my code a little, one of the replies linked to &lt;a href=&#34;https://mholt.github.io/json-to-go/&#34;&gt;JSON-to-Go&lt;/a&gt;. The service allows me to paste in JSON output like what I included above in this post, and it will automatically generate the corresponding struct. I tried it out, and it nicely gave me the following:&lt;/p&gt;
&lt;p&gt;type AutoGenerated struct {
ID             string        `json:&amp;ldquo;id&amp;rdquo;`
Username       string        `json:&amp;ldquo;username&amp;rdquo;`
Acct           string        `json:&amp;ldquo;acct&amp;rdquo;`
DisplayName    string        `json:&amp;ldquo;display_name&amp;rdquo;`
Locked         bool          `json:&amp;ldquo;locked&amp;rdquo;`
Bot            bool          `json:&amp;ldquo;bot&amp;rdquo;`
Discoverable   bool          `json:&amp;ldquo;discoverable&amp;rdquo;`
Group          bool          `json:&amp;ldquo;group&amp;rdquo;`
CreatedAt      time.Time     `json:&amp;ldquo;created_at&amp;rdquo;`
Note           string        `json:&amp;ldquo;note&amp;rdquo;`
URL            string        `json:&amp;ldquo;url&amp;rdquo;`
Avatar         string        `json:&amp;ldquo;avatar&amp;rdquo;`
AvatarStatic   string        `json:&amp;ldquo;avatar_static&amp;rdquo;`
Header         string        `json:&amp;ldquo;header&amp;rdquo;`
HeaderStatic   string        `json:&amp;ldquo;header_static&amp;rdquo;`
FollowersCount int           `json:&amp;ldquo;followers_count&amp;rdquo;`
FollowingCount int           `json:&amp;ldquo;following_count&amp;rdquo;`
StatusesCount  int           `json:&amp;ldquo;statuses_count&amp;rdquo;`
LastStatusAt   string        `json:&amp;ldquo;last_status_at&amp;rdquo;`
Emojis         []interface{} `json:&amp;ldquo;emojis&amp;rdquo;`
Fields         []struct {
Name       string    `json:&amp;ldquo;name&amp;rdquo;`
Value      string    `json:&amp;ldquo;value&amp;rdquo;`
VerifiedAt time.Time `json:&amp;ldquo;verified_at&amp;rdquo;`
} `json:&amp;ldquo;fields&amp;rdquo;`
}&lt;/p&gt;
&lt;p&gt;I pasted it into my code, changed the name from &lt;code&gt;AutoGenerated&lt;/code&gt; to something a little more fitting, and sure enough I was now able to &lt;code&gt;Unmarshal&lt;/code&gt; my API response into a usable struct&amp;hellip; without having to go through the pain of creating the struct myself. Huge kudos to the creator for such an awesome and useful service.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Self-Hosting A Static Website</title>
      <link>https://hugo.unusually.pink/self-hosting-a-static-website/</link>
      <pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/self-hosting-a-static-website/</guid>
      <description>Earlier this week a friend reached out to me regarding a website. He had just finished developing his very first iOS game and was ready to submit it to Apple for approval. One of Apple&amp;rsquo;s myriad requirements, though, is a website containing the author&amp;rsquo;s privacy policy. My friend had no website and no idea how to make one, so he asked me if I could help. It seems wild to me that someone could have the chops to make an iOS app in Objective-C or Swift but not be able to make a website, but each of us has a different skill set.</description>
      <content>&lt;p&gt;Earlier this week a friend reached out to me regarding a website. He had just finished developing his very first iOS game and was ready to submit it to Apple for approval. One of Apple&amp;rsquo;s myriad requirements, though, is a website containing the author&amp;rsquo;s privacy policy. My friend had no website and no idea how to make one, so he asked me if I could help. It seems wild to me that someone could have the chops to make an iOS app in Objective-C or Swift but not be able to make a website, but each of us has a different skill set.&lt;/p&gt;
&lt;p&gt;We first took some early steps gathering requirements. What did he want for the site? Literally just the privacy policy. Where did he want to host it? Wherever was the cheapest. Did he have a domain name already? Yes! This was fairly straightforward; he literally &lt;em&gt;just&lt;/em&gt; wanted the very basics. After a bit of discussion I convinced him to write up a quick &amp;ldquo;about me&amp;rdquo; type of page so that we could have more than just the privacy policy. From there I could get to work.&lt;/p&gt;
&lt;h1 id=&#34;hosting&#34;&gt;Hosting&lt;/h1&gt;
&lt;p&gt;The first thing I did was have him head over to &lt;a href=&#34;https://www.vultr.com/&#34;&gt;Vultr&lt;/a&gt; and spin up their cheapest instance. I think this is running him $5 USD per month. I had him pick &lt;a href=&#34;https://ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; as the server operating system given that it&amp;rsquo;s the one I&amp;rsquo;m most familiar with. My friend has some familiarity with Linux but not a lot of practical knowledge; when I asked him to shoot me some SSH credentials with &lt;code&gt;sudo&lt;/code&gt; access he literally sent me the root account from Vultr. Ick.&lt;/p&gt;
&lt;h1 id=&#34;configuring-the-host&#34;&gt;Configuring The Host&lt;/h1&gt;
&lt;h3 id=&#34;accounts&#34;&gt;Accounts&lt;/h3&gt;
&lt;p&gt;My first goal was to configure the host. I started that off by creating user accounts for each of us:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;adduser username
usermod -aG sudo username
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After switching users and verifying my new account worked, I disabled root&amp;rsquo;s ability to log in:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo passwd -l root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ports&#34;&gt;Ports&lt;/h3&gt;
&lt;p&gt;Next I wanted to change the default SSH port since having 22 open means a million places from across the planet are going to throw garbage traffic at your server. I did this by modifying the SSH config at &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;, finding the line with &lt;code&gt;#Port 22&lt;/code&gt;, uncommenting it, and changing the port to a high number of my friend&amp;rsquo;s choice. Then I restarted SSH:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo systemctl restart ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;firewall&#34;&gt;Firewall&lt;/h3&gt;
&lt;p&gt;I wanted to enable the firewall as well, so I opened up with the new SSH port &lt;em&gt;and&lt;/em&gt; 80 and 443 for our eventual website:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo ufw allow sshPortNumber/tcp
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;webserver&#34;&gt;Webserver&lt;/h3&gt;
&lt;p&gt;I next needed a web server; &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt; has been my go-to choice for a long time. Rather than re-hashing all of the steps, I&amp;rsquo;ll just recommend following the excellent documentation from &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-20-04&#34;&gt;DigitalOcean&lt;/a&gt; which nicely covers the Nginx configuration. That takes you to the point where you are hosting a website. Then you just need content on it.&lt;/p&gt;
&lt;h3 id=&#34;certificate&#34;&gt;Certificate&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;m an advocate of using HTTPS for everything, and with free certificates from &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt; there&amp;rsquo;s no reason not to. Given that we have shell access, using &lt;code&gt;certbot&lt;/code&gt; is the way to go. There&amp;rsquo;s also excellent &lt;a href=&#34;https://certbot.eff.org/lets-encrypt/ubuntufocal-nginx&#34;&gt;documentation on that process on Ubuntu with Nginx&lt;/a&gt;. I highly recommend selecting the option to redirect any HTTP traffic to HTTPS.&lt;/p&gt;
&lt;h1 id=&#34;website&#34;&gt;Website&lt;/h1&gt;
&lt;p&gt;Now for the website itself. I&amp;rsquo;m not really much of a web developer, and I dislike making anything frontend; I don&amp;rsquo;t exactly have the best design sense. So I once again opted to leverage &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; to take care of that for me. I&amp;rsquo;ve written about &lt;a href=&#34;https://failti.me/posts/hugo_setup_guide/&#34;&gt;the specifics of using Hugo in detail&lt;/a&gt;. Since we really just wanted a generic landing page with my friend&amp;rsquo;s socials and then links to the About and Privacy Policy pages, I ended up going with the &lt;a href=&#34;https://themes.gohugo.io/hermit/&#34;&gt;Hermit theme&lt;/a&gt;. It has a nice, simple look. My friend&amp;rsquo;s favorite color is mint green, so the default background also works nicely with that when I changed the accent color. The theme nicely includes an &lt;a href=&#34;https://github.com/Track3/hermit/tree/master/exampleSite&#34;&gt;exampleSite&lt;/a&gt; so that I can steal their &lt;code&gt;config.toml&lt;/code&gt; file and also their &amp;ldquo;About&amp;rdquo; page to make things even easier for myself.&lt;/p&gt;
&lt;h1 id=&#34;backups&#34;&gt;Backups&lt;/h1&gt;
&lt;p&gt;One of the nice things about Hugo is that, since everything is a simple text file, it&amp;rsquo;s very easy to compress your entire site and save a backup. Then if something terrible happens to your server, it&amp;rsquo;s extremely easy to get the site back up and running on a different machine. In this case, I made tarballs for both the finished, compiled site and the Hugo directory storing the configuration and Markdown.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;tar -zvcf ~/temp/html_output.tar.gz /var/www/mySite.com/
tar -zvcf ~/temp/hugo_directory.tar.gz /var/www/mySite.com/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the tarballs created, I used an SFTP client to copy them off the server for safe keeping.&lt;/p&gt;
&lt;h1 id=&#34;wrap-up&#34;&gt;Wrap Up&lt;/h1&gt;
&lt;p&gt;In total it took me about an hour and a half to get everything up and running. Having gone through this process &lt;em&gt;many&lt;/em&gt; times for websites of my own, I&amp;rsquo;ve got a decent bit of experience with the process, but this shows it still doesn&amp;rsquo;t necessarily take a super long time to get a decent website up and running. The big benefits are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The site is &lt;em&gt;cheap&lt;/em&gt; to run. Even the smallest instance at any VPS provider will be able to handle multiple sites with ease unless they start getting really popular, so if my friend wants to create any other sites in the future he won&amp;rsquo;t need additional hosting.&lt;/li&gt;
&lt;li&gt;Backups are stupid simple. My friend isn&amp;rsquo;t beholden to a hosting provider or trying to work within the confines of something more expensive like Wordpress or Squarespace.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The downsides are present, though, so you have to be cool with them:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Setup takes more technical chops than clicking through a Squarespace template editor. While the documentation for everything in this post is extremely good, if working out a terminal freaks you out then this likely isn&amp;rsquo;t for you.&lt;/li&gt;
&lt;li&gt;Content is authored in Markdown. This likely doesn&amp;rsquo;t matter for my friend at the moment since he&amp;rsquo;s not really posting anything new to the site, but it would be something to keep in mind if he decided to start a blog. In that scenario, I usually just SSH to the server and author my content in &lt;a href=&#34;https://www.vim.org/&#34;&gt;Vim&lt;/a&gt;. You could also author the Markdown elsewhere and copy it to the server, or use SFTP to open the Markdown file on the server from an editor on your local machine. It&amp;rsquo;s definitely &lt;em&gt;not&lt;/em&gt; as simple as a WYIWYG editor in your browser, though.&lt;/li&gt;
&lt;li&gt;Maintenance is something that will need to be done at least periodically. The server will need to be patched. That&amp;rsquo;s easy enough to do with a simple &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt; and then reboot when necessary, but it&amp;rsquo;s just another step to keep in mind. Likewise, bouncing the server means that the website will be down, even if it&amp;rsquo;s typically only for a moment or two.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Being kind of pretentious, technical snob I personally find it &lt;em&gt;easier&lt;/em&gt; to author my comment in Markdown on Vim instead of using a WYSIWYG editor in a GUI, but your mileage will vary based on your own prefrences.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Thoughts On Apple&#39;s WWDC 2020</title>
      <link>https://hugo.unusually.pink/thoughts-on-apples-wwdc-2020/</link>
      <pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/thoughts-on-apples-wwdc-2020/</guid>
      <description>Yesterday was the keynote for Apple&amp;rsquo;s 2020 Worldwide Developer Conference. Like so many things right now, the entire conference, keynote included, is virtual due to the coronavirus pandemic. In this case, it&amp;rsquo;s a blessing for the sessions since it means they&amp;rsquo;re all free for anyone to stream as opposed to being a $1500+ USD ticket. Admittedly, though, the keynote left something to be desired. Just a few weeks ago at Microsoft Build, I feel like Microsoft crushed it with their keynote.</description>
      <content>&lt;p&gt;Yesterday was the keynote for Apple&amp;rsquo;s &lt;a href=&#34;https://developer.apple.com/wwdc20/&#34;&gt;2020 Worldwide Developer Conference&lt;/a&gt;. Like so many things right now, the entire conference, keynote included, is virtual due to the coronavirus pandemic. In this case, it&amp;rsquo;s a blessing for the sessions since it means they&amp;rsquo;re all free for anyone to stream as opposed to being a $1500+ USD ticket. Admittedly, though, the keynote left something to be desired. Just a few weeks ago at &lt;a href=&#34;https://mybuild.microsoft.com/&#34;&gt;Microsoft Build&lt;/a&gt;, I feel like Microsoft crushed it with their keynote. It was still streamed live, and it featured popular Microsoft employees all working remote. &lt;a href=&#34;https://www.hanselman.com/blog/&#34;&gt;Scott Hanselman&lt;/a&gt; really killed it during the &lt;a href=&#34;https://mybuild.microsoft.com/sessions/871ef73f-f04a-405b-a0fa-01d7433067d1?WT.mc_id=-blog-scottha&#34;&gt;keynote with a ton of guests&lt;/a&gt; in a way that was still believable and relatable for everyone working from home.&lt;/p&gt;
&lt;p&gt;Apple&amp;rsquo;s keynote was just a recording, and while it had all of the glitz and shine you&amp;rsquo;d expect from Apple, it really felt more like a 2 hour advertisement at times. At the end of the day, the presentation itself doesn&amp;rsquo;t matter nearly as much as the content, but in the future I&amp;rsquo;d like for Apple to make things feel a little more&amp;hellip; &lt;em&gt;human&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I thought it would be fun to rank some of the announcements (especially to help organize my thoughts since a discussion on them is a likely podcast topic for me in the near future) at least for products that I actually care about. You won&amp;rsquo;t see anything about the Apple Watch here, for example, because I don&amp;rsquo;t own one, don&amp;rsquo;t plan to buy one, and didn&amp;rsquo;t even really pay attention to those parts of the keynote. That&amp;rsquo;s not to say anything bad about the Apple Watch; I just don&amp;rsquo;t need a health tracker or notifications on my wrist when I sit at home every&amp;hellip; single&amp;hellip; day.&lt;/p&gt;
&lt;h1 id=&#34;meh&#34;&gt;Meh&lt;/h1&gt;
&lt;h2 id=&#34;ios-app-library&#34;&gt;iOS App Library&lt;/h2&gt;
&lt;p&gt;The App Library is basically a series of folders where applications are auto-sorted, giving some order to the chaos without forcing users to spend hours manually putting apps into folders themselves. I&amp;rsquo;m definitely not opposed to the idea, but it gets a sold &amp;ldquo;meh&amp;rdquo; from me simply because I don&amp;rsquo;t have enough apps for that sort of thing to be useful. At the time of this writing, my phone has 3 pages of apps, none of which are even full. I rarely install apps unless I really need them, and I regularly prune any apps I haven&amp;rsquo;t opened in a few weeks.&lt;/p&gt;
&lt;h2 id=&#34;app-clips&#34;&gt;App Clips&lt;/h2&gt;
&lt;p&gt;I like the idea of these; App Clips are small, partial versions of apps that you can access on the fly without needing to open the App Store, search for the correct app, and then download the whole thing. The example they gave is when you need a specific app to pay for parking, a situation I&amp;rsquo;ve definitely been in before. Beyond that scenario, though, I&amp;rsquo;m just skeptical over how useful this will be. When I go into stores, am I going to be willing to scan a special barcode to access their App Clip? Most likely that&amp;rsquo;s going to be a hard pass.&lt;/p&gt;
&lt;h2 id=&#34;widgets&#34;&gt;Widgets&lt;/h2&gt;
&lt;p&gt;Like App Clips, I like the &lt;em&gt;idea&lt;/em&gt; of Widgets, and having more options and sizes is cool. I&amp;rsquo;ll definitely take some time to play around with new ones in my sidebar. What I&amp;rsquo;m not as enthused about is the ability to start cluttering up the app list with widgets sprinkled everywhere. I&amp;rsquo;ve seen a few people draw parallels to the home screen of Windows Phone 8, and I don&amp;rsquo;t think that&amp;rsquo;s a particularly good thing. Obviously I can just choose to only use widgets in the sidebar where they live today, but I hope they don&amp;rsquo;t start to change the focus of the app list.&lt;/p&gt;
&lt;h1 id=&#34;good&#34;&gt;Good&lt;/h1&gt;
&lt;h2 id=&#34;picture-in-picture&#34;&gt;Picture-In-Picture&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve seen a lot of people throwing (warranted) shade that this is something which has existed for quite a while on Android, and that&amp;rsquo;s certainly true. Just because they&amp;rsquo;re late to the party, though, doesn&amp;rsquo;t mean Apple &lt;em&gt;shouldn&amp;rsquo;t&lt;/em&gt; add picture-in-picture; that&amp;rsquo;s just silly. Having recently switched from being a long-time Android user to an iPhone user, picture-in-picture is one of the few things I miss from Android. It&amp;rsquo;s super handy when you&amp;rsquo;re watching a video to be able to pop out to picture-in-picture mode and quickly check something else. I also like the look of some of the intuitive controls Apple seems to have worked out to improve the experience over that of Android with the ability to easily resize and even hide the video while it plays.&lt;/p&gt;
&lt;h2 id=&#34;maps-improvements&#34;&gt;Maps Improvements&lt;/h2&gt;
&lt;p&gt;The cycling-specific additions to Maps look slick, though they aren&amp;rsquo;t initially available in my area, and I don&amp;rsquo;t currently do a lot of cycling regardless.. Given my goal of eschewing all things Google, though, since switching to an iPhone I&amp;rsquo;ve been relying on Apple Maps in lieu of Google Maps. As such, I like seeing the commitment Apple has to improving the product. I also appreciate the fact that they themselves mentioned the privacy of Maps.&lt;/p&gt;
&lt;h2 id=&#34;macos-big-sur&#34;&gt;macOS Big Sur&lt;/h2&gt;
&lt;p&gt;One of the most immediately noticeable things about Big Sur are the UI tweaks. Most of them are small and subtle, but overall I think it really makes the operating system look significantly better. Having everything slightly tweaked with the uniformity and cohesion you&amp;rsquo;d expect from Apple just makes everything look and feel extremely polished. I&amp;rsquo;m looking forward to using it.&lt;/p&gt;
&lt;p&gt;More specifically, I&amp;rsquo;m also looking forward to getting my hands on the updated versions of the Mail and Messages applications in Big Sur. I live in those applications pretty frequently, and they feel just a little dated in Catalina.&lt;/p&gt;
&lt;h1 id=&#34;aww-yeah&#34;&gt;Aww Yeah!&lt;/h1&gt;
&lt;h2 id=&#34;siri-improvements&#34;&gt;Siri Improvements&lt;/h2&gt;
&lt;p&gt;I use Siri not infrequently on both my phone and iPad. One of those most jarring things about it is the experience you get when it takes over your entire screen to answer a simple query. The new UI for Siri looks like a massive improvement to me, with Siri appearing as a sphere toward the bottom of the screen and not covering all of the content with which you may have just been interacting. I think this will make for a much better workflow, especially for sequential questions to Siri where your next question is based off of the response to the previous question.&lt;/p&gt;
&lt;p&gt;On top of that, it&amp;rsquo;s also nice to see a focus from Apple on giving Siri to the ability to respond to a broader range of questions. While it doesn&amp;rsquo;t happen all the time, it&amp;rsquo;s not unexpected when I ask Siri something only to be essentially given a list of links from a web search rather than an actual answer. The more that type of response can be eliminated, the better.&lt;/p&gt;
&lt;h2 id=&#34;ipados-sidebar&#34;&gt;iPadOS Sidebar&lt;/h2&gt;
&lt;p&gt;This may seem silly, but I&amp;rsquo;m actually &lt;em&gt;really&lt;/em&gt; stoked for the new sidebar UI in iPadOS. I think it&amp;rsquo;ll add a lot of uniformity to iPad apps that also make better use of the screen real-estate you get on an iPad. Too many apps that are &amp;ldquo;optimized&amp;rdquo; for an iPad (meaning they aren&amp;rsquo;t scaled iPhone apps), are still essentially just bigger versions of their iPhone counterparts. The more that can be done to make the iPad a unique thing of its own with its own strengths the better.&lt;/p&gt;
&lt;h1 id=&#34;hell-yeah&#34;&gt;Hell Yeah!&lt;/h1&gt;
&lt;h2 id=&#34;macos-running-a-series-arm-processors&#34;&gt;macOS Running A-series ARM Processors&lt;/h2&gt;
&lt;p&gt;As the most-leaked announcement in human history, I think pretty much everyone was expecting this announcement. It was still exciting to see it made official, though. Given how stagnant Intel processors have been for the last few generations and the insane performance Apple is getting out of the &lt;a href=&#34;https://www.apple.com/ipad-pro/specs/&#34;&gt;A12Z Bionic in the iPad Pro&lt;/a&gt;, I think this is a smart and exciting move. A chip like the A12Z Bionic in something with active cooling? Sign me up. I &lt;em&gt;was&lt;/em&gt; surprised that the first ARM macOS devices will ship before the end of the year, but it seems like the process for porting applications is fairly streamlined. Likewise, having a binary translator like &lt;a href=&#34;https://en.wikipedia.org/wiki/Rosetta_(software)#Rosetta_2&#34;&gt;Rosetta 2&lt;/a&gt; for any applications not getting timely love is a nice safety net, though I don&amp;rsquo;t know if I&amp;rsquo;d &lt;em&gt;really&lt;/em&gt; want to be playing games run through it like they had demoed.&lt;/p&gt;
&lt;h1 id=&#34;wrap-up&#34;&gt;Wrap-Up&lt;/h1&gt;
&lt;p&gt;At the end of the day, nothing absolutely Earth-shattering was announced at WWDC 2020 &lt;em&gt;other&lt;/em&gt; than the macOS architecture switch that everyone already knew about. I still think there&amp;rsquo;s a lot of solid improvments coming on the horizon, though, and I&amp;rsquo;m eager to start upgrading my devices to the new software this fall.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Swapfile Fix on Manjaro Linux Pinebook Pro</title>
      <link>https://hugo.unusually.pink/swapfile-fix-on-manjaro-linux-pinebook-pro/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/swapfile-fix-on-manjaro-linux-pinebook-pro/</guid>
      <description>I wrote about a month ago of an update on my Pinebook Pro after switching to Manjaro Linux. I continue to make heavy use of my Pinebook Pro while I&amp;rsquo;m still social distancing and staying at home, giving me lots of time to work on personal projects without much else to do.
Today I ran into an interesting issue, though, after applying a round of updates. I mentioned in my last Pinebook Pro post about going through the process of creating a swapfile using the directions from the Manjaro wiki so that I could hibernate the machine and get much better battery life.</description>
      <content>&lt;p&gt;I wrote about a month ago of an update &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-impressions-pinebook-pro&#34;&gt;on my Pinebook Pro&lt;/a&gt; after &lt;a href=&#34;https://www.unusually.pink/blog/pinebook-pro-follow-up-manjaro-linux&#34;&gt;switching to Manjaro Linux&lt;/a&gt;. I continue to make heavy use of my Pinebook Pro while I&amp;rsquo;m still social distancing and staying at home, giving me lots of time to work on personal projects without much else to do.&lt;/p&gt;
&lt;p&gt;Today I ran into an interesting issue, though, after applying a round of updates. I mentioned in my last Pinebook Pro post about going through the process of creating a swapfile using the &lt;a href=&#34;https://wiki.manjaro.org/index.php?title=Swap#Using_a_Swapfile&#34;&gt;directions from the Manjaro wiki&lt;/a&gt; so that I could hibernate the machine and get &lt;em&gt;much&lt;/em&gt; better battery life. I literally just opened the device back up, though, and saw a familiar message that there wasn&amp;rsquo;t enough swap space to successfully hibernate the machine, leaving me with about 20% less battery life than I had been expecting. Running &lt;code&gt;htop&lt;/code&gt; quickly showed me that my swap space was back to nothing. Weird.&lt;/p&gt;
&lt;p&gt;Following the instructions, my swapfile is literally called &lt;strong&gt;swapfile&lt;/strong&gt; on the root of the filesystem. I verified it was still in place with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ll / | grep swap
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With the file still in place, I ran through the instructions again. These ones were both successful:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo mkswap /swapfile
sudo chmod u=rw,go= /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I got an error when running this, though:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo swapon /swappfile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This told me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;swapon: /swapfile: swapon failed: Invalid argument&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Weird. I verified that I still had my swapfile entry in &lt;code&gt;/etc/fstab&lt;/code&gt; to assign the swapfile on boot by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo cat /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I tried running the &lt;code&gt;swapon&lt;/code&gt; command a different way to have it apply everything in the &lt;code&gt;fstab&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo swapon -a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This gave me another &amp;ldquo;Invalid argument&amp;rdquo; error still referencing &amp;ldquo;/swapfile&amp;rdquo;. At this point, I took to the Internet. After a couple of searches, I stumbled across &lt;a href=&#34;https://unix.stackexchange.com/questions/294600/i-cant-enable-swap-space-on-centos-7&#34;&gt;a matching Stack Exchange question&lt;/a&gt;. The top answer claims that the issue is the initial &lt;code&gt;fallocate&lt;/code&gt; command used to create the file (the same command used in the Manjaro wiki) doesn&amp;rsquo;t physically allocate the 4 GB on the storage for speed, but that&amp;rsquo;s apparently problematic for &lt;code&gt;swapon&lt;/code&gt;. Following that answer, I ran a &lt;code&gt;dd&lt;/code&gt; command to replace my swapfile with something physically allocated:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dd if=/dev/zero of=/swapfile count=4096 bs=1MiB
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This takes a few moments to run, especially on the eMMC storage of the Pinebook Pro. Once it completed, though, I repeated the other commands and verified they were all successful. Sure enough, running &lt;code&gt;htop&lt;/code&gt; once again shows my 4 GB of allocated swap space.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Groovy Programming: Creating an ISO Date at a Specific Date and Time in UTC</title>
      <link>https://hugo.unusually.pink/groovy-programming-creating-an-iso-date-at-a-specific-date-and-time-in-utc/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/groovy-programming-creating-an-iso-date-at-a-specific-date-and-time-in-utc/</guid>
      <description>I&amp;rsquo;ll be the first to admit that the title of this post is a bit too verbose, but if someone else had a post online with a title like this it could&amp;rsquo;ve potentially saved me a lot of time. Here&amp;rsquo;s to hoping it helps someone else in their search.
As is mentioned on my personal website, I do a lot of PowerShell and Python scripting for work. Recently, though, I started working in Groovy due to the fact that it&amp;rsquo;s treated as a first-class language in a system I&amp;rsquo;ve been integrating SaaS applications into.</description>
      <content>&lt;p&gt;I&amp;rsquo;ll be the first to admit that the title of this post is a &lt;strong&gt;bit&lt;/strong&gt; too verbose, but if someone else had a post online with a title like this it could&amp;rsquo;ve potentially saved me a lot of time. Here&amp;rsquo;s to hoping it helps someone else in their search.&lt;/p&gt;
&lt;p&gt;As is mentioned on my &lt;a href=&#34;https://jfabhd.com/&#34;&gt;personal website&lt;/a&gt;, I do a lot of PowerShell and Python scripting for work. Recently, though, I started working in Groovy due to the fact that it&amp;rsquo;s treated as a first-class language in a system I&amp;rsquo;ve been integrating SaaS applications into. Without going into a big tl;dr, working in Groovy affords me a lot of convenience, security, and speed benefits. I just had to, you know, learn Groovy. Since there was a sale at Udemy at the time, I ended up snagging &lt;a href=&#34;https://www.udemy.com/course/apache-groovy/&#34;&gt;The Complete Apache Groovy Developer Course&lt;/a&gt;. It wasn&amp;rsquo;t a bad course in getting me up to speed; I went from never using Groovy (though I did use Java, upon which Groovy is based, &lt;em&gt;many&lt;/em&gt; years ago in college) to being able to get things done for work with it in about 4 nights of binge-watching the course. Be warned, though, that some of the material is a little dated. For example, the way to build JSON objects covered in the course seems to have been superseded by a far easier method, and when covering REST API requests the instructor opted to use some janky 3rd party library that at the time of this writing hadn&amp;rsquo;t been updated in 6 years or something crazy. I was able to do some searches online and leverage Java tutorials to just figure out how to natively handle REST API calls; your mileage my vary with that depending on your comfort level with REST APIs.&lt;/p&gt;
&lt;p&gt;One thing not covered in the course that I needed, though, was how to create a date object in a specific format (ISO) at a specific time (the first day of the current month) in a specific timezone (UTC.) This is a common need for me when filtering time-based events if true time UUIDs aren&amp;rsquo;t available. The key in my experience is to figure out how to get the timezone correct at the creation of the object when you need a specific hour; adjusting the timezone after the fact will result in a new offset that&amp;rsquo;ll make your hour value incorrect.&lt;/p&gt;
&lt;p&gt;Being super out of the loop with Java and very new to Groovy, this was a little tricky for me, and it seemed like no one else I was able to find online had my specific need. So after a couple of hours of throwing spaghetti at a virtual wall (i.e. copying and pasting lots of stuff from &lt;a href=&#34;https://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt;) I eventually got to this; it&amp;rsquo;s probably &lt;a href=&#34;https://gist.github.com/JFFail/dabd6ab1334fb00bfe5e089d8072ac3c&#34;&gt;easier to read at the Gist link&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;TimeZone&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setDefault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TimeZone&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getTimeZone&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;UTC&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
Integer year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInstance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;YEAR&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Integer month &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInstance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;MONTH&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
def then &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; GregorianCalendar&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;year&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; month&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;// Desired format: 2020-06-01T00:00:00.000000+00:00
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;thenISO &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; then&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm:ss.SSSZ&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; TimeZone&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getTimeZone&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; 
thenISOFixed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; thenISO&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;thenISO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:00&amp;#34;&lt;/span&gt;
println thenISOFixed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I essentially needed to take the current month and year in order to create a date object at midnight (00:00:00) on the first of the month. I need that to be in UTC, and the resulting string representation needs to be in ISO format. All of this gets me what I need so that I can plug it into an API URL for time-based filtering.&lt;/p&gt;
&lt;p&gt;Everything works pretty much like you&amp;rsquo;d expect, though the format specified on line 6 gives me the offset for UTC as &lt;code&gt;0000&lt;/code&gt;. The endpoint I was passing the data to wanted it to be &lt;code&gt;00:00&lt;/code&gt;. Since I knew I&amp;rsquo;d always have no offsett, I just took a range of the string that cut off the last two zeroes so that I could replace them with &amp;ldquo;:00.&amp;rdquo; I probably could&amp;rsquo;ve done this slightly fancier with some type of &amp;ldquo;00$&amp;rdquo; regex replacement, but this works fine.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m far from the Groovy master, so as much as I hope this is helpful to someone who finds themselves in the same situation I was in, I&amp;rsquo;d equally welcome someone showing me the better way to do it if one exists. Regardless, hopefully someone else out there will bang their head against the keyboard for a shorter amount of time thanks to this. And if you happen to know a better way, feel free to give me a shout!&lt;/p&gt;
&lt;p&gt;Keep coding, and stay &lt;code&gt;#FF66CC&lt;/code&gt;!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Pinebook Pro Follow-up: Manjaro Linux</title>
      <link>https://hugo.unusually.pink/pinebook-pro-follow-up-manjaro-linux/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/pinebook-pro-follow-up-manjaro-linux/</guid>
      <description>I had written in early February about my Pinebook Pro laptop after roughly a month of using it. Now that significantly more time has passed, time which I&amp;rsquo;ve almost exclusively spent at home due to nationwide stay-at-home orders and social distancing, I figure I&amp;rsquo;d share some of my thoughts on the laptop I raved about initially, and more specifically what I&amp;rsquo;ve done with the operating system.
The OS If you read my original post then you may recall that I was debating swapping the default Debian operating system for something different.</description>
      <content>&lt;p&gt;I had &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-impressions-pinebook-pro&#34;&gt;written in early February about my Pinebook Pro laptop&lt;/a&gt; after roughly a month of using it. Now that significantly more time has passed, time which I&amp;rsquo;ve almost exclusively spent at home due to nationwide stay-at-home orders and social distancing, I figure I&amp;rsquo;d share some of my thoughts on the laptop I raved about initially, and more specifically what I&amp;rsquo;ve done with the operating system.&lt;/p&gt;
&lt;h2 id=&#34;the-os&#34;&gt;The OS&lt;/h2&gt;
&lt;p&gt;If you read my original post then you may recall that I was debating swapping the default Debian operating system for something different. While I mentioned NetBSD in the post I ended up installing &lt;a href=&#34;https://manjaro.org/&#34;&gt;Manjaro Linux&lt;/a&gt; instead. Why? There are a few reasons to consider.&lt;/p&gt;
&lt;p&gt;One of the biggest reasons why swapping the OS can be considered important is that there are some issues with the Debian build that came on my device. It&amp;rsquo;s a &lt;a href=&#34;https://github.com/mrfixit2001/debian_desktop&#34;&gt;custom setup put together by a community member&lt;/a&gt;. It looks incredible, but that comes at a cost; the highly customized environment means that many things in it &lt;em&gt;cannot&lt;/em&gt; be updated; this includes both Chromium and Firefox. Running outdated browsers isn&amp;rsquo;t exactly cool, and I wasn&amp;rsquo;t too keen on having to compile Firefox from source every time there was a new release.&lt;/p&gt;
&lt;p&gt;On the other hand many of the community members seemed to really love Manjaro Linux, so I figured I&amp;rsquo;d gvie it a shot. Along with people in the Pinebook community raving about it, it&amp;rsquo;s also been hovering near the top of &lt;a href=&#34;https://distrowatch.com/&#34;&gt;Distrowatch&lt;/a&gt; for a while now. In fact it was &lt;a href=&#34;https://www.pine64.org/2020/03/15/march-update-manjaro-on-pinebook-pro-pinephone-software/&#34;&gt;announced in March&lt;/a&gt; that Manjaro was going to be the default OS for new Pinebook Pro devices, which is pretty slick! They&amp;rsquo;re shipping with the KDE variant, though, and while I&amp;rsquo;ve read about people having a good experience with that, I personaly prefer the more lightweight &lt;a href=&#34;https://www.xfce.org/&#34;&gt;XFCE desktop&lt;/a&gt;. It&amp;rsquo;s lighter, simpler, and overall I feel like it&amp;rsquo;s a better fit for the Pinebook Pro.&lt;/p&gt;
&lt;h2 id=&#34;getting-the-os&#34;&gt;Getting The OS&lt;/h2&gt;
&lt;p&gt;As something of a noob when it comes to working with open source SoC setups like a Rock64 or Raspberry Pi, I struggled a little with figuring out exactly how to install a new OS on the Pinebook Pro. The first thing I figured out is that, currently, you cannot boot the Pinebook Pro from USB. I made a few bootable flash drives like I would&amp;rsquo;ve historically used when installing Linux on a more traditional device without success. The &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro&#34;&gt;Pinebook Pro wiki&lt;/a&gt; seems to contradict itself on this point, saying:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Pinebook Pro is capable of booting from eMMC, USB 2.0, USB 3.0, or an SD card. It cannot boot from USB-C. The boot order of the hard-coded ROM of its RK3399 SoC is: SPI NOR, eMMC, SD, USB OTG.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then in the very next paragraph it says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;At this time, the Pinebook Pro ships with a Debian + MATE build with uboot on the eMMC. Its boot order is: SD, then eMMC. Booting off USB storage is not currently available, but will be in the future.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I wouldn&amp;rsquo;t put it past myself to just be misunderstanding something, though, so your mileage may vary. As you might be able to guess from the quotes shared above, I just ordred a cheap microSD card online and used that for the OS installation; everything worked great.&lt;/p&gt;
&lt;p&gt;For Manjaro specifically, the best way to get the proper image is to go to the forum announcement for the latest version, like &lt;a href=&#34;https://forum.manjaro.org/t/manjaro-arm-20-04-released/133374&#34;&gt;this one for the 20.04 release&lt;/a&gt;. There you can select the appropriate link for your Pinebook Pro and for your preferred desktop environment. Once you select that, you&amp;rsquo;ll be taken to another page &lt;a href=&#34;https://osdn.net/projects/manjaro-arm/storage/pbpro/xfce/20.04/&#34;&gt;like this one listing all of the images files you can download for that version and desktop environment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Be aware that if you want to install Manjaro &lt;strong&gt;directly on the laptop&lt;/strong&gt;, be sure to grab the image file with &amp;ldquo;emmc-installer&amp;rdquo; in the file name! This is the image designed to be flashed onto the internal eMMC storage of the Pinebook Pro! Grabbing the image without this will simply create a microSD card that will run the OS. This isn&amp;rsquo;t bad if you&amp;rsquo;d like to try out Manjaro while leaving the Debian installation on your eMMC, but I wanted to go all-in.&lt;/p&gt;
&lt;h2 id=&#34;preparing-your-media&#34;&gt;Preparing Your Media&lt;/h2&gt;
&lt;p&gt;To prepare the media, you can use basically any option that&amp;rsquo;ll allow you to flash the .img file you downloaded onto the microSD card. You can be old-school and use &lt;code&gt;dd&lt;/code&gt; from the command line, but I went easy mode and used &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt; instead.&lt;/p&gt;
&lt;h2 id=&#34;the-rest&#34;&gt;The Rest&lt;/h2&gt;
&lt;p&gt;The boot order on the Pinebook Pro automatically has the microSD card slot above the eMMC, so once you have a microSD card prepared just insert it into the Pinebook Pro, boot the device, and follow the prompts; it&amp;rsquo;s honestly pretty simple to install. The only catch is a known bug with the 20.04 release where you have to hit &lt;code&gt;Esc&lt;/code&gt; while looking at the Manjaro logo after booting from the microSD card before it&amp;rsquo;ll move forward; as a known bug I would imagine this won&amp;rsquo;t be relevant for future releases.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When the Manjaro logo has been present for about 15 seconds, press ESC (this is a bug, we know).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once it&amp;rsquo;s all done, you boot to this gorgeous view!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/PinebookProFollow-upManjaroLinux_manjaro_pbp_xfce.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;caveats&#34;&gt;Caveats&lt;/h2&gt;
&lt;p&gt;For the most part, Manjaro works like a complete dream, and I&amp;rsquo;ve been extremely happy with it. There are just a couple of caveats that might be worth mentioning, though.&lt;/p&gt;
&lt;h3 id=&#34;initial-update&#34;&gt;Initial Update&lt;/h3&gt;
&lt;p&gt;First, there was a bug when running the initial software update on the factory image. First I had to figure out &lt;em&gt;how&lt;/em&gt; to update it, but after some quick DuckDuckGo-fu (since I&amp;rsquo;ve really only used Debian-based flavors of Linux before) I figured I could update Manjaro via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo pacman -Syyu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that you can aslo just click the little shield icon in the bottom-right corner of the screen. Regardless of method, though, immediately after booting my new OS I would get the following error when attempting to update:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Conflicting files: nss /usr/lib/p11-kit-trust.so already exists in filesystem&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another benefit to choosing Manjaro is that it has an extremely active community, so it&amp;rsquo;s easy to search on errors like this and get solutions! I quickly found a &lt;a href=&#34;https://www.youtube.com/watch?v=NexyTfO0iuY&#34;&gt;YouTube video&lt;/a&gt; covering this error and providing the solution:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo pacman -Syyu --overwrite /usr/lib*/p11-kit-trust.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that initial update succeeded I&amp;rsquo;ve been able to perform subsequent updates without needing the &lt;code&gt;--overwrite&lt;/code&gt; parameter. Updating via the GUI also works.&lt;/p&gt;
&lt;h3 id=&#34;swap&#34;&gt;Swap&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s entirely possible I just made a mistake in my installation, but I eventually realized that I didn&amp;rsquo;t have a swap partition or file. I realized this because I noticed that the battery drain while under suspend was a bit severe; I was losing roughly 6% of my battery per hour. This meant that leaving the device on suspend for a day would completely drain a full battery. I changed my XFCE setting so that when closing the lid of the device it would hibernate. This gave me an error, though, that I didn&amp;rsquo;t have enough swap space to hibernate.&lt;/p&gt;
&lt;p&gt;I checked the output of &lt;code&gt;htop&lt;/code&gt; and realized that I didn&amp;rsquo;t have enough space because I didn&amp;rsquo;t have &lt;strong&gt;any&lt;/strong&gt; swap. Luckily for me, the Manjaro folks have a wiki page dedicated to exactly this; I ended up following the steps to &lt;a href=&#34;https://wiki.manjaro.org/index.php?title=Swap#Using_a_Swapfile&#34;&gt;create a swapfile rather than adjusting my partitions to have a swap partition&lt;/a&gt;. Since there are 4 GB of RAM in the Pinebook Pro, I ended up creating a 4 GB swap file. Once it&amp;rsquo;s created you can verify it by looking at &lt;code&gt;htop&lt;/code&gt; or running &lt;code&gt;swapon&lt;/code&gt;. If you&amp;rsquo;re concerned about the amount of storage on the eMMC, you can see how much you&amp;rsquo;re using via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;df -H | grep /$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;typing-and-the-touchpad&#34;&gt;Typing and the Touchpad&lt;/h3&gt;
&lt;p&gt;One thing I&amp;rsquo;ve noticed on occasion is that typing does not disable the touchpad on the laptop, meaning that it&amp;rsquo;s easy for your hand to accidentally brush it, clicking somewhere else and causing a bit of havoc on whatever it is you&amp;rsquo;re trying to do. I&amp;rsquo;ve accidentally done it once just while working on this article. I&amp;rsquo;ve not found a solution for this yet (I&amp;rsquo;ll update the post if I do), but it hasn&amp;rsquo;t been a big deal for me. It&amp;rsquo;s just something to be mindful about.&lt;/p&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End&lt;/h2&gt;
&lt;p&gt;On the whole, I&amp;rsquo;m &lt;em&gt;extremely&lt;/em&gt; pleased with my switch to Manjaro. If you&amp;rsquo;re running a Pinebook Pro with the original Debian build, I&amp;rsquo;d highly recommend giving Manjaro a shot; it honestly feels like a whole new device afterward.&lt;/p&gt;
&lt;p&gt;Keep the &lt;a href=&#34;https://www.unusually.pink/blog/its-all-about-open-source&#34;&gt;open source love alive&lt;/a&gt;, and stay pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Deciphering the Office 365 PSTN Usage Report</title>
      <link>https://hugo.unusually.pink/deciphering-the-office-365-pstn-usage-report/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/deciphering-the-office-365-pstn-usage-report/</guid>
      <description>Background Last week I received a bit of a mystifying alert from Office 365 letting me know that our pool of PSTN dial-out minutes for the month had been 80% consumed. This was mystifying due to the fact that as someone who has managed O365 for nearly a decade I didn&amp;rsquo;t realize there was a pool of minutes. PSTN (Public Switched Telephone Network) had to be related in some way or another to the capability my company has purchased from Office 365 to have a dial-in option added to our Microsoft Teams meetings.</description>
      <content>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;Last week I received a bit of a mystifying alert from Office 365 letting me know that our pool of PSTN dial-out minutes for the month had been 80% consumed. This was mystifying due to the fact that as someone who has managed O365 for nearly a decade I didn&amp;rsquo;t realize there &lt;em&gt;was&lt;/em&gt; a pool of minutes. PSTN (Public Switched Telephone Network) had to be related in some way or another to the capability my company has purchased from Office 365 to have a dial-in option added to our Microsoft Teams meetings. Any meeting we create has a dial-in number so that anyone who has a poor data connection can still dial a telephone and at least join the audio portion of the meeting.&lt;/p&gt;
&lt;p&gt;While the main function of the Audioconferencing license is to provide that dial-&lt;strong&gt;in&lt;/strong&gt; functionality, dial-&lt;strong&gt;out&lt;/strong&gt; options also exist. For example, while in a Teams meeting if you realize you need someone else to participate you have the option to have Teams dial that person if you provide a phone number. Likewise, if you&amp;rsquo;re struggling in a low-coverage area you can tap a button in the Teams mobile app to have the service call you.&lt;/p&gt;
&lt;p&gt;Sure enough (say what you want about Microsoft, but their documentation for Office 365 tends to be extremely good), I found the &lt;a href=&#34;https://docs.microsoft.com/en-us/microsoftteams/audio-conferencing-subscription-dial-out&#34;&gt;official confirmation&lt;/a&gt;. It just seems like a bit of a forgotten caveat considering you have to go to the legacy Skype portal to see it; the numbers are completely absent from the Teams portal:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can monitor the usage against your dial-out minute pool in the &amp;ldquo;legacy&amp;rdquo; Skype for Business Admin Center. In the Microsoft Teams Admin Center, navigate to Legacy portal &amp;gt; Reports &amp;gt; PSTN Minute Pools. The Zone A dial-out minute pool will be labeled in the report as &amp;ldquo;Outbound Calls to Zone A Countries.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;digging-in&#34;&gt;Digging In&lt;/h2&gt;
&lt;p&gt;When I checked the total number of minutes we had in our pool, I did some quick math to confirm that we were allotted 60 dial-out minutes per Audioconferencing license that was &lt;strong&gt;assigned&lt;/strong&gt;; purchased licenses that were not yet assigned to a user didn&amp;rsquo;t factor into the equation.&lt;/p&gt;
&lt;p&gt;I was still a bit stumped as to &lt;em&gt;who&lt;/em&gt; would be eating through our minutes, though, considering I figured dial-out to be a pretty niche feature. Luckily, the reporting section of the legacy Skype portal gives a report of how the minutes are used. There&amp;rsquo;s even an option to export it for a particular time range. I exported the data on the month-to-date in my tenant, which saved a .csv file. Opening it up showed me that there was still some work to do. The report listed dates for each call, the UPN (userPrincipalName) of the user, a source number, a destination number, and the duration of the call&amp;hellip; in seconds. It also included both the dial-out information I wanted &lt;strong&gt;and&lt;/strong&gt; the dial-in information that I don&amp;rsquo;t care about since that is unlimited. Ick.&lt;/p&gt;
&lt;p&gt;I first fired up my text editor and put together a Python script. It weeded out any of the dial-in entries. For all of the dial-out entries, it added the UPN of the user to a list of dictionaries with a count of the seconds for their call. For each entry in the report, it was checked against my list of dictionaries, one for each user. If the user already had a dictionary in the list, the duration of that call was added to the user&amp;rsquo;s existing total. If the user wasn&amp;rsquo;t in the list yet, the script would append a new dictionary to the list for that user with the duration of the current call serving as their starting point. So the key for each dictionary was the UPN and the value was the number of seconds. Each dictionary in the list only needed one key-value pair.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not sharing this initial version of the script because while the code worked perfectly, the logic was flawed. The report actually showed that &lt;a href=&#34;https://instagram.com/craftbrewgeek&#34;&gt;Craft Brew Geek&lt;/a&gt; was using &lt;em&gt;significantly&lt;/em&gt; more minutes than anyone else. While I was aware of the fact that he was frequently using his phone for Teams meetings while everyone is under quarantine due to his fixed-line provider having issues, I thought he was doing that via LTE rather than PSTN. He described his method of joining meetings to me, and he was literally tapping the &amp;ldquo;Join&amp;rdquo; button from the Teams app on his phone. To verify this was using LTE data, I even noted the LTE data consumed by the Teams app on my phone for the month, did a 10 minute Teams audio-only call with Brandi by joining the same way Craft Brew Geek was, and then checking the data usage again. Sure enough, it went up by 10 MB; this process wasn&amp;rsquo;t touching PSTN at all. I made doubly sure by assigning a policy to just my O365 account in Teams to block dial-out. I verified that tapping the &amp;ldquo;Join&amp;rdquo; button on my phone still worked fine while opting for the explicit &amp;ldquo;Dial me&amp;rdquo; option ended in an error.&lt;/p&gt;
&lt;p&gt;The report also struck me as odd because it only listed 2 days for Craft Brew Geek, despite the fact that I know he&amp;rsquo;s been joining Teams calls the same way for 2 months now while we all work from home. I went back to the data this time paying attention to the source and destination numbers listed in the report. I noticed for all of Craft Brew Geek&amp;rsquo;s entries, the number listed as the source number was the number from Microsoft that we selected as the &amp;ldquo;default&amp;rdquo; number for our tenant due to it having the closest proximity to the majority of our employees. The destination number was the same every time as well, but it &lt;em&gt;wasn&amp;rsquo;t&lt;/em&gt; Craft Brew Geek&amp;rsquo;s number. It was the number for a different employee in our company.&lt;/p&gt;
&lt;p&gt;This is when I finally realized that the UPN listed in the report is &lt;strong&gt;not&lt;/strong&gt; necessarily the UPN of the user who consumed the minutes; that wouldn&amp;rsquo;t even necessarily make sense considering you could have a meeting dial-out to an external participant (e.g. if you were using Teams to conduct an interview) or you may not have any telephone information stored for your users in Office 365. Instead, the UPN listed in the report is who &lt;strong&gt;scheduled&lt;/strong&gt; the meeting.&lt;/p&gt;
&lt;p&gt;Realizing that my logic was flawed due to the ambiguity of the report, I modified my script and replaced the UPN as the key in each dictionary with the destination telephone number. What I ended up with is &lt;a href=&#34;https://gist.github.com/JFFail/a2da00a7c379d2805825a27a07bc89b4&#34;&gt;this Python script&lt;/a&gt;. It&amp;rsquo;s quick and dirty since I wasn&amp;rsquo;t trying anything fancy; I just wanted a quick, sorted listing of our dial-out usage.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python3&#34; data-lang=&#34;python3&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; csv

usage\_tracker \&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}

report\_file \&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./pstn\_report.csv&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(report\_file, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;, newline\&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; csvfile:
    reader \&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DictReader(csvfile)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; row &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; reader:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; row\[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Call Type&amp;#34;&lt;/span&gt;\] \&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;conf\_out&amp;#34;&lt;/span&gt;:
            seconds \&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(row\[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Duration Seconds&amp;#34;&lt;/span&gt;\])
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; row\[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination Number&amp;#34;&lt;/span&gt;\] &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; usage\_tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keys():
                usage\_tracker\[row\[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination Number&amp;#34;&lt;/span&gt;\]\] &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; seconds
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                usage\_tracker\[row\[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination Number&amp;#34;&lt;/span&gt;\]\] \&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; seconds

usage\_tuple\_list \&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sorted(usage\_tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items(), key\&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x\[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;\], reverse\&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)

total\_minutes \&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; element &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; usage\_tuple\_list:
    current\_minutes \&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; round(element\[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;\] &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)
    total\_minutes &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; current\_minutes
    print(element\[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;\] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(current\_minutes))

print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;============================&amp;#34;&lt;/span&gt;)
print(total\_minutes)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this point, all I needed to do was figure out who the telephone numbers my script spit out belonged to. Our company maintains a listing of numbers for each employee, so it was simple for me to search it for each entry. This showed us that one employee who was using dial-out heavily for himself as a matter of convenience during the quarantine was using basically all of our minutes.&lt;/p&gt;
&lt;h2 id=&#34;aftermath&#34;&gt;Aftermath&lt;/h2&gt;
&lt;p&gt;The main takeaways from this incident are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Be mindful of the PSTN dial-out pool in Office 365 if you&amp;rsquo;re doing audioconferencing. I hadn&amp;rsquo;t thought of it because the O365 instance I managed previously was absolutely massive; this means we had significantly more minutes in the pool for a feature most people never use since the size of the pool is based on license assignment. Keep tabs on it in a smaller organization, especially when everyone is suddenly working remotely.&lt;/li&gt;
&lt;li&gt;The report from the legacy Skype admin center is pretty confusing, and it&amp;rsquo;s easy to mistake who is consuming dial-out minutes. Keep tabs on the destination number(s) in the report to find out who is actually doing it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That&amp;rsquo;s it! Stay pink (from a socially acceptable distance, of course.)&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>The Dumpster Fire Of Remote Podcasting</title>
      <link>https://hugo.unusually.pink/the-dumpster-fire-of-remote-podcasting/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/the-dumpster-fire-of-remote-podcasting/</guid>
      <description>As we mentioned in our last episode, we&amp;rsquo;ve switched to recording our podcast episodes remotely due to the fact that there&amp;rsquo;s currently a global pandemic happening. It&amp;rsquo;s been a big change considering that every other episode of both this podcast and the Same Shade of Difference podcast have been recorded in person.
Switching to a remote recording setup has been trying since, to be completely honest, most of the services for remote podcasting are horrible.</description>
      <content>&lt;p&gt;As we mentioned in our &lt;a href=&#34;https://www.unusually.pink/podcast/episode-20-quarantine-with-animal-crossing&#34;&gt;last episode&lt;/a&gt;, we&amp;rsquo;ve switched to recording our podcast episodes remotely due to the fact that there&amp;rsquo;s currently a global pandemic happening. It&amp;rsquo;s been a big change considering that every other episode of both &lt;a href=&#34;https://unusually.pink/podcast&#34;&gt;this podcast&lt;/a&gt; and the &lt;a href=&#34;https://sameshadeofdifference.com&#34;&gt;Same Shade of Difference&lt;/a&gt; podcast have been recorded in person.&lt;/p&gt;
&lt;p&gt;Switching to a remote recording setup has been trying since, to be completely honest, most of the services for remote podcasting are &lt;em&gt;horrible&lt;/em&gt;. They might be good services if you want to do some pretty hefty editing and audio engineering work; if you want just a means to do a recording and get a blended .wav or .mp3 file, though, things are surprisingly difficult.&lt;/p&gt;
&lt;h2 id=&#34;squadcast&#34;&gt;SquadCast&lt;/h2&gt;
&lt;p&gt;The first service we tried was actually one that I tested with &lt;a href=&#34;https://instagram.com/craftbrewgeek&#34;&gt;Craft Brew Geek&lt;/a&gt; for a recording of the &lt;a href=&#34;https://sameshadeofdifference.com&#34;&gt;Same Shade of Difference&lt;/a&gt; podcast. We gave &lt;a href=&#34;https://www.squadcast.fm&#34;&gt;SquadCast&lt;/a&gt; a try since we actually went to their booth at &lt;a href=&#34;https://www.unusually.pink/blog/podfest-multimedia-expo&#34;&gt;Podfest&lt;/a&gt;. The big claim to face for SquadCast is that it provides you with both audio &lt;strong&gt;and&lt;/strong&gt; video. At the time of this writing it won&amp;rsquo;t record the video feed, but it honestly can&amp;rsquo;t be overstated how beneficial it is to see the people you&amp;rsquo;re recording with. Being able to see body language and facial expressions does a &lt;em&gt;lot&lt;/em&gt; for helping the conversation proceed more smoothly and to prevent everyone from accidentally talking over one another.&lt;/p&gt;
&lt;p&gt;Unfortunately, the execution of SquadCast left quite a bit to be desired. The first issue we had with SquadCast is that, when everything is said and done, it provides a .wav file for &lt;em&gt;each participant&lt;/em&gt;. You have to piece the files together on your own, which is not the simple, streamlined experience we had been hoping for. It gets worse, though, because we discovered that any time someone switches their audio input (e.g. if you have a less technically inclined guest who keeps having connectivity problems with their Bluetooth microphone), it completely stops the recording for &lt;strong&gt;everyone&lt;/strong&gt;. So we ended up having 3 .wav files for each of the 4 participants of our recording session. That&amp;rsquo;s 12 .wav files of all variable lengths that we would&amp;rsquo;ve needed to painstakingly put together.&lt;/p&gt;
&lt;p&gt;If having that many files feels ridiculous, apparently whoever does the frontend development for SquadCast agrees; their Dashboard that gives access to the recordings wouldn&amp;rsquo;t even properly render all 12 files for Mark to download them. He actually had to use his browser&amp;rsquo;s function to zoom out so that the UI would properly render access to all of the files. Ick!&lt;/p&gt;
&lt;h2 id=&#34;zencastr&#34;&gt;Zencastr&lt;/h2&gt;
&lt;p&gt;After such a terrible experience with SquadCast, Brandi and I decided we weren&amp;rsquo;t even going to bother with attempting to use it for the Unusually Pink Podcast. Instead, we decided to give &lt;a href=&#34;https://zencastr.com&#34;&gt;Zencastr&lt;/a&gt; a shot. Zencastr is a fairly popular option, and it&amp;rsquo;s also currently making its service completely free while everyone is stuck at home due to COVID-19. Big kudos to them for that!&lt;/p&gt;
&lt;p&gt;Unlike SquadCast, Zencastr is focused on the audio only; you don&amp;rsquo;t get a video feed. However, what you &lt;strong&gt;do&lt;/strong&gt; get is the same, janky mess of individual .wav files for each participant. To not repeat the mistakes Mark and I made, Brandi and I just attempted a couple of quick, test-drive recordings with Zencastr so we didn&amp;rsquo;t record an entire episode that we ended up scrapping a la SquadCast. I&amp;rsquo;m 100% willing to own responsibility for doing something incorrectly, but Brandi and I also ended up with multiple files from Zencastr. Not only were there individual .wav files for each of us, but Brandi&amp;rsquo;s recording randomly had two .wav files, and the duration of her two files combined was still less than the duration of my single .wav file.&lt;/p&gt;
&lt;p&gt;Once again, we may have been able to splice them together, but that&amp;rsquo;s not the workflow we want; we&amp;rsquo;ve been spoiled by having the RODECaster Pro spit out a single, combined .wav file that we can do any edits on.&lt;/p&gt;
&lt;h2 id=&#34;anchor&#34;&gt;Anchor&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve seen lots of chatter about &lt;a href=&#34;https://anchor.fm&#34;&gt;Anchor&lt;/a&gt; being the most drop-dead simple option for podcast recording, so I figured I&amp;rsquo;d spend a little time digging into its options. Unfortunately, it seems to fall into the same &lt;a href=&#34;https://www.unusually.pink/blog/google-wifi-and-the-curse-of-simplication&#34;&gt;mobile-first trap as Google WiFi&lt;/a&gt; where all other functionality is severely limited. For example, operating out of the web app for Anchor only gives you the option to record a solo episode; you can&amp;rsquo;t seem to loop in any other audio feeds.&lt;/p&gt;
&lt;p&gt;The Anchor mobile app, however, does allow you to record with multiple people at the same time. We &lt;em&gt;strongly&lt;/em&gt; wanted to avoid operating from mobile, though, because both Brandi and I have at least decent-ish USB microphones we wanted to use without trying to go through dongle-hell to connect them to a phone or tablet.&lt;/p&gt;
&lt;p&gt;Anchor&amp;rsquo;s other oddity is that it seems to operate under the assumption that it will be your podcast hosting platform. We would essentially need to take the recording for our episode and have it published to Anchor; only instead of the Anchor RSS feed being dispersed to all of the big podcast platforms, we&amp;rsquo;d then need to download a local copy of the recording from Anchor in order to edit and re-upload to our actual host.&lt;/p&gt;
&lt;h2 id=&#34;ringr&#34;&gt;Ringr&lt;/h2&gt;
&lt;p&gt;The last service Brandi and I attempted was &lt;a href=&#34;https://www.ringr.com&#34;&gt;Ringr&lt;/a&gt;. To be honest, the service seemed more than a little sketch initially. The web app was listed as being a &amp;ldquo;beta&amp;rdquo; with the more established option being the mobile apps. Brandi and I quickly glanced at their mobile apps in our respective app stores only to discover that neither the iOS or Android apps had been updated in over a year. Regardless, we did a quick test with the Ringr desktop app and, amazingly, had decent luck (other than a minor, non-Ringr specific caveat that I&amp;rsquo;ll mention at the end.) The two of us were able to do a recording in Ringr and get a plethora of recording options after the fact. We could simply download an .mp3 file that had both of our audio feeds combined together. If we wanted a lossless option and had something to handle the format (GarageBand won&amp;rsquo;t), we could also download a FLAC file with the audio from each of us combined. Or, if we actually wanted what the other services offered, we could download raw .wav files with an individual file for each input.&lt;/p&gt;
&lt;p&gt;Suffice to say, we were happy enough to snag the .mp3 that had both audio feeds spliced together and move on. Ringr seems to operate by recording at each end, and then once the recording is stopped the web app will upload the audio from each endpoint (you have to wait for it to do this prior to closing the browser window for your recording session) and then splice it together. Additionally, it seems to do some post-processing on the audio files. For example, during our initial recording tests Brandi noted that she could actually hear white noise from my end due to my microphone picking up the sound of my refridgerator kicking on. In the finished .mp3, though, the white noise was nowhere to be found.&lt;/p&gt;
&lt;p&gt;Ringr is far from perfect, though, Like most options, it doesn&amp;rsquo;t provide any video. Brandi and I had to be careful to avoid speaking over one another&amp;hellip; and we still struggled with it. While our first episode recorded with Ringr seemed fine, in the second episode Brandi was randomly disconnected from the call. While Ringr gives you options to reconnect to a disconnected call, it never actually &lt;strong&gt;works&lt;/strong&gt;. The few times we ran into this scenario, Brandi and I would end up in separate instances of the same call, without any ability to hear one another. So we&amp;rsquo;d need to schedule a brand new call and start over again. In the instance where she got disconnected near the end of an episode, I just tried to do the outro on my own once I realized what was happening and we were able to salvage the situation. It&amp;rsquo;s extremely janky, though, and would&amp;rsquo;ve been much more problematic if it happened around the halfway point in our recording session instead of at the end.&lt;/p&gt;
&lt;p&gt;While that&amp;rsquo;s a significant problem, Ringr has still been the best option for us by far. If you&amp;rsquo;re struggling to record your podcast remotely during quarantine, our recommendation would be to check out Ringr for the easiest experience.&lt;/p&gt;
&lt;h2 id=&#34;macos-and-firefox-caveat&#34;&gt;macOS And Firefox Caveat&lt;/h2&gt;
&lt;p&gt;We did run into a caveat for any web-based services; as of the time of this writing there seems to be an issue when using a Blue Snowball USB microphone as your audio input with Firefox in macOS. When I initially tried using SquadCast with Mark, my microphone sounded like absolute trash; I sounded like a robot transmitting my audio over an extremely static-filled connection from an OG Soviet submarine. After switching from Firefox to Chrome, though, the issues went away. Brandi saw the same behavior when joining Ringr calls through Firefox. As soon as I asked her to switch to a different browser, though, everything was fine. While I personally try to avoid using Chrome whenever possible in favor of Firefox or Safari, in this instance the safest bet is to use Chrome for any recording just because it seems to be the best supported option.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Podfest Multimedia Expo</title>
      <link>https://hugo.unusually.pink/podfest-multimedia-expo/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/podfest-multimedia-expo/</guid>
      <description>Over a month ago now at the beginning of March, Craft Brew Geek and I had the opportunity to attend the Podfest Multimedia Expo, the largest indie podcast conference in the world. While it was a bit of a scary experience to travel and attend when the coronavirus was just starting to make waves in the United States (which wasn&amp;rsquo;t aided by an over 4 hour delay at the airport for our flight back home), it was still a great conference even if it was plagued by a poor venue and questionable organization.</description>
      <content>&lt;p&gt;Over a month ago now at the beginning of March, &lt;a href=&#34;https://instagram.com/craftbrewgeek&#34;&gt;Craft Brew Geek&lt;/a&gt; and I had the opportunity to attend the &lt;a href=&#34;https://podfestexpo.com&#34;&gt;Podfest Multimedia Expo&lt;/a&gt;, the largest indie podcast conference in the world. While it was a bit of a scary experience to travel and attend when the coronavirus was just starting to make waves in the United States (which wasn&amp;rsquo;t aided by an over 4 hour delay at the airport for our flight back home), it was still a great conference even if it was plagued by a poor venue and questionable organization.&lt;/p&gt;
&lt;p&gt;The sessions at Podfest covered a wide range of topics. Interested in video? Audio drama? Traditional podcasting? Marketing? The technical aspects of recording and audio engineering? There was something there for you to get some value. The organization of it all was pretty clunky, though. The first day of the conference was dedicated to a sub-conference called &amp;ldquo;Vidfest&amp;rdquo;, and that required a different pass than the &amp;ldquo;standard&amp;rdquo; pass. So while you could arrive for the first day to check in and get your badge, there was nothing for you to attend.&lt;/p&gt;
&lt;p&gt;The second day focused on break-out sessions. These were also broken out into different categories, access to which once again was dependent upon the type of pass you had purchased. This resulted in a lot of people with the general attendance pass being limited to a small number of breakout sessions that were being conducted in rooms without &lt;strong&gt;nearly&lt;/strong&gt; enough seating; many sessions I had to stand and people were spilling out of the doors into the hallways. After a break for lunch, we decided to pick a room that seemed to have the most promising sessions for the remainder of the day, get there early to snag seats in the back, and simply NEVER leave to avoid giving them up.&lt;/p&gt;
&lt;p&gt;The third day felt like what should have been the &lt;em&gt;first&lt;/em&gt; day; the entire morning was dedicated to the keynote&amp;hellip; which we may have arrived a little early for if the photo above is an indication that we had literally the entire room to ourselves for about 30 minutes. The afternoon had more breakout sessions, though at this point everything was open to all attendees. While the rooms were still more crowded than I would&amp;rsquo;ve liked, it wasn&amp;rsquo;t &lt;em&gt;quite&lt;/em&gt; as bad as the day prior. The last day followed this and just had a morning of breakout sessions.&lt;/p&gt;
&lt;p&gt;Overall it was a fun experience, even with the looming specter of COVID-19 hanging over everything. I learned a few things I was able to use to help in my own podcasts, with good timing considering how we&amp;rsquo;ve switched to remote recording for both the &lt;a href=&#34;https://unusually.pink/podcast&#34;&gt;Unusually Pink Podcast&lt;/a&gt; and the &lt;a href=&#34;https://sameshadeofdifference.com&#34;&gt;Same Shade of Difference Podcast&lt;/a&gt; while everyone is self-quarantining.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/PodfestMultimediaExpo_podfest_art.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;One of the big benefits of the event was that it was held in Orlando, which has plenty of things to do. I can only hope future events pick a venue with &lt;strong&gt;much&lt;/strong&gt; more space (a complaint the organizers made known they were already well aware of by the time of the keynote.) Craft Brew Geek and I spent our first day patrolling the area for cool street art. While some of my favorites we came across are above, be sure to follow his &lt;a href=&#34;https://instagram.com/craftbrewgeek&#34;&gt;Instagram account&lt;/a&gt; so see &lt;em&gt;everything&lt;/em&gt; we saw on this trip and more.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/PodfestMultimediaExpo_podfest_rockpit.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Being the professionals that we are, Craft Brew Geek and I selected our hotel not for proximity to the conference (we had about a 30 minutes drive to get there each day), but for proximity to breweries in the area. It&amp;rsquo;s important to have priorities. We visited many cool places, including &lt;a href=&#34;https://www.deadlizardbrewing.com&#34;&gt;Dead Lizard&lt;/a&gt;, &lt;a href=&#34;https://rockpitbrewing.com&#34;&gt;RockPit&lt;/a&gt;, &lt;a href=&#34;https://hourglassbrewing.com&#34;&gt;Hourglass&lt;/a&gt;, &lt;a href=&#34;https://crookedcan.com&#34;&gt;Crooked Can&lt;/a&gt;, and &lt;a href=&#34;https://www.ten10brewingcompany.com&#34;&gt;Ten10&lt;/a&gt;. They were all terrific places, though RockPit was my favorite of the trip. They had amazing beer, terrific service, great WiFi, and excellent food from the barbeque joint next door. We spent about 6 hours sitting there drinking, eating, and working on the day we arrived in Orlando. We were able to put up stickers both there and at Dead Lizard. Ten10 is worthy of note for not only having excellent beer and food, but for being the first brewery I&amp;rsquo;ve ever seen to block VPN access on their WiFi. I even got to satisfy my taste for liquor by enjoying &lt;a href=&#34;https://eatdt.com&#34;&gt;Delaney&amp;rsquo;s Tavern&amp;rsquo;s&lt;/a&gt; take on the Old Fashioned: a New Fashioned.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/PodfestMultimediaExpo_podfest_newfashioned.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;One of the coolest experiences of the trip happened at Dead Lizard, though, where we took over a table and set up all of our equipment to record a podcast on-location. It was a fun time, and it showed us that our travel podcast setup works pretty nicely&amp;hellip; even if the microphone stands are &lt;strong&gt;entirely&lt;/strong&gt; too heavy. The TSA apparently agreed since they had to open my bag and see what the hell I had in it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/PodfestMultimediaExpo_podfest_recording.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;On the whole, I definitely had an enjoyable trip. I learned plenty of new things at the event, got to see the sights in Orlando, had an opportunity to catch up with some family I rarely see, and (of course) drink a &lt;strong&gt;LOT&lt;/strong&gt; of great beer. I&amp;rsquo;m also glad I was able to go on a trip immediately preceding the current lockdown as a means of holding off the cabin fever we&amp;rsquo;re all currently experiencing.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Connecting Irssi To Twitch.tv IRC</title>
      <link>https://hugo.unusually.pink/connecting-irssi-to-twitch.tv-irc/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/connecting-irssi-to-twitch.tv-irc/</guid>
      <description>A couple of days ago Brandi decided to try streaming her latest obsession, Animal Crossing: New Horizons on Twitch. As the unofficial game of the coronavirus quarantine, it seemed like a good idea. When she told me, I decided to do the comfortable thing and turn on her stream from the Twitch app on my Amazon Fire TV Stick so I could watch it on my TV. This works well for most of the streams I might happen to watch because I never actually care about interacting with the chat.</description>
      <content>&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ConnectingIrssiToTwitchtvIRC_twitch_irc_photo.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;A couple of days ago Brandi decided to try streaming her latest obsession, &lt;em&gt;Animal Crossing: New Horizons&lt;/em&gt; on &lt;a href=&#34;https://twitch.tv&#34;&gt;Twitch&lt;/a&gt;. As the unofficial game of the coronavirus quarantine, it seemed like a good idea. When she told me, I decided to do the comfortable thing and turn on her stream from the Twitch app on my Amazon Fire TV Stick so I could watch it on my TV. This works well for most of the streams I might happen to watch because I never actually care about interacting with the chat. While the app on my Fire TV Stick does allow me to view the chat, trying to type anything via a remote&amp;rsquo;s D-pad and an on-screen keyboard on my TV would be painful to say the least.&lt;/p&gt;
&lt;p&gt;In this particular instance, though, I wanted to be able to chat with Brandi and a few other friends who popped into her stream. I initially had her stream open on my phone and was chatting there, but it was annoying to have to keep waking my phone up to look at the chat. Then I opened her stream in a browser on my &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-impressions-pinebook-pro&#34;&gt;Pinebook Pro&lt;/a&gt;. I simply paused the stream since I didn&amp;rsquo;t need it running twice, but this left a tiny sidebar for the chat that was less than ideal.&lt;/p&gt;
&lt;p&gt;Being a regular user of IRC, I was aware that Twitch chat is just an IRC channel under the hood; this is pretty obvious given that the bots most decent-sized Twitch streamers employ in their chats are just IRC bots. I&amp;rsquo;d know since I once wrote a really shitty IRC bot for an IRC server I ran for my team at a previous job. As such, I figured I could just connect a regular IRC client to Twitch&amp;rsquo;s IRC servers, find Brandi&amp;rsquo;s channel, and chat that way. Given that I &lt;a href=&#34;https://jfabhd.com&#34;&gt;already use IRC regularly&lt;/a&gt;, I have a server that I normally connect from via my favorite client, &lt;a href=&#34;https://irssi.org&#34;&gt;Irssi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Getting the connection right took a little doing as finding up-to-date information on Twitch&amp;rsquo;s IRC setup is a bit spotty. I ended up combining information from a bunch of different sites before I got everything to work properly.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not going to cover how to get and access Irssi; if you need help with that you can use &lt;a href=&#34;https://irssi.org/documentation/&#34;&gt;their own documentation&lt;/a&gt;. Assuming you&amp;rsquo;ve got access to Irssi and you&amp;rsquo;ve just launched the application, the first thing to do is to define a new network for Twitch; for any of the below examples just replace what appears in [brackets] with your own information:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/network add -nick \[username\] Twitch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This defines a new IRC network in Irssi and states what your nickname will be for it, which is just your Twitch.tv username. You could technically name the network anything you like, you don&amp;rsquo;t have to call it &amp;ldquo;Twitch&amp;rdquo;, but simplicity is generally the best approach. The next step is to define the server information for that network.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/server add -auto -ssl -network Twitch irc.twitch.tv 6697 \[oauth password\]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This defines the server of &lt;code&gt;irc.twitch.tv&lt;/code&gt; for the Twitch IRC network, specifies the port to use, and gives the password to authenticate your account. &lt;strong&gt;Note:&lt;/strong&gt; Your OAuth password is &lt;strong&gt;not&lt;/strong&gt; the same as your regular password to log in to Twitch! You must set that up at the &lt;a href=&#34;http://twitchapps.com/tmi/&#34;&gt;OAuth password setup page&lt;/a&gt; for Twitch. Then copy and paste the password value you&amp;rsquo;ve generated into the command above. You &lt;em&gt;must&lt;/em&gt; leave it prefaced with &amp;ldquo;oauth:&amp;rdquo; just like how Twitch provides it to you in the command; don&amp;rsquo;t strip that off the front.&lt;/p&gt;
&lt;p&gt;With all of that done, now you can simply connect to your newly defined IRC network via:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/connect Twitch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This should show you a message letting you know that you&amp;rsquo;ve successfully connected. The channel to join is simply the name of the Twitch account prefaced by a hashtag just like every other IRC channel. So to join a particular channel you would just type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/join #favoriteStreamerName
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That&amp;rsquo;s all there is to it! You can now happily chat with a stream from Irssi while watching the actual video feed on another device. I assume the steps above could be pretty easily translated into a different IRC client if you prefer something other than Irssi.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ConnectingIrssiToTwitchtvIRC_irssi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;There are, however, just a couple of caveats to keep in mind. As you might imagine, there is no support for Twitch emotes within IRC. When someone else in the chat uses an emote, for example, you will simply see the plaintext rendition of it. So if someone uses the BibleThump emote, you will see that text rather than the character from &lt;a href=&#34;https://bindingofisaac.com&#34;&gt;The Binding of Isaac&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The other main caveat is that as a guest in the channel you cannot see the other participants of the chat from IRC if you check who is in the channel. You can, however, still see whatever messages they send, and Irssi will still auto-complete their names if you want to mention them. For example, when running Irssi&amp;rsquo;s &lt;code&gt;/names&lt;/code&gt; command to see a list of channel members, I see only myself:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ConnectingIrssiToTwitchtvIRC_irssi_names.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see in the screenshot above, a friend of ours is also actively using Twitch chat, but I am the only member listed in the channel. This isn&amp;rsquo;t a big ordeal once you realize it (unless you&amp;rsquo;re really jonesing to see everyone&amp;rsquo;s name for some reason), but it did trip me up initially since I had assumed that I was not connecting to the proper channel. I eventually left both IRC and Twitch chat open in a browser until someone else typed something so that I could verify the same message appeared in both places.&lt;/p&gt;
&lt;p&gt;On the whole I found this to be a streamlined, elegant way to actually participate in Brandi&amp;rsquo;s Twitch chat from my low-end laptop while watching her actual video stream on my TV from the comfort of my couch. Plus, you just get to feel awesome for using IRC.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Buy Literally Anything From Bandcamp Today</title>
      <link>https://hugo.unusually.pink/buy-literally-anything-from-bandcamp-today/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/buy-literally-anything-from-bandcamp-today/</guid>
      <description>The coronavirus has been causing havoc for industries across the globe, including the music industry. Especially for small, indie artists, the revenue they make from doing live shows is vital for their ability to continue doing what they love. In the case of a global pandemic, though, all of those shows have been canceled, leaving artists struggling to make it by.
Having been social distancing/self quarantining for about two weeks now, I&amp;rsquo;ve been doing my best to live by the very wise, meaningful words of Craft Brew Geek when he told a group of us:</description>
      <content>&lt;p&gt;The coronavirus has been causing havoc for industries across the globe, including the music industry. Especially for small, indie artists, the revenue they make from doing live shows is vital for their ability to continue doing what they love. In the case of a global pandemic, though, all of those shows have been canceled, leaving artists struggling to make it by.&lt;/p&gt;
&lt;p&gt;Having been social distancing/self quarantining for about two weeks now, I&amp;rsquo;ve been doing my best to live by the very wise, meaningful words of &lt;a href=&#34;https://www.instagram.com/craftbrewgeek/&#34;&gt;Craft Brew Geek&lt;/a&gt; when he told a group of us:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the time when we need to take care of the people who take care of us.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He said this within the context of doing what we can for local restaurants and breweries that are trying to weather this storm. There are plenty of places where we&amp;rsquo;re regulars and have been the recipients of preferrential treatment from those establishments for months or even years: getting your drink filled before other people, getting deals on your order, etc. As these businesses try to tackle the biggest threat to their very existence that they&amp;rsquo;ve ever seen, we&amp;rsquo;ve been doing our part to get carry-out food and drinks whenever possible and while leaving the most generous tips we can because every little bit helps. I&amp;rsquo;d highly encourage anyone reading this to do the same if it&amp;rsquo;s within your means.&lt;/p&gt;
&lt;p&gt;But restaurants and breweries aren&amp;rsquo;t the only ones who take care of you. My memory tends to be pretty good, so I trust it when I recall Hayley Williams posting a message on Twitter &lt;em&gt;years&lt;/em&gt; ago that amounted to:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Be there for music because music will always be there for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I tried searching for the post, but it was so long ago that I&amp;rsquo;ll never find it. The sentiment is certainly true though. Everyone has had that song that has made an event, be it a party, a roadtrip, or just a special moment with friends, unforgettable. Everyone has felt sorrow and heartache and didn&amp;rsquo;t know how they would&amp;rsquo;ve been able to get through if it wasn&amp;rsquo;t for that &lt;strong&gt;one&lt;/strong&gt; song that knew exactly how you felt.&lt;/p&gt;
&lt;p&gt;Music has had such a profound impact on my life, and I can&amp;rsquo;t imagine where I&amp;rsquo;d be without it. It pains me to see so many small artists having to cancel their shows, knowing they&amp;rsquo;re upset at having to let down their fans and worried about how they&amp;rsquo;re going to continue making ends meet and create the art we all love so much.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s why today is such a great day to support indie music. Today &lt;a href=&#34;https://daily.bandcamp.com/features/bandcamp-covid-19-fundraiser&#34;&gt;Bandcamp is waiving their revenue share on all purchases through the site&lt;/a&gt;. This means that 100% of the revenue is going to support artists who need it now more than ever. Dozens of artists I listen to regularly, and some of whom were mentioned in our &lt;a href=&#34;https://www.unusually.pink/podcast/episode-18-end-of-year-music-stats&#34;&gt;music stats episode&lt;/a&gt; have Bandcamp profiles. Even if you don&amp;rsquo;t need a digital album because you always use Spotify or Apple Music, consider buying an album anyway just to help out and show some love for the people who have made such a difference in your life.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BuyLiterallyAnythingFromBandcampToday_music.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pre-orders count as well, so you can show some support for artists with upcoming albums. Also note that most albums have a minimum price but offer you the ability to throw a little extra on top if you want. Please help out if you have the means.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t have the means, you can still help out! The payouts are garbage, but stream as much music from indie artists as you possibly can. Check out the Twitter profiles for artists you love; many have started doing online shows. For example, on her &lt;a href=&#34;https://www.youtube.com/channel/UCOw4v1j3QnzH7X4krQAS7fg&#34;&gt;YouTube channel&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/TessaViolet&#34;&gt;Tessa Violet&lt;/a&gt; has been streaming what she&amp;rsquo;s coined &amp;ldquo;The Something To Look Forward To Tour&amp;rdquo;. There are still 3 shows left. Tune in for those and look for other artists who are doing the same!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BuyLiterallyAnythingFromBandcampToday_stlftt-768x1024.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Do whatever you can to support artists and musicians now because every little bit helps. It&amp;rsquo;s time that we take care of the people who take care of us.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Idiot&#39;s Guide To Figuring Out How A Website Was Hacked</title>
      <link>https://hugo.unusually.pink/idiots-guide-to-figuring-out-how-a-website-was-hacked/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/idiots-guide-to-figuring-out-how-a-website-was-hacked/</guid>
      <description>Full Disclosure: This won&amp;rsquo;t tell you exactly what was wrong with a website. This will just give you a pretty good, quick idea. I&amp;rsquo;m not in DFIR or even InfoSec. I&amp;rsquo;m just a sysadmin who has some familiarity with a decent number of systems. It&amp;rsquo;s also worth mentioning that I did all of these actions from my Linux machine. The same would be possible from macOS or from Windows 10 with the Windows Subsystem for Linux.</description>
      <content>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Full Disclosure:&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;This won&amp;rsquo;t tell you exactly what was wrong with a website. This will just give you a pretty good, quick idea. I&amp;rsquo;m not in DFIR or even InfoSec. I&amp;rsquo;m just a sysadmin who has some familiarity with a decent number of systems. It&amp;rsquo;s also worth mentioning that I did all of these actions from my Linux machine. The same would be possible from macOS or from Windows 10 with the Windows Subsystem for Linux.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Last night, my good buddy &lt;a href=&#34;https://www.instagram.com/craftbrewgeek/&#34;&gt;Craft Brew Geek&lt;/a&gt; shot me a message because a website we both had something of an interest in (I won&amp;rsquo;t go into more specifics than that to protect the guilty&amp;hellip; I&amp;rsquo;ll just say that it doesn&amp;rsquo;t belong to either of us) had suddenly exhibited weird behavior. Navigating to the website, either via directly typing their URL into my browser or by searching for them on Google and clicking the link, took me &lt;em&gt;not&lt;/em&gt; to the expected website but to a &lt;strong&gt;super&lt;/strong&gt; shady online pharmacy; there&amp;rsquo;s not enough booze in the world to get me drunk enough to type my credit card information into this site. Since we&amp;rsquo;re all stuck at home under quarantine, though, I figured I&amp;rsquo;d kill a little time digging into what, exactly, was going on.&lt;/p&gt;
&lt;p&gt;The initial problem is that I navigate to &lt;code&gt;desiredsite.com&lt;/code&gt; and it takes me to &lt;code&gt;shadysite.com&lt;/code&gt; instead. A common way this type of thing happens without any degree of technical compromise is if someone allows their domain to expire rather than having it automatically renew. When that happens, it&amp;rsquo;s possible for an attacker to swoop in, buy the domain, and then change the DNS information to point to their desired site. It&amp;rsquo;s pretty uncommon since most DNS registrars will park domains for a month, giving the original owner time to renew. Failing that, they often go to auction rather than back into the pool. Additionally, under this scenario there would be no reason to redirect to &lt;code&gt;shadysite.com&lt;/code&gt;. Still, it doesn&amp;rsquo;t hurt to check the DNS history through something like &lt;a href=&#34;https://securitytrails.com/&#34;&gt;SecurityTrails&lt;/a&gt;. This showed the last DNS change was 3 months ago for the site in question; there&amp;rsquo;s no way the site had been redirected for 3 months so I could rule that out.&lt;/p&gt;
&lt;p&gt;My next thought was to see if the sites were on the same server. If they were, that would tell me the entire server was wrecked, receiving my request, and was configured to load a different site instead. This was easy enough through &lt;code&gt;dig&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;dig +short desiredsite.com. a
dig +short shadysite.com. a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gave me two different IP addresses. This tells me the sites aren&amp;rsquo;t hosted on the same server, which means that &lt;code&gt;desiredsite.com&lt;/code&gt; is &lt;em&gt;redirecting&lt;/em&gt; me to &lt;code&gt;shadysite.com&lt;/code&gt;. For that to be the case, I &lt;em&gt;have&lt;/em&gt; to be hitting &lt;code&gt;desiredsite.com&lt;/code&gt; first, but then I&amp;rsquo;m redirected before I see anything. I needed to see what was up with the site before being redirected. Scripts on the web are most commonly executed not on the server side, but locally in the browser. As a result, I used &lt;code&gt;wget&lt;/code&gt; to just try to snag the file living at &lt;code&gt;desiredsite.com&lt;/code&gt;, which for most websites will be &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;wget http://desiredsite.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This simply downloads the file to my local machine. Nothing is actually executing any scripts it might reference. Sure enough, this gives me an HTML file for &lt;code&gt;desiredsite.com&lt;/code&gt; I can open in a text editor. I figured JavaScript was likely being used to handle the redirect. To test this, I turned off JavaScript in Google Chrome and once again navigated to &lt;code&gt;http://desiredsite.com&lt;/code&gt;. This caused the expected website to load, albeit kind of broken since JavaScript wasn&amp;rsquo;t running.&lt;/p&gt;
&lt;p&gt;Diving back into the &lt;code&gt;index.html&lt;/code&gt; file, a quick search showed me that there were nearly 60 &lt;code&gt;.js&lt;/code&gt; files for JavaScript. Ick. JavaScript can be written to be fairly easy to consume if you&amp;rsquo;ve got a passing familiarity with computer programming, but &lt;em&gt;most&lt;/em&gt; JavaScript on the web is designed to be 1.) minified and 2.) obfuscated to make this nearly impossible. Seriously, this is what a typical JavaScript file looks like. Note how my editor is showcasing the fact that it&amp;rsquo;s all &lt;strong&gt;one line&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/IdiotsGuideToFiguringOutHowAWebsiteWasHacked_gross.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Clearly trying to read through 60 files of that isn&amp;rsquo;t going to happen; this isn&amp;rsquo;t my job, I&amp;rsquo;m doing it for fun. However, I still had some options for trying to quickly look for something flagrant. I saved down local copies of all 60 JavaScript files in the same directory, and then navigated to that directory from my terminal. I then used &lt;code&gt;grep -R&lt;/code&gt; to recursively search through every JavaScript file at the same time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;cd /path/to/javascript
grep -R &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;search term here&amp;#34;&lt;/span&gt; .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What did I search for? I started off by searching for &lt;code&gt;shadysite.com&lt;/code&gt;. No dice. Then I searched for the IP address I got for the site from my previous &lt;code&gt;dig&lt;/code&gt; command. Also no dice. I didn&amp;rsquo;t think it would be anything that overt, but it was worth a shot. I decided to look at the source code for &lt;code&gt;shadysite.com&lt;/code&gt; to see if there were any clues. I immediately noticed that the entire site was coded around the IP address for the site rather than the domain. For example, links in the source code of most sites are going to look like:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mydomain.com/folder/page.html&#34;&gt;http://mydomain.com/folder/page.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The links on this particular page were done like this:&lt;/p&gt;
&lt;p&gt;http://192.168.254.254/folder/page.html&lt;/p&gt;
&lt;p&gt;Obviously that &lt;em&gt;wasn&amp;rsquo;t&lt;/em&gt; the IP address in use, but you get the point. This tells me that, unsurprisingly, they run into a lot of problems with their domain getting shut down. So they design the site to be domain agnostic, buy a new domain when the old one is shuttered, and then point it to the same IP address they&amp;rsquo;ve been using. Some quick searches online showed me a few tools I could use to plug in an IP address and get a historical list of domains tied to that IP. I used &lt;a href=&#34;https://viewdns.info/reverseip/&#34;&gt;ViewDNS.info&lt;/a&gt;. This showed me 6 total domains that had been pointing to the same IIP address, one of which was what I saw now. I repeated my &lt;code&gt;grep&lt;/code&gt; search above with the others to see if there were any hits, but sadly there was still no luck.&lt;/p&gt;
&lt;p&gt;At this point, though, I still had a pretty good idea of what was happening. Out of the 60 JavaScript files referenced by the source code for &lt;code&gt;desiredsite.com&lt;/code&gt;, most of them were in a sub-directory for WordPress, including some directories that noted they were for WordPress plugins. Having looked at enough compromised websites over the past 15 years, it&amp;rsquo;s a definite trend that WordPress (and especially WordPress plugins) tend to be Swiss cheese. WordPress plugins are a frequent target for attackers, and most people &lt;em&gt;never&lt;/em&gt; think to update them. At this point, if I were determined to get to the bottom of things, it would be much quicker to just point some kind of vulnerability scanner like &lt;a href=&#34;https://www.tenable.com/products/nessus/nessus-professional&#34;&gt;Nessus&lt;/a&gt; at the site and just let it find the vulnerable plugin(s) rather than tracking them down through obfuscated JavaScript.&lt;/p&gt;
&lt;p&gt;All told, though, it was a fun exercise to dig into how the site was compromised and come away after only about 30 minutes of work with a pretty good guess.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Google Wifi And The Curse Of Simplication</title>
      <link>https://hugo.unusually.pink/google-wifi-and-the-curse-of-simplication/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/google-wifi-and-the-curse-of-simplication/</guid>
      <description>As you likely know if you listen to the podcast, about 6 months ago I started a new job, and about 3 months ago I moved to be closer to that job. With Brandi&amp;rsquo;s help, I managed to get moved without too much hassle, but I cut a few corners in getting my new home set up. One of those corners was my home network; after using the &amp;ldquo;kit&amp;rdquo; from my ISP to get my Internet service activated I had never bothered to swap out their equipment with my own.</description>
      <content>&lt;p&gt;As you likely know if you listen to the podcast, about 6 months ago I &lt;a href=&#34;https://www.unusually.pink/podcast/episode-16-abandonment-and-homebrew&#34;&gt;started a new job&lt;/a&gt;, and about 3 months ago I moved to be closer to that job. With Brandi&amp;rsquo;s help, I managed to get moved without too much hassle, but I cut a few corners in getting my new home set up. One of those corners was my home network; after using the &amp;ldquo;kit&amp;rdquo; from my ISP to get my Internet service activated I had never bothered to swap out their equipment with my own. Given the number of devices I had connected to the Wifi (2 laptops, a phone, a tablet, 2 streaming sticks, 3 smart speakers, etc.) I didn&amp;rsquo;t want to bother with getting &lt;em&gt;everything&lt;/em&gt; connected to a different network.&lt;/p&gt;
&lt;p&gt;That being said, I&amp;rsquo;ve been spoiled by mesh Wifi and coverage in my bedroom was occasionally problematic; in apartments like mine it&amp;rsquo;s easy for crowded channels to drown out your signal. I had a little free time one evening earlier this week and decided to finally bite the bullet.&lt;/p&gt;
&lt;p&gt;My Wifi setup at my last apartment was &lt;a href=&#34;https://store.google.com/product/google_wifi_first_gen&#34;&gt;Google Wifi&lt;/a&gt; with 3 access points. 3 APs may seem overkill for a roughly 900 square foot apartment, but when I bought them the bundle of 3 was essentially the same price as buying 2 individually&amp;hellip; plus it ensures that I have &lt;strong&gt;total Wifi dominance&lt;/strong&gt; over my neighbors.&lt;/p&gt;
&lt;p&gt;The initial, out-of-box experience with setting up Google Wifi was fairly simple. Connect the first AP to the modem, install the Google Wifi mobile app, have it discover the AP, and then configure it through the app. Once your Wifi is working, repeat the process for the additional APs to get them to form the mesh network. The full instructions are available &lt;a href=&#34;https://support.google.com/wifi/answer/7183148?hl=en&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, configuring them when they&amp;rsquo;ve already been configured once turned out to be &lt;em&gt;much&lt;/em&gt; more irritating and far less straightforward. Given that I had a brand new phone, I needed to install the Google Wifi app. I did that and logged in with my Google account. Naturally, Google had stored the information about my APs and how they were configured, but told me they were offline. Taking one of the 3, I connected it to my modem and bounced the modem. The light ring on the AP stayed orange, indicating that it didn&amp;rsquo;t have a WAN link.&lt;/p&gt;
&lt;p&gt;I can only assume this is where I made the first of many mistakes that I&amp;rsquo;ll take partial responsibility for and partially blame on how kludgey this whole experience is when you&amp;rsquo;re tied to a mobile app. Rather than repeating this process potentially two more times to find the AP that was expecting to be the router (and that assuming the memory was still held despite being off for months), I figured I would just factory reset the APs and start from scratch. I could select the factory reset option from the app to clear the APs out of it, but naturally that wouldn&amp;rsquo;t do anything to the physical devices since they couldn&amp;rsquo;t connect to the Internet to see that configuration. A quick web search let me know that I needed to hold the button on the back of the AP for 10 seconds while the device is on, pull the power while continuing to hold the button, and then plug the power back in while &lt;strong&gt;still&lt;/strong&gt; holding the button until I saw the light ring. Talk about a secret handshake. Regardless, I did that, and then proceeded to wait until the light ring began to pulse blue. That indicates it&amp;rsquo;s ready for setup, per the &lt;a href=&#34;https://support.google.com/wifi/answer/7183148?hl=en&#34;&gt;aforementioned instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At this point, I open the app on my phone. It does a quick search, confirms for me that it &lt;strong&gt;sees&lt;/strong&gt; the AP, and then starts trying to connect. For the next 15 minutes I stare at this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/GoogleWifiAndTheCurseOfSimplication_PhotoMar092C54634PM.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Umm&amp;hellip; not great. At this point, I figure something must be amiss in the app. The instructions in step #4 say I should be prompted to scan the QR code on the bottom of the device&amp;hellip; a prompt that I never receive. I kill the app and re-launch. I get the exact same experience and end up stuck at the same screen as above.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/GoogleWifiAndTheCurseOfSimplication_buller.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is what we in the IT industry call a problem. At this point I&amp;rsquo;m mumbling &amp;ldquo;stupid fucking app&amp;rdquo; to myself, so I grab my laptop and an Ethernet cable. I connect my laptop to the one LAN port on the AP; sure enough, I get a DHCP address and can reach the Internet. So the AP is making a WAN connection. The mobile app just won&amp;rsquo;t connect to the AP for some reason. I can check the network settings on my laptop, though, to see the local IP of the AP. While being salty at Google for designing this for the less technically inclined, I do a quick &lt;code&gt;nmap&lt;/code&gt; to see if ports 80 and/or 443 are open on the AP, indicating HTTP and HTTPS, respectively.&lt;/p&gt;
&lt;p&gt;nmap -Pn -p 80,443 192.168.x.y&lt;/p&gt;
&lt;p&gt;80 was open while 443 was closed. I open a browser and navigate to:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://192.168.x.y&#34;&gt;https://192.168.x.y&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sure enough, this loads a web page on the device. In most consumer routers this is where you&amp;rsquo;d normally do all of your configuration. In Google Wifi it politely recommends that I get bent and use the mobile app:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/GoogleWifiAndTheCurseOfSimplication_ScreenShot2020-03-09at55533PM.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Shit. With the app being my &lt;strong&gt;only&lt;/strong&gt; option, I hop back over to the setup instructions online to see what I may have missed. At this point I notice a chat pop-up at the bottom right corner of the screen for Google support. I click on it and get connected to a support agent. After I describe the situation, she instructs me to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Kill the Google Wifi app on my phone.&lt;/li&gt;
&lt;li&gt;Turn off cellular data on my phone.&lt;/li&gt;
&lt;li&gt;Open the Wifi network settings, search for the network named on the bottom of the AP, and connect to that.&lt;/li&gt;
&lt;li&gt;Re-open the app and now go through the setup.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, it actually connects and gets past the screen I was stuck on so that I could configure the device. I was happy to have it working, but I was also extremely confused; nothing in the setup mentions connecting to the setup network on the device. Nothing like this was mentioned on the &lt;a href=&#34;https://support.google.com/wifi/topic/6261534?hl=en&amp;amp;ref_topic=6243113&#34;&gt;common issues&lt;/a&gt; page, either.&lt;/p&gt;
&lt;p&gt;Regardless, with the Wifi network running, I connect a second AP to build the mesh network. I even clarified with the support agent in chat that for &lt;strong&gt;this&lt;/strong&gt; AP, I don&amp;rsquo;t connect to the setup network&amp;hellip; I should be able to be connected to my new Wifi network, tap the option to add another AP in the app, and have it connect. Unfortunately for me, the &lt;em&gt;exact&lt;/em&gt; same thing happens as before. The AP is found, but I again sit endlessly at the &amp;ldquo;Connecting to Wifi point&amp;rdquo; screen. The support agent has me reset the AP again to no avail. Next she has me use an Ethernet cable to physically connect the mesh AP to the first AP and then repeat the setup:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/GoogleWifiAndTheCurseOfSimplication_PhotoMar092C71516PM.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Unsurprisingly, this makes no difference. On a whim, I grab my iPad, install the Google Wifi app (which doesn&amp;rsquo;t actually have an iPad variant and looks like garbage), and repeat the process. The app on my iPad immediately connects and prompts me to scan the QR code on the bottom of the AP. Within two minutes the AP is connected and working.&lt;/p&gt;
&lt;p&gt;I then head back to my bedroom where I had already plugged in the third AP during one of the instances of watching the app on my iPhone refuse to connect. It also immediately completes the setup when using my iPad.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/GoogleWifiAndTheCurseOfSimplication_dbz_rage.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this point I&amp;rsquo;m just shy of 3 hours in to something that I assumed would take me 30 minutes at most, and I &lt;em&gt;still&lt;/em&gt; have to go through the painful process of connecting my smart speakers to the new network. I&amp;rsquo;m glad it&amp;rsquo;s all working, but I&amp;rsquo;ve got so many points of confusion.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Why are the setup instructions Google publishes wrong?&lt;/li&gt;
&lt;li&gt;WTF is going on between the mobile app and my iPhone 11 that it wouldn&amp;rsquo;t work, but it works fine on my iPad?&lt;/li&gt;
&lt;li&gt;Why on Earth does Google not permit you to do configuration locally, and then have the device sync that configuration to the cloud to keep everything in sync.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;#3 is a particular sticking point for me. Google only permits the configuration to sync from the cloud down to the device. Why not permit me to configure the device locally, and then make the device sync any changes to the cloud; the sync could work in both directions instead of in 1 direction. I understand wanting to leverage the app to (hopefully) simplify the process for people who would find webbing to their router way too confusing, but not permitting you to do a local configuration when you know how to connect but the shitty app doesn&amp;rsquo;t work is infuriating to me.&lt;/p&gt;
&lt;p&gt;That being said, this was 100% my own fault for not doing the research to realize that Google Wifi doesn&amp;rsquo;t permit this prior to making the purchase. And to be complete clear, I&amp;rsquo;m not opposed to the app. The first setup was good, and I love being able to quickly check and configure my network from my phone regardless of where I am. I just feel like it should be mandatory to allow some degree of local access for when the app goes haywire. Unfortunately, this appears to be a standard practice. I verified that &lt;a href=&#34;https://support.eero.com/hc/en-us/articles/207937603-How-do-I-set-up-eero-&#34;&gt;Eero also uses an app-based setup&lt;/a&gt;, and that if you don&amp;rsquo;t have data on your phone, you &lt;a href=&#34;https://support.eero.com/hc/en-us/articles/207921153-How-do-I-set-up-my-eeros-if-I-don-t-have-cell-data-service-&#34;&gt;still need to use your phone but do some janky local connections between your old router and your Eero&lt;/a&gt;. How that is less complicated than connecting a laptop and opening a browser I&amp;rsquo;ll never know.&lt;/p&gt;
&lt;p&gt;Despite my copious amounts of salt, I&amp;rsquo;m glad I finally got everything connected. As Wifi 6 becomes more prevalent, though, I&amp;rsquo;ll be on the lookout for new networking hardware. This time I&amp;rsquo;ll be sure to verify that whatever I buy at least offers local configuration options in conjunction with an app.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>SSHFS On macOS</title>
      <link>https://hugo.unusually.pink/sshfs-on-macos/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/sshfs-on-macos/</guid>
      <description>Having switched to a MacBook Pro for work when I started a new job about 6 months ago, I&amp;rsquo;ve been on an interesting journey in finding new software to fit my workflow after over a decade of operating primarily on Windows for my professional computing. Given that I&amp;rsquo;ve used Linux for years at a personal level, I can typically do anything I need on macOS by opening a Terminal; it&amp;rsquo;s only when I&amp;rsquo;ve got to operate at the graphical level that I can get a little tripped up by the differences between macOS and Windows.</description>
      <content>&lt;p&gt;Having switched to a MacBook Pro for work when I started a new job about 6 months ago, I&amp;rsquo;ve been on an interesting journey in finding new software to fit my workflow after over a decade of operating primarily on Windows for my professional computing. Given that I&amp;rsquo;ve used Linux for &lt;strong&gt;years&lt;/strong&gt; at a personal level, I can typically do anything I need on macOS by opening a Terminal; it&amp;rsquo;s only when I&amp;rsquo;ve got to operate at the graphical level that I can get a little tripped up by the differences between macOS and Windows.&lt;/p&gt;
&lt;p&gt;I recently found myself needing to copy some files from a cloud VPS running on &lt;a href=&#34;https://www.linode.com/&#34;&gt;Linode&lt;/a&gt;. The reverse had been simple enough; copying files from my local machine to the VPS was as simple as running one &lt;code&gt;rsync&lt;/code&gt; command. Note that I swap the SSH port on all of my VPS instances to something non-standard so that I don&amp;rsquo;t get so many random &lt;strong&gt;root&lt;/strong&gt; authentication attempts when nefarious people see that port 22 is open. Even though I disable root login I still want to discourage the attempts for anything that has SSH open to the Internet. If you think I&amp;rsquo;m overreacting and you have a server in the same position, just do this and see how you feel after:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo tail /var/log/auth.log
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It&amp;rsquo;s low-key terrifying. That being said, it was still easy enough to &lt;code&gt;rsync&lt;/code&gt; anything from my MacBook Pro to the VPS (usually a script I had been working on that I figured would take hours to run and thus would be better suited to running on my VPS) via:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rsync --delete -azP -e &amp;quot;ssh -p #####&amp;quot; LocalFolder/ usere@server.domain:/local/file/path/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the &lt;code&gt;#####&lt;/code&gt; should be replaced by the SSH port number on your server if you&amp;rsquo;re using something other than the default of port 22. You can verify the SSH port in use by checking &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; on your server and looking for the &lt;code&gt;Port&lt;/code&gt; entry.&lt;/p&gt;
&lt;p&gt;For me, though, this typically &lt;em&gt;only&lt;/em&gt; works in the direction of going from my local laptop to my VPS. After finishing one particularly log-running script, though, I had a file on my VPS that I needed to copy back to my MacBook. In that case, &lt;code&gt;rsync&lt;/code&gt; wouldn&amp;rsquo;t work because my laptop doesn&amp;rsquo;t have a public IP address, and I &lt;em&gt;really&lt;/em&gt; didn&amp;rsquo;t want to bother with trying to do port-forwarding for it. In the Windows world, I would&amp;rsquo;ve typically used something like &lt;a href=&#34;https://winscp.net/eng/index.php&#34;&gt;WinSCP&lt;/a&gt; to copy the files. &lt;a href=&#34;https://filezilla-project.org/&#34;&gt;FileZilla&lt;/a&gt; also works but, in my previous experience, has been super buggy. I tried looking in the macOS app store, and I was almost immediately disappointed. Most of the offerings either 1.) looked super shady with bad reviews or 2.) were aubscription-based applications. Don&amp;rsquo;t get me wrong&amp;hellip; I&amp;rsquo;m not particularly opposed to subscription services. In fact, &lt;a href=&#34;https://sameshadeofdifference.com/&#34;&gt;I have a podcast episode waiting to be published on this very topic&lt;/a&gt;. But for something like a simple &lt;em&gt;file transfer&lt;/em&gt;? I refuse to pay a subscription for something so basic.&lt;/p&gt;
&lt;p&gt;As a result, I ended up looking for open-source alternatives. After just a little hunting I stumbled across &lt;a href=&#34;https://github.com/libfuse/sshfs&#34;&gt;sshfs&lt;/a&gt;. I installed the &lt;code&gt;sshfs&lt;/code&gt; base from &lt;a href=&#34;https://www.unusually.pink/podcast/episode-16-abandonment-and-homebrew&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install sshfs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Before &lt;code&gt;sshfs&lt;/code&gt; will work, though, you also need to install &lt;a href=&#34;https://osxfuse.github.io/&#34;&gt;FUSE&lt;/a&gt;, which I just did from their website. Note that after upgrading my device from Mojave to Catalina I needed a new version of FUSE; luckily the system is good about letting you know that your version is out of date if that&amp;rsquo;s a problem.&lt;/p&gt;
&lt;p&gt;What &lt;code&gt;sshfs&lt;/code&gt; allows me to do is to mount a remote filesystem like a local filesystem that I can then use to copy files back and forth. To be extra basic, I created my mount point in my &lt;code&gt;~/Downloads&lt;/code&gt; folder:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir ~/Downloads/sftp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It took me some messing around to figure out the exact syntax I needed to successfully mount the filesystem for my VPS, but I eventually ended up with a shell script that just included this line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo sshfs -o allow_other,defer_permissions -p ##### user@server.domain:/local/file/path /Full/Path/ToLocal/MountPoint/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Just like before, change the port number, server, and file path information to match your actual setup. After running this, you can then open Finder in macOS and easily copy files to and from the server without worry about port forwarding. The only caveat I&amp;rsquo;ve noticed is that sometimes macOS becomes extremely unhappy if the remote filesystem is left mounted and the local client loses connectivity to the remote system, for example because the laptop fell asleep and disconnected from WiFi. As a result, I only leave the connection up when I&amp;rsquo;m actively working with it. When I need to disconnect the mounted remote filesyste, I can either click the &amp;ldquo;eject&amp;rdquo; icon next to it in Finder or I can run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo unmount /Full/Path/ToLocal/MountPoint
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In this case the mount point is &lt;code&gt;~/Downloads/sftp&lt;/code&gt;. I now use this setup on a nearly daily basis, and I&amp;rsquo;ve not run into any issues. The free, open-source solution is working great without forcing me to try out random shady-looking apps or coughing up money for a subscription just to move files between devices.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Impressions: Pinebook Pro</title>
      <link>https://hugo.unusually.pink/unusually-pink-impressions-pinebook-pro/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-impressions-pinebook-pro/</guid>
      <description>In my last post about not using Chrome OS, I neglected to get into what I was replacing my Chromebooks with since that seemed like a lengthy post in its own right. As the title gave away, my switch went to the Pinebook Pro from Pine 64. I had been interested in the original $99 USD Pinebook when that came out a couple of years ago, but it seemed a bit too basic for what I wnanted.</description>
      <content>&lt;p&gt;In my &lt;a href=&#34;https://www.unusually.pink/blog/rip-chrome-os&#34;&gt;last post about not using Chrome OS&lt;/a&gt;, I neglected to get into &lt;em&gt;what&lt;/em&gt; I was replacing my Chromebooks with since that seemed like a lengthy post in its own right. As the title gave away, my switch went to the &lt;a href=&#34;https://www.pine64.org/pinebook-pro/&#34;&gt;Pinebook Pro&lt;/a&gt; from Pine 64. I had been interested in the original $99 USD Pinebook when that came out a couple of years ago, but it seemed a bit &lt;strong&gt;too&lt;/strong&gt; basic for what I wnanted. The Pinebook Pro seemed to offer a more compelling experience for $199. The description on the site even seemed to match exactly what I was wanting.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Pinebook Pro is meant to deliver solid day-to-day Linux or *BSD experience and to be a compelling alternative to mid-ranged Chromebooks that people convert into Linux laptops.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I didn&amp;rsquo;t want to have to deal with Windows, nor was I wanting to go through a lot of research to find a Windows laptop or Chromebook that I could then convert to a Linux laptop. The Pinebook Pro seemed to take care of this for me while also giving me an outlet to support a great company doing some awesome things for the open source community. I was a little leery on what kind of performance I would get out of an ARM processor and if I would hit any compatibility issues, but so far everything has been buttery smooth.&lt;/p&gt;
&lt;h1 id=&#34;hardware&#34;&gt;Hardware&lt;/h1&gt;
&lt;p&gt;The hardware is absurdly nice for a $199 device. The Magnesium alloy body just feels solid and sturdy. It has enough heft to make the laptop feel more expensive than it is without being a pain to carry around. It also just looks sleek given that there&amp;rsquo;s literally nothing on the top, not even branding. It&amp;rsquo;s a spotless, black surface.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_IMG_0051.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t normally leave my laptops completely unemblazoned, so I just ordered some stickers for it earlier today. I&amp;rsquo;ll share pictures on the socials once those are on.&lt;/p&gt;
&lt;p&gt;Under the hood is the a screen that you almost feel has no business being on a $200 machine. It&amp;rsquo;s a 14&amp;quot; 1080p IPS display that looks absolutely gorgeous. Everything from typing away in a Terminal or blog post to watching videos looks terrific on it.&lt;/p&gt;
&lt;p&gt;The keyboard is also surprisingly nice. It&amp;rsquo;s spacious, and the keys have an impressive amount of travel to them. Given that these days I rarely use my personal laptop unless I&amp;rsquo;m doing a lot of typing where I need a physical keyboard, the keys on the Pinebook Pro really deliver. Rarely do I even bother to sit at a desk and connect an external keyboard; the default experience is just fine. The keys have good tactile feedback to go along with that travel distance, so you&amp;rsquo;re never left doubting if you pressed a particular key or not.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_IMG_0052.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;You may notice that the keyboard also features literally the only external branding other than the sticker on the bottom of the device. The super key has a Pine 64 logo on it, which is a nice, subtle touch.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_IMG_0050.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The trackpad is unfortunately not quite as solid as the keyboard. It doesn&amp;rsquo;t feel particular sensitive and the pointer come across as &amp;ldquo;floaty&amp;rdquo;. Hitting big buttons is fine, but it can be annoying to make more precise movements like grabbing the corner of an application to resize it. If I&amp;rsquo;m using the device for something that&amp;rsquo;s mouse-intensive, I&amp;rsquo;ll typically reach for my &lt;a href=&#34;https://www.logitech.com/en-us/product/mx-ergo-wireless-trackball-mouse&#34;&gt;Logitech MX Ergo trackball&lt;/a&gt;, but the trackpad is still workable in a pinch.&lt;/p&gt;
&lt;p&gt;The speakers aren&amp;rsquo;t bad, but they&amp;rsquo;re about what you expect from laptop speakers. Only Apple seems to posess the voodoo required to make great sounding laptop speakers.&lt;/p&gt;
&lt;p&gt;The device comes with a barrel jack charger. You can also charge it via the USB-C port as well, which is what I much more commonly do with the charger which came with my Acer Chromebook 315.&lt;/p&gt;
&lt;h1 id=&#34;software&#34;&gt;Software&lt;/h1&gt;
&lt;p&gt;Once the device is booted, you&amp;rsquo;ll be using a customized Debian Linux version that comes from the factory.&lt;/p&gt;
&lt;p&gt;Distributor ID:    Debian
Description:    Debian GNU/Linux 9.12 (stretch)
Release:    9.12
Codename:    stretch&lt;/p&gt;
&lt;p&gt;Being that it&amp;rsquo;s Debian Linux, you can do pretty much anything else that you&amp;rsquo;d expect with Debian Linux&amp;hellip; and that&amp;rsquo;s &lt;strong&gt;awesome&lt;/strong&gt;. There are some limitations in the packages simply regarding what software supports ARM and which software does not, but everything I&amp;rsquo;ve tried to do so far has worked fine. That being said, I&amp;rsquo;m mainly still using the device very similar to a Chromebook; I want a web browser and a Terminal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_Screenshotat2020-02-0915-17-28.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The ARM processor and included 4 GB of RAM do an excellent job of keeping everything snappy. It&amp;rsquo;ll occasionally take a little bit longer to launch a heavier application, but otherwise it&amp;rsquo;s often easy to forget that I&amp;rsquo;m on a $200 Linux laptop and not my $2000 MacBook Pro for work. The 64 GB of local storage is a nice change from most Chromebooks as well. Rarely is my system ever bumping its head against the hardware, even when I&amp;rsquo;m streaming music and have a bunch of browser tabs open.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_image-asset.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Need to install something new? Just &lt;code&gt;sudo apt install package-name&lt;/code&gt; and you&amp;rsquo;re good to go! That being said, just like normal with Debian you get a wide array of software out of the box&amp;hellip; all of which still only amounts to a 5 GB footprint in what comes from the factory.&lt;/p&gt;
&lt;h1 id=&#34;to-do&#34;&gt;To Do&lt;/h1&gt;
&lt;p&gt;There are a few things to do out of the box when you get a Pinebook Pro; I would &lt;strong&gt;highly&lt;/strong&gt; recommend reading &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro&#34;&gt;the wiki page&lt;/a&gt; about the device so you know what those are instead of trying to do things on your own. For example, there&amp;rsquo;s no traditional &amp;ldquo;first run&amp;rdquo; experience to set things up given that this is a highly customized Debian image. Instead, you log in with the default credentials &lt;code&gt;rock/rock&lt;/code&gt; to get things started. It&amp;rsquo;s highly recommended you &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro#Initial_user_changes.2C_password.2C_name.2C_etc&#34;&gt;rename the &lt;code&gt;rock&lt;/code&gt; account&lt;/a&gt; if you want to keep all of the customizations. If you make a brand new account, which is totally an option if you want to go that route, you&amp;rsquo;ll end up in a session that looks much more like a traditional Debian installation.&lt;/p&gt;
&lt;p&gt;While the Wiki does an awesome job of covering what to do when you get the device, my recommendations are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disable the root account.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo passwd -l root&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install and enable &lt;code&gt;ufw&lt;/code&gt; for a firewall.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo apt install ufw&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw enable&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run the &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro#Default_Debian_MATE_Desktop_Quick_Start&#34;&gt;system update script&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Update the rest of the system.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Update the &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro#Trackpad&#34;&gt;keyboard and trackpad firmware&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Check your keyboard version to make sure it&amp;rsquo;s on the correct language. Mine came as UK English.
&lt;ul&gt;
&lt;li&gt;If that&amp;rsquo;s not correct, type &lt;code&gt;keyboard&lt;/code&gt; at the menu launcher, open the keyboard preferences, go to the &lt;code&gt;Layouts&lt;/code&gt; tab, and select the apporpriate layout.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Verify if your timezone is correct or needs to be updated.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tzselect&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, all of this assumes you&amp;rsquo;re going to keep rolling with the factory Debian image. There&amp;rsquo;s a &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro_Software_Release&#34;&gt;wide array of operating systems you can choose from&lt;/a&gt;. I&amp;rsquo;m personally super tempted to give the &lt;a href=&#34;http://www.armbsd.org/arm/&#34;&gt;NetBSD image&lt;/a&gt; a shot.&lt;/p&gt;
&lt;h1 id=&#34;wrap-up&#34;&gt;Wrap Up&lt;/h1&gt;
&lt;p&gt;Overall, I&amp;rsquo;m &lt;em&gt;extremely&lt;/em&gt; pleased with the Pinebook Pro so far. They&amp;rsquo;ve got a great community, and I&amp;rsquo;ve spent a little time so far keeping tabs on their IRC server and Discord. If you can&amp;rsquo;t find something in particular on the wiki (which would be surprising; it&amp;rsquo;s extremely well-maintained), the helpful folks on IRC can likely assist. If you&amp;rsquo;re a fan of budget laptops but want to move away from Chrome OS or Windows, the Pinebook Pro seems like a great option if you feel comfortable with Linux.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>RIP Chrome OS</title>
      <link>https://hugo.unusually.pink/rip-chrome-os/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/rip-chrome-os/</guid>
      <description>If you’ve listened to some of our episodes or read some of my other posts on this site, then you’re likely aware that I’ve historically been a Chromebook fan. I started with the original HP Chromebook 11 and have owned quite a Chromebook collection since then. The speed and simplicity to do the two main things I need in my personal life (interacting with web pages and making SSH connections) coupled with the low cost made them a perfect match.</description>
      <content>&lt;p&gt;If you’ve listened to some of our episodes or &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-impressions-acer-chromebook-315&#34;&gt;read some of my other posts on this site&lt;/a&gt;, then you’re likely aware that I’ve historically been a Chromebook fan. I started with the original HP Chromebook 11 and have owned quite a Chromebook collection since then. The speed and simplicity to do the two main things I need in my personal life (interacting with web pages and making SSH connections) coupled with the low cost made them a perfect match.&lt;/p&gt;
&lt;p&gt;My feelings about Chrome have been shifting, though, as I &lt;a href=&#34;https://www.unusually.pink/blog/back-to-firefox&#34;&gt;elucidated in my post about switching back to Firefox as my main browser&lt;/a&gt; on my work laptop. That post was written from the context of Chrome as a browser without really looking specifically at the Chrome OS operating system. In that area Google has also been making some… less than stellar changes which have ultimately caused frustration to the point where I’ve now given up on Chromebooks entirely. The primary culprit: Google’s confusing war on swap.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: Really smart people make Chrome and Chrome OS. I don’t mean to throw shade at them. I’m sure there’s well-reasoned thought behind the changes I’m about to describe that is either not posted or not posted in a location I found. The real-world impact is undeniable, though.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-symptoms&#34;&gt;The Symptoms&lt;/h2&gt;
&lt;p&gt;Before diving into the problem, I’d like to discuss the end user experience. I admittedly hadn’t been following the Chrome change logs over the past few months while I’ve been busy with starting a new job and moving; I’d mark those posts as read in Feedly and move on to more interesting things. So it seemed almost out of nowhere that my tabs and PWAs in Chrome OS would simply die and reload on their own. Sometimes it wasn’t a big deal. A tab with a news article or a Reddit post can reload without any dire consequences. In other cases, it was a bit more annoying: the Spotify PWA would reload, causing the music I was enjoying to stop playing. And in some instances it was catastrophic: I’d tab away from Squarespace where I had been working on a post for this site to verify some information, and the tab would reload when I went back to it, causing me to lose my progress. The same thing would happen with the &lt;a href=&#34;https://chrome.google.com/webstore/detail/secure-shell-app/pnhechapfaindjhompbnflcldabbghjo?hl=en&#34;&gt;Secure Shell extension&lt;/a&gt;, kicking me out of my SSH session and causing me to lose everything if I didn’t have tmux running. Even if I &lt;strong&gt;did&lt;/strong&gt; have tmux running, it’s still insanely annoying to have to log back in every time I flip from an ebook back to my SSH session… assuming the ebook didn’t &lt;strong&gt;also&lt;/strong&gt; reload, causing me to have to find my place again.&lt;/p&gt;
&lt;p&gt;As you can likely imagine, this was maddening and quickly made it impossible for me to really &lt;em&gt;do&lt;/em&gt; anything with my Chromebooks. At this point, it seemed like my device was in open rebellion against me, and I started doing research into what was happening under the hood to cause this behavior.&lt;/p&gt;
&lt;h2 id=&#34;the-culprit&#34;&gt;The Culprit&lt;/h2&gt;
&lt;p&gt;The cause of this behavior ended up being a new “feature” referred to as &lt;a href=&#34;https://developers.google.com/web/updates/2015/09/tab-discarding?authuser=0&#34;&gt;Tab Discarding&lt;/a&gt;. The idea seems fine on the surface; not all open tabs in a browser are &lt;strong&gt;active&lt;/strong&gt; tabs. So to avoid low memory conditions, Google was discarding tabs that it deemed inactive. This drops the tab and its contents out of memory but keeps the tab open in the browser. If you open that tab again, the contents are then reloaded. The benefit tot his is that you can keep more memory available for actively utilized tabs without having to drop down to swap.&lt;/p&gt;
&lt;h3 id=&#34;a-note-on-swap&#34;&gt;A Note On Swap&lt;/h3&gt;
&lt;p&gt;If you aren’t familiar with swap, it’s good to think about what computers do when they run out of memory. Since just crashing isn’t exactly an option, for the past few &lt;strong&gt;decades&lt;/strong&gt; computers have utilized what’s referred to as swap space. In most flavors of Linux, swap is an actual partition on the disk. In Windows you’ll have a &lt;strong&gt;pagefile.sys&lt;/strong&gt; file. The point of both is the same; when the operating system runs out of memory, it’ll take some data currently stored in memory that hasn’t been used in a little while and write that to the disk in either the swap partition or the pagefile. Then that memory becomes available for some new, active process to utilize. Should the content that was swapped be required again, something &lt;em&gt;else&lt;/em&gt; will be transferred from memory to disk, and then the previously swapped content can be moved from the disk back to memory. Most systems will give you insight into how much swap you’re using. For example, we can see from running &lt;strong&gt;htop&lt;/strong&gt; on this Linux laptop that I’m not currently leveraging swap:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/RIPChromeOS_htop_swap.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This matters because reading and writing from/to the disk is slower than just working in memory… though it’s not nearly as slow in the world of SSDs than it was in the world of spinning platter hard drives. The less swap you can use, the snappier things go… though I question if waiting for SSD swap is actually slower than waiting a few seconds for a web page to reload. Regardless, not using swap can be a matter of both adding more physical memory to the system and optimizing the software for it. Okay, back to the main point.&lt;/p&gt;
&lt;h3 id=&#34;back-to-the-culprit&#34;&gt;Back To The Culprit&lt;/h3&gt;
&lt;p&gt;Google was attempting to use software optimizations to make Chrome stop leveraging swap and keep everything in active memory. The problem is that while this is good in theory, it doesn’t pan out so well in practice in a world of Chromebooks that have 2 - 4 GB of memory installed. I was hitting the point on my Acer Chromebook 315 (which has 4 GB of RAM) where two tabs were too much for the system. Flipping between the two would cause the tab I just left to be discarded. I tried to even go so far as to disable the Play Store and Linux support to see if that would help free up additional memory. While it helped a &lt;em&gt;little&lt;/em&gt;, in the end I was still experiencing the same problems. My laptop was a paperweight.&lt;/p&gt;
&lt;h3 id=&#34;solutions&#34;&gt;Solutions?&lt;/h3&gt;
&lt;p&gt;I naturally started looking for solutions to this problem. The Chromium project put together a &lt;a href=&#34;https://www.chromium.org/chromium-os/chromiumos-design-docs/tab-discarding-and-reloading&#34;&gt;decent FAQ on the behavior&lt;/a&gt;. While that confirmed for me &lt;em&gt;why&lt;/em&gt; it was happening, it didn’t exactly provide solutions on how to make it stop. For the question of “How can I make it stop?” the answer was:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Close some tabs or uninstall extensions that take a lot of memory. If there&amp;rsquo;s a specific tab you don&amp;rsquo;t want discarded, right-click on the tab and pin it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Except the order of operations for discarding tabs goes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Internal pages like new tab page, bookmarks, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tabs selected a long time ago&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tabs selected recently&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tabs playing audio&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apps running in a window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pinned tabs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The selected tab&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So even pinning a tab won’t necessarily prevent it from being discarded; it’s just less likely. It also seems legitimately &lt;strong&gt;insane&lt;/strong&gt; to me to have to temporarily pin any tab you’re actively working in to keep it from being discarded. The behavior is clearly detrimental and needs to be disabled. The original post for the “experiment” mentioned being able to toggle this feature from:&lt;/p&gt;
&lt;p&gt;chrome://flags/#enable-tab-discarding&lt;/p&gt;
&lt;p&gt;Only that didn’t actually work for me; the option was gone. I noticed that &lt;a href=&#34;https://developers.google.com/web/updates/2015/09/tab-discarding?authuser=0&#34;&gt;the page was last updated in January of 2019&lt;/a&gt;, so I’m sure this behavior had changed. The post had also mentioned going to the flags page in order to &lt;em&gt;enable&lt;/em&gt; tab discarding when it was clearly now on by default.&lt;/p&gt;
&lt;p&gt;Going further down the rabbit hole, i found some &lt;a href=&#34;https://www.reddit.com/r/chrome/comments/bxckh3/no_more_automatic_tab_discarding/&#34;&gt;threads on Reddit&lt;/a&gt; where users confirmed my fear; starting with Chrome OS 75 this “feature” was forcibly turned on and the flags to disable it removed. Yikes! The only solution present was to install &lt;a href=&#34;https://chrome.google.com/webstore/detail/disable-automatic-tab-dis/dnhngfnfolbmhgealdpolmhimnoliiok?authuser=0&#34;&gt;some random browser extension to prevent tab discarding&lt;/a&gt;. I can only speculate as to why the ability to turn off such anti-user behavior was removed, but having to install an extension to get it back seems absurd, especially when, as the author of the extension notes, it still isn’t guaranteed to prevent your tabs from being discarded.&lt;/p&gt;
&lt;p&gt;At this point I decided that Chrome OS had finally crossed the line of what I was willing to tolerate in the name of simplicity. When I literally can’t use my laptop to author a post for this website, the device is valueless to me. I won’t go into what I’ve opted to replace my Chromebook with in this post (that’s a topic for another post or possibly even a podcast episode), but suffice to say I’ve officially hopped off the Chrome OS train. The good news is that I’m now not using the Chrome browser &lt;em&gt;anywhere&lt;/em&gt;, giving Google one less avenue to capture data on what I’m doing online.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Back To Firefox</title>
      <link>https://hugo.unusually.pink/back-to-firefox/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/back-to-firefox/</guid>
      <description>Back in 2002, Firefox was the new hotness in the world of web browsers. Rising from the ashes of Netscape Navigator, the browser emerged as a true competitor to the horror of Internet Explorer. It offered competition with superior rendering and web compliance without the plethora of security issues plaguing Internet Explorer. While Firefox grew in popularity against Internet Explorer through the mid-2000’s, it eventually started to decline in the face of Google’s Chrome browser which took the browser market by storm with its release in the latter half of 2008.</description>
      <content>&lt;p&gt;Back in 2002, &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/new/&#34;&gt;Firefox&lt;/a&gt; was the new hotness in the world of web browsers. Rising from the ashes of Netscape Navigator, the browser emerged as a true competitor to the horror of Internet Explorer. It offered competition with superior rendering and web compliance without the plethora of security issues plaguing Internet Explorer. While Firefox grew in popularity against Internet Explorer through the mid-2000’s, it eventually started to decline in the face of Google’s Chrome browser which took the browser market by storm with its release in the latter half of 2008. People appreciated the speed and efficiency of Google’s new browser, leaving Firefox to languish.&lt;/p&gt;
&lt;p&gt;Over the past decade, however, Firefox has undergone a slow yet steady transformation. Prior to the arrival of Chrome, Firefox was fixed on becoming the browser that could do &lt;em&gt;everything&lt;/em&gt;, for better or for worse. At the peak of its decline, Firefox was trying to be your web browser, your RSS reader (for the minority of users who had any clue what RSS was), and your IRC client (for the significantly smaller minority of users who had any clue what the hell IRC was), which overall made the browser require more resources for features that most users didn’t need or want, all the while the browser existed inside of a single, monolithic binary. By comparison, the Chrome browser broke each tab into a separate process so that complications with one tab wouldn’t impact the operation of the others.&lt;/p&gt;
&lt;p&gt;Recently, though, the tables have begun to turn yet again. After achieving dominance in the browser market, Google has started to act like a GOP senator; they’re willing to sacrifice the good of their constituents (users) in favor of their own interests. For example, Google recognizes the impact of adblocking on its own business. As a result, they’ve &lt;a href=&#34;https://9to5google.com/2019/01/22/google-chrome-break-ad-blockers/&#34;&gt;proposed changes which would cripple adblockers&lt;/a&gt;. While they’ve bounced back and forth on this particular change since they first proposed it in January, they’ve continued to flirt with the idea; clearly Google doesn’t see blocking advertisements as a good thing. &lt;a href=&#34;http://www.commitstrip.com/en/2015/09/28/scumbag-chrome/&#34;&gt;Chrome’s resource utilization continues to grow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BackToFirefox_commit_chrome.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;At the same time, &lt;a href=&#34;https://blog.mozilla.org/blog/2017/11/14/introducing-firefox-quantum/&#34;&gt;Firefox began a re-architecture of their browser which allowed for separate processes per tab&lt;/a&gt;. Since then, Mozilla has continued to refine their experience.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.fastcompany.com/90428050/firefox-at-15-its-rise-fall-and-privacy-first-renaissance&#34;&gt;Firefox at 15: Its Rise, Fall, and Privacy-First Renaissance&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://markosaric.com/firefox/&#34;&gt;Give Firefox a Chance for a Faster, Calmer, and Distraction-Free Internet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/70.0/releasenotes/&#34;&gt;Compositor improvements in Firefox for macOS that reduce power consumption, speed up page load by as much as 22 percent and reduce resource usage for video by by up to 37 percent&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.mozilla.org/futurereleases/2019/11/04/restricting-notification-permission-prompts-in-firefox/&#34;&gt;Restricting Notification Permission Prompts in Firefox&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.theregister.co.uk/2019/11/21/ublock_origin_firefox_unblockable_tracker/&#34;&gt;Bad News: ‘Unblockable’ web trackers emerge. Good news: Firefox with uBlock Origin can stop it&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There’s a lot to unpack here, and if you want the full details just read all of the articles linked above. The tl;dr is that Firefox now opens a separate process per tab so that each tab can operate independently. Firefox has taken a stance on blocking trackers and other invasive behavior to fingerprint users. Firefox has improved performance on macOS &lt;em&gt;significantly&lt;/em&gt; over the past year. Do you &lt;strong&gt;fucking&lt;/strong&gt; hate the pop-up you get from what feels like every website where they want to give you notifications? Firefox is going to block those by default, and users have to actively opt into them. And as ISPs start to act even more shady in an attempt to circumvent user attempts to block tracking, Firefox is the browser empowering you to put the power over that tracking into your own hands.&lt;/p&gt;
&lt;p&gt;As time goes by, it becomes more and more clear to me that Firefox is the browser focused on user rights and privacy. While I like the &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-impressions-acer-chromebook-315&#34;&gt;idea of Chromebooks and the simplicity they represent&lt;/a&gt;, they continue to become less attractive as I have to look at other options which don’t completely disregard my privacy. I’m feeling as though I’m better off getting a cheap laptop that I install my Linux distribution of choice on and use Firefox over opting for a Chromebook where Google will dictate my privacy choices on my behalf.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>ProtonMail Bonus Storage</title>
      <link>https://hugo.unusually.pink/protonmail-bonus-storage/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/protonmail-bonus-storage/</guid>
      <description>Brandi and I both love ProtonMail; we like it so much that it got the honor of being a topic in our very first episode! The biggest draws for paying for a ProtonMail Plus account are:
  Support for a custom domain (e.g. @unusually.pink)
  5 GB of storage (up from 500 MB)
  5 email aliases
  The ability to send up to 1000 messages per day (up from 150)</description>
      <content>&lt;p&gt;Brandi and I both love &lt;a href=&#34;https://protonmail.com/&#34;&gt;ProtonMail&lt;/a&gt;; we like it so much that it got the honor of being a topic in our &lt;a href=&#34;https://www.unusually.pink/podcast/episode-1-game-of-thrones-and-protonmail&#34;&gt;very first episode&lt;/a&gt;! The biggest draws for paying for a ProtonMail Plus account are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Support for a custom domain (e.g. @unusually.pink)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5 GB of storage (up from 500 MB)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5 email aliases&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The ability to send up to 1000 messages per day (up from 150)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some of those are really nice perks! I have 3 different email aliases, one of which comes from a custom domain I added to the account. I don’t &lt;em&gt;personally&lt;/em&gt; use a lot of storage… for now. I do my best to keep my inbox empty. Note that I said “inbox”, though, rather than “mailbox.” I do have an archive folder where I throw messages that contain something important that might be useful later… though I’ve been trying my best to stop storing things like that in email and storing them in &lt;a href=&#34;https://www.unusually.pink/podcast/episode-8-playlists-and-privacy&#34;&gt;1Password&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;While I have plenty of real-estate left in my inbox, last week ProtonMail made it even more difficult for me to start bumping my head against the storage limit; they gave me additional storage for free! In an email with a subject of “We&amp;rsquo;re giving you extra storage to say thanks”, they described how they’ve added 10 &lt;strong&gt;million&lt;/strong&gt; users to the service over the past year, and how they’re working on a redesigned ProtonMail interface while also continuing to flesh out ProtonCalendar and ProtonDrive, none of which would have been possible without the support of paid accounts.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As a way to say thanks for your early support, we are giving everyone with an existing paid plan 5GB of extra storage for free. […] Because the bonus is to thank our longtime supporters, it only applies to users who upgraded before Nov. 10, 2019. This bonus storage upgrade is permanent as long as you continue your subscription with us.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To me, this is super awesome. I like being able to support a service like ProtonMail, a service that I’ve come to rely on for my personal email. I’m also eagerly awaiting the arrival of ProtonCalendar and (especially) ProtonDrive, so it’s nice to see that my payments are helping to facilitate the creation of those services, too. While I don’t particularly need the 5 GB of storage right now, it could certainly come in handy later on down the road, especially considering I have no plans on letting my service lapse. I checked out the billing on my account and verified that it was added as a line item to my subscription for a $0 charge.&lt;/p&gt;
&lt;p&gt;Also, if you happen to be looking forward to the redesign of ProtonMail, I recently realized you can check it out over at: &lt;a href=&#34;https://beta.protonmail.com&#34;&gt;beta.protonmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The new interface is pretty slick, in my opinion, and I’m excited to see what other great things the future has in store for the service. Keep on encrypting, and stay pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Impressions: Google Pixel 3a XL</title>
      <link>https://hugo.unusually.pink/unusually-pink-impressions-google-pixel-3a-xl/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-impressions-google-pixel-3a-xl/</guid>
      <description>If you’re a dedicated fan (or just, like, really bored all the time) you may recall that I talked about the upcoming release of the Google Pixel 3a and 3a XL back in the spring. I eventually decided to pull the trigger on a Pixel 3a XL in the summer during a 4th of July sale, but I’ve been hesitant to do any sort of write-up with my thoughts on the device just because they’ve been changing over time.</description>
      <content>&lt;p&gt;If you’re a dedicated fan (or just, like, &lt;strong&gt;really&lt;/strong&gt; bored all the time) you may recall that I talked about the &lt;a href=&#34;https://www.unusually.pink/podcast/episode-7-the-salt-of-thrones&#34;&gt;upcoming release of the Google Pixel 3a and 3a XL back in the spring&lt;/a&gt;. I eventually decided to pull the trigger on a Pixel 3a XL in the summer during a 4th of July sale, but I’ve been hesitant to do any sort of write-up with my thoughts on the device just because they’ve been changing over time. What were initially extremely positive thoughts have become decidedly less so over the past 4 months of daily use.&lt;/p&gt;
&lt;p&gt;If you’ve been living under a rock or simply don’t follow technology news — in which case I have &lt;strong&gt;no&lt;/strong&gt; idea why you’re reading this post, but thanks! — the Pixel line-up is comprised of devices sanctioned by Google and produced at their direction (by &lt;a href=&#34;https://en.wikipedia.org/wiki/Foxconn_suicides&#34;&gt;Foxconn&lt;/a&gt;, but let’s not think about that too much) that represent a “pure” Android experience without OEM skins on the operating system and bloatware cluttering your application list. They’re a chance for Google to show off what’s possible with their mobile operating system, something the fact that Pixel sales are historically terrible compared to flagships like those produced by Apple and Samsung doesn’t deter them from. I’ve never had a Pixel phone before, though I had several &lt;a href=&#34;https://en.wikipedia.org/wiki/Google_Nexus&#34;&gt;Nexus devices&lt;/a&gt; which is what the Pixel line-up replaced. Brandi has also been a staunch Pixel supporter for the past few years, so it seemed worth a shot.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsGooglePixel3aXL_pixel_front.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;the-good&#34;&gt;The Good&lt;/h1&gt;
&lt;p&gt;Let’s start on a positive note and talk about what’s good with the Pixel 3a XL. I don’t know if this is something that Google should be happy about or not, but by far the biggest selling point is the price. I managed to snag mine for just north of $300 during a 4th of July sale. That’s $300 for a device that I &lt;strong&gt;own&lt;/strong&gt;. It’s not a lease, it’s not tied to any sort of agreement with the carrier. I’m not paying a monthly fee on my bill. That’s insane in a world where a smartphone regularly costs more than a decent laptop… by a wide margin. If &lt;em&gt;nothing&lt;/em&gt; else, it’s important to frame everything within the perspective of that price.&lt;/p&gt;
&lt;p&gt;The other selling point for any Pixel device is that it gets love straight from Google. New version of Android? A Pixel is going to get it before anything else, likely 6 months or more before anything from Samsung. Similarly, Google releases a monthly security patch for Pixel devices. In the event that a security vulnerability is found I don’t have to worry about waiting months on end before a fix is released.&lt;/p&gt;
&lt;p&gt;The last of a dying breed, the Pixel 3a XL also features an endangered headphone jack. I was honestly &lt;em&gt;super&lt;/em&gt; stoked about this when I got the phone, though I’ve found myself less and less enamored with it recently if I’m being completely honest. It’s not that I’m against having a headphone jack; I just feel like I overestimated the usefulness of it. I just don’t &lt;em&gt;need&lt;/em&gt; it that frequently. If you live and die by your 3.5 mm headphones, though, this would be a huge boon for you.&lt;/p&gt;
&lt;p&gt;The device packs a 3700 mAh battery that provides crazy amounts of power. I use my device pretty heavily, and it’s not at all uncommon for me to end the day with 60% or more in the tank. The Pixel does a decent job of power management… kind of. It isn’t a miracle, and there are some real trade-offs that get so much performance out of the battery. More on that in some of the more negative sections.&lt;/p&gt;
&lt;p&gt;I feel obligated to mention it here, but allegedly the camera is also insanely good. It apparently has the exact same camera as the regular Pixel 3; that was the one area that didn’t get downgraded for the “a” lineup. I personally couldn’t care less about the camera in my device and this wasn’t a selling point for me in the slightest, but it’s worth knowing if you’re really into photography but don’t want a real camera.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsGooglePixel3aXL_pixel_back.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;the-okay&#34;&gt;The Okay&lt;/h1&gt;
&lt;p&gt;While they kept the camera up to par with the full-fledged Pixel 3, most other specs on the device took a bit of a hit to reach the price-point. You’re stuck with a Snapdragon 670 processor, 4 GB of RAM, and 64 GB of storage. That being said, those specs &lt;strong&gt;aren’t&lt;/strong&gt; horrible, especially for what you pay. I don’t play any games on my phone at the moment so the Snapdragon 670 is &lt;em&gt;typically&lt;/em&gt; more than enough for navigation, Spotify, and some YouTube videos. Likewise, I’m sitting at 25 GB of storage used on the device so 64 GB is plenty for me. While the specs are laughable compared to a flagship, this device most certainly &lt;strong&gt;isn’t&lt;/strong&gt; a flagship. If you want to play PUBG on the highest settings you&amp;rsquo;ll likely want to consider something else; if you want a phone to just do phone junk then this will likely fit the bill. Just expect some occasional slowdown, stuttering, and general jankiness when you happen to have a lot of apps open, especially when using the application switcher.&lt;/p&gt;
&lt;p&gt;Similarly, the design is just okay. The back actually keeps the same cool, two-tone frosted finish as the regular Pixel devices, even though they swapped from glass to plastic to keep the cost down. That being said, if you’re like me then your clumsy ass is putting a case on, and you never look at that anyway. The front of the device has some pretty righteous bezels; they don’t particularly bother me, though I know some people who are insanely triggered by them. If you’re anti-notch then at least you don’t have to deal with one of those.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsGooglePixel3aXL_pixel_cover.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;the-bad&#34;&gt;The Bad&lt;/h1&gt;
&lt;p&gt;Now to the fun part. This list has been steadily growing over the last few months. In order from least problematic to most problematic, we’ll start with the fingerprint reader. It’s there, which is a good thing considering &lt;a href=&#34;https://www.androidcentral.com/does-pixel-4-have-fingerprint-sensor&#34;&gt;Google dropped it entirely from the Pixel 4&lt;/a&gt;. While that move has been receiving a lot of backlash, Google may have just been trying to do everyone a favor if the reader in the Pixel 4 would’ve been as terrible as the one in the Pixel 3a XL. It generally works fine… right up until it doesn’t. While there are all sorts of random “Get bent and type your PIN” moments, the consistent issue is that the fingerprint reader will &lt;em&gt;not&lt;/em&gt; trigger for a few seconds after the display has turned off. It happens to me with irritating regularity; I get distracted while doing something with my phone and my display turns off after the timeout period I have configured. I’m already holding the phone in my hand with my finger &lt;em&gt;right next&lt;/em&gt; to the reader. So I put my finger on it to wake up the screen, which works even if the device isn’t locked. Only… nothing happens. Tick tock, tick tock. 5 seconds go by and &lt;strong&gt;now&lt;/strong&gt; the fingerprint reader works. Hilariously, it’s actually faster in this situation to tap the power button to force a lock and &lt;em&gt;then&lt;/em&gt; hit the fingerprint reader. Stellar.&lt;/p&gt;
&lt;p&gt;Even worse than the fingerprint reader, though, is the display. It’s a fairly “whatever” 6.0” 1080 x 2160 resolution; it’s not bad but it’s not standout regarding how it &lt;em&gt;looks&lt;/em&gt;. Even though the automatic brightness adjustment is a little “Seriously?” sometimes, it does a good job of rendering text and playing video. Where it does a heinous job is registering that I’m touching it. Swiping notifications away? They’re just as likely to open as if I tapped them. Trying to swipe up on the lock screen to reveal the PIN input because the fingerprint reader is trash? Good luck pulling that off. Swiping to the next page of whatever you’re reading in Google Play Books? Nah, you just highlighted the word “bag” because you’re clearly an idiot and wanted a definition of it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsGooglePixel3aXL_Screenshot_20191112-203837-512x1024.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I already know what most people are likely thinking; &lt;strong&gt;I’m&lt;/strong&gt; the problem and not the device. As someone who has been working in IT for the past 14 years I would be inclined to agree; my first assumption is that I’m the problem. In this scenario, though, I’ve been operating the same way that I have for the past 9 years that I’ve owned a touchscreen phone. If it worked for just shy of a decade before running into issues with this one device, I’m going to have to throw some shade at the device.&lt;/p&gt;
&lt;p&gt;Easily the most glaring flaw, though… is the software from Google. I know, I know… It’s the bleeding edge of Android! I’m getting monthly patches! What more could I want? I’d like updates that don’t make me feel as though I’m playing Russian roulette each time I install them. I can never feel confident I’m not going to run into new bugs. Since July I’ve had problems where the keyboard simply won’t render, where Google Assistant stopped working (which makes Android Auto pretty useless), and where hitting the back button too quickly would result in random apps from the app switcher activating. In fact, I still experience the latter two as of the time of this writing; they haven’t been fixed yet. Even better, &lt;a href=&#34;https://9to5google.com/2019/11/11/android-auto-assistant-replies-issue/&#34;&gt;the Android Auto issues actually seem to be getting worse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsGooglePixel3aXL_archer.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;On top of buggy updates, Pixel devices are plagued with by design “features” that make them infuriating to use. Remember how I get amazing battery life? That’s because the device aggressively closes any app it feels like for any reason. &lt;a href=&#34;https://www.reddit.com/r/GooglePixel/comments/9q7aq3/pixel_3_xl_aggressively_closing_apps/&#34;&gt;It’s a documented thing&lt;/a&gt;. It &lt;a href=&#34;https://www.xda-developers.com/phone-software-killing-apps-background/&#34;&gt;continued happening on the Pixel 3 even after an update was supposed to fix it&lt;/a&gt;, and it’s still happening on the 3a XL. I’m all for closing apps that aren’t being used, but it often feels like the device is actively fighting against you. For example, I’ll frequently open Spotify on my phone, pick some music to shuffle, pause the music, and slip the device into my pocket. I’ll then walk outside, hop in my car, and swap the audio input over to Bluetooth. In the roughly 2 minutes it took me to go outside, lock the door, walk downstairs, unlock the car, start it, and switch my audio, Spotify will frequently be closed and nothing will play when Bluetooth becomes the car’s audio source. I then have to fish my phone out of my pocket, and when I unlock it, Spotify (which was still the open app) will refresh itself and start playing. How the hell is this helping me? Even worse is that I’ve gone into the app settings within Android and told the OS that Spotify’s background usage can’t be restricted. Clearly that setting doesn’t actually work, though, because Android continues to close apps with that flagged regardless.&lt;/p&gt;
&lt;p&gt;Software this bad just makes the device feel frustrating to use; it’s a chore rather than being seamless. While I like the idea of what Google was going for with the Pixel 3a and 3a XL, I don’t think they succeeded. That’s unfortunate because I think it was close, and some software improvements to fix the fingerprint reader and to just generally make Android’s handling of background apps not a complete dumpster fire could’ve done wonders for it. Given that the phone is about 6 months old, though, if Google hasn’t fixed the problems by now then I don’t think they’re going to. That tells me this phone is one to avoid.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Chromebooks, VPNs, and You</title>
      <link>https://hugo.unusually.pink/chromebooks-vpns-and-you/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/chromebooks-vpns-and-you/</guid>
      <description>Do you trust your Internet service provider? If you answer that question with a resounding “No!”, then you’re among friends here. While Internet connectivity is an essential need for many of us, there are a plethora of reasons to be wary of the company providing that connectivity to you. Especially in the United States, the recent repeal of net neutrality rules and erosion of privacy mean you may want to obscure exactly what you’re doing from your Internet provider, even if that activity is completely legal and innocuous.</description>
      <content>&lt;p&gt;Do you trust your Internet service provider? If you answer that question with a resounding “No!”, then you’re among friends here. While Internet connectivity is an essential need for many of us, there are a plethora of reasons to be wary of the company providing that connectivity to you. Especially in the United States, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Net_neutrality_in_the_United_States#Rollback_of_Obama-era_rules&#34;&gt;recent repeal of net neutrality rules&lt;/a&gt; and &lt;a href=&#34;https://www.eff.org/deeplinks/2017/04/heres-how-protect-your-privacy-your-internet-service-provider&#34;&gt;erosion of privacy&lt;/a&gt; mean you may want to obscure exactly what you’re doing from your Internet provider, even if that activity is completely legal and innocuous. Just because I’m not doing anything illegal online doesn’t mean I want to allow my ISP to gather data on what I’m doing in order to sell it to advertisers; in my opinion they make plenty of money off of the monthly fee I pay them for Internet access.&lt;/p&gt;
&lt;p&gt;This is where a VPN (virtual private network) can come in handy, as we discussed in &lt;a href=&#34;https://www.unusually.pink/podcast/episode-8-playlists-and-privacy&#34;&gt;Episode 8&lt;/a&gt;. VPNs are historically most common in the corporate world. They allow employees to create a secure tunnel between wherever they are and their internal company network in order to access resources that aren’t available to the outside world. In the consumer space, though, they’ve been gaining popularity as privacy-conscious consumers look for way to protect themselves from things like public WiFi and, increasingly, ISP data collection.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: This post is&lt;/em&gt; &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;going to cover the potential risks for a VPN or how to choose one. We recommend you check out guidance from sources like the&lt;/em&gt; &lt;a href=&#34;https://ssd.eff.org/en/module/choosing-vpn-thats-right-you&#34;&gt;&lt;em&gt;EFF&lt;/em&gt;&lt;/a&gt; &lt;em&gt;for that. Brandi and John personally recommend either&lt;/em&gt; &lt;a href=&#34;https://www.privateinternetaccess.com&#34;&gt;&lt;em&gt;Private Internet Access&lt;/em&gt;&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a href=&#34;https://www.tunnelbear.com&#34;&gt;&lt;em&gt;TunnelBear&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Check out&lt;/em&gt; &lt;a href=&#34;https://www.unusually.pink/podcast/episode-8-playlists-and-privacy&#34;&gt;&lt;em&gt;Episode 8&lt;/em&gt;&lt;/a&gt; &lt;em&gt;for more details!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As we’ve discussed in a few podcast episodes, I happen to be a fan of Chromebooks as my personal laptop. While I have a beefy desktop to use as a gaming computer or when I need to do some heavy lifting, I like having a Chromebook as a cheap, fast, and easy computer for things like browsing Reddit, watching YouTube videos, and typing up blog posts. The &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-impressions-acer-chromebook-315&#34;&gt;addition of a Linux VM&lt;/a&gt; means I can even do some programming. VPNs get a little wonky on a Chromebook, though. Most VPNs offer applications for Windows, macOS, Android, and iOS. Many services will also support configurations with the &lt;a href=&#34;https://openvpn.net&#34;&gt;OpenVPN Connect&lt;/a&gt; client in case you want to use something open source and/or are running some flavor of Linux. For example, Brandi subscribes to &lt;a href=&#34;https://www.privateinternetaccess.com&#34;&gt;Private Internet Access&lt;/a&gt;. On her MacBook, she simply runs the PIA application, selects the endpoint she’d like to direct her traffic to, and is done.&lt;/p&gt;
&lt;p&gt;The waters get murkier in Chromebook land since you don’t install traditional applications on them. You also have to consider the scope of where you’re working on a Chromebook and what it is you’re looking to protect. Are you just concerned about securing the data flowing through the Chrome browser? Do you need to cover system level networking? Are you doing anything online via your Linux VM that you want to secure? These all play a role, and hopefully this post will enlighten you as to the reach of the options at your disposal.&lt;/p&gt;
&lt;p&gt;The first step to testing the scope of VPN clients on Chromebooks is to be able to figure out what your external IP is since that can tell you where the outside world sees your connection coming from, be it your home network or a VPN provider’s. I personally like &lt;a href=&#34;http://icanhazip.com/&#34;&gt;I Can Haz IP&lt;/a&gt; for that. Simply going to the site will give you a web page with your public IP address. Here we can see the result I get from my Chromebook with no VPN solutions at play.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_browser_none.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The really cool part about this service is that if you bounce an HTTP request off of it from &lt;a href=&#34;https://curl.haxx.se&#34;&gt;curl&lt;/a&gt;, it’ll reply with your public IP address. This easily allows testing of VPN providers from a command line. If you don’t have curl in your Linux VM, you can easily install it via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt install curl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we can see what happens when I curl against I Can Haz IP from my Linux VM on my Chromebook. Note that it matches the public IP I get from my browser.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_terminal_none.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you have an older Chromebook that doesn’t feature Google Play support, there are several VPN providers (including both &lt;a href=&#34;https://chrome.google.com/webstore/detail/private-internet-access/jplnlifepflhkbkgonidnobkakhmpnmh&#34;&gt;PIA&lt;/a&gt; and &lt;a href=&#34;https://chrome.google.com/webstore/detail/tunnelbear-vpn/omdakjcmkglenbhjadbccaookpfjihpa&#34;&gt;TunnelBear&lt;/a&gt;) that offer Chrome extensions. These can be great for quickly proxying your traffic in a pinch. After flipping the switch on the TunnelBear extension, for example, I can see that the endpoint I’m seen as coming from via my browser has changed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_browser_extension.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It’s important to keep in mind, though, that the VPN is operating at the &lt;em&gt;application&lt;/em&gt; level rather than at the system level. Only traffic from my browser is going through the VPN. As a result, running curl again has no change; my Linux VM’s traffic is still going straight out through my ISP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_terminal_extension.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is what we refer to as a bummer. If you happen to have a Chromebook with Google Play support, though, there’s a better solution available. &lt;a href=&#34;https://www.aboutchromebooks.com/news/chrome-os-75-android-vpn-support-linux-project-crostini/&#34;&gt;Updates to Chrome OS 75 in the spring of this year&lt;/a&gt; resulted in better integration between Android VPNs and Chrome OS as a whole. Installing an Android VPN client from the Play Store and connecting it will result in the WiFi icon in Chrome OS changing to display a tiny key icon, just like you’d see in the notification area of Android. After making this connection, I can verify that my browser shows my connection as coming from my VPN provider.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_browser_android.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Even better, though, checking from my Linux VM now shows the same thing; the VM’s traffic is now also going through my VPN provider instead of to the prying eyes of my ISP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_terminal_android.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Suffice to say, this is &lt;em&gt;much&lt;/em&gt; better. While the Chrome extensions are passable for older Chromebooks without Google Play access, the corresponding Android applications will offer far superior coverage if they’re an option on your particular device. Not that you shouldn’t have already been doing this anyway, but this should be an incentive to avoid purchasing the &lt;em&gt;insanely&lt;/em&gt; cheap Chromebooks that so frequently go on sale; I’d recommend making sure you get a device that at least has Google Play and Linux support. Keep encrypting that traffic, and stay pink!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: In my testing, the Linux VM in Chrome OS would often struggle to reconnect properly after an Android VPN application was connected and/or disconnected. For the best results, I’d recommend launching the VM&lt;/em&gt; &lt;strong&gt;&lt;em&gt;after&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;connecting your VPN. If you forget and connect your VPN after the fact, shut down your VM and restart it.&lt;/em&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Impressions: Acer Chromebook 315</title>
      <link>https://hugo.unusually.pink/unusually-pink-impressions-acer-chromebook-315/</link>
      <pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-impressions-acer-chromebook-315/</guid>
      <description>As we’ve mentioned in a few podcast episodes, I happen to be a fan of Chromebooks. I have a hulking desktop that I use for things like gaming, programming, and photo editing. That same desktop is also extremely loud and generates enough heat to warm my apartment, whether it needs to be warmed or not. As a result I tend to like having a cheap Chromebook handy when I just need to take care of some email, catch up on my RSS feeds, waste time look at memes on Reddit, or writing posts for our podcast.</description>
      <content>&lt;p&gt;As we’ve mentioned in a few podcast episodes, I happen to be a fan of Chromebooks. I have a hulking desktop that I use for things like gaming, programming, and photo editing. That same desktop is also extremely loud and generates enough heat to warm my apartment, whether it needs to be warmed or not. As a result I tend to like having a cheap Chromebook handy when I just need to take care of some email, catch up on my RSS feeds, waste time look at memes on Reddit, or writing posts for our podcast. I’ve had a handful of Chromebooks over the years, and I’ve always been happy with them given that, for me at least, they serve as supplementary for my personal computing needs. I feel like I’d struggle more than a little if a Chromebook was my only computer.&lt;/p&gt;
&lt;p&gt;That being said, my previous Chromebook, a Toshiba Chromebook 2, was getting fairly long in the tooth, and I was on the hunt for a new one to replace it. Chromebooks had been undergoing improvements since I purchased the Chromebook 2, but while the device tended to make the list of ones which were allegedly slated to gain access to the Google Play Store and Linux apps, that never seemed to manifest. I had been eyeing the Acer Chromebook 315 and the HP Chromebook 14, as these were the first two Chrome OS devices to feature AMD processors. That seemed pretty slick to me as I’ve long had AMD hardware over Intel and Nvidia; getting &lt;strong&gt;nearly&lt;/strong&gt; the same performance for significantly less money always seemed like a win for me. Ultimately, I pulled the trigger on the Chromebook 315 when Brandi let me know that it was on sale for around $200 during Prime Day, down from the normal $279. $279 itself still isn’t much of a laptop, but again… it’s a Chromebook. I also &lt;em&gt;don’t&lt;/em&gt; actually have Amazon Prime, so Brandi did me another solid by ordering it for me, and I just paid her back. She’s awesome, isn’t she?&lt;/p&gt;
&lt;p&gt;At any rate, this &lt;em&gt;isn’t&lt;/em&gt; titled as a review because I hate the idea of trying to numerically score things. Instead, I figured I’d just write up some thoughts on the device now that I’ve been using it for about a month. I figure I’ll make a similar post for my (relatively) new Pixel 3a XL sometime in the near future, too.&lt;/p&gt;
&lt;h1 id=&#34;hardware&#34;&gt;Hardware&lt;/h1&gt;
&lt;p&gt;Aside from the AMD A4 processor, the Chromebook 315 is pretty standard fare for a mid-range Chromebook. 4 GB of RAM and 32 GB of solid state storage get you up and running. The A4 processor seems to do a pretty solid job of handing most of what I’m using a Chromebook for, which is running a handful of tabs to browse the web, writing code in a text editor, or scrolling through endless memes and videos on Reddit. Even with around 10 tabs and a few PWAs running (the Spotify one kicks ass and takes names), I haven’t noticed any real slowdown or issue. The storage space &lt;em&gt;could&lt;/em&gt; potentially be a sore spot, though, and I’ll discuss why in a little more detail when we get to the software section.&lt;/p&gt;
&lt;h1 id=&#34;build&#34;&gt;Build&lt;/h1&gt;
&lt;p&gt;The device itself is all plastic, as you’d expect for a laptop that’s only $279 dollars on a bad day. It at least feels solid, though, and isn’t creaky. As a 15” laptop, it weighs in at just under 4 lbs., which seems neither particularly bad or impressive. The hinge for the lid is &lt;em&gt;extremely&lt;/em&gt; stiff and almost uncomfortable to pry open from a completely closed position; it would be damn-near impossible to do with a single hand. But the trade-off to that is the screen doesn’t wobble at all, even when quickly typing while the device wrests on an uneven surface like your lap.&lt;/p&gt;
&lt;p&gt;The lid features a textured pattern, which concerned me a little bit since I wasn’t able to find any detailed photos or videos of it. I had been worried that, like the Toshiba Chromebook 2, the texture would actually keep me from applying stickers to it. Fortunately, that wasn’t the case at all. My sticker game remains &lt;em&gt;firmly&lt;/em&gt; on point. Also, most of my stickers came from Brandi so don’t give me credit for my taste. Did I mention she’s awesome?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsAcerChromebook315_cb_closed.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;battery&#34;&gt;Battery&lt;/h1&gt;
&lt;p&gt;The battery is rated for 10 hours. To be honest, I’ve left the device sit for days and days at a time without touching it, so I can’t accurately judge the length. I can say that I’ve only had to charge it a handful of times since I got it, though. Running Android applications does seem to to drain the battery at a faster clip, though the screen is the biggest culprit as you’re all but required to have the brightness cranked up pretty high under all circumstances.&lt;/p&gt;
&lt;h1 id=&#34;display&#34;&gt;Display&lt;/h1&gt;
&lt;p&gt;Why does the brightness need to be turned up all the time? Because the display is absolute &lt;strong&gt;garbage&lt;/strong&gt;. It may very well be the worst display I’ve ever used on a laptop in my entire life, and that’s no exaggeration from someone who has been using laptops for over a decade. You may be tempted to look at the baseline model and assume that’s because it’s running at 1366 x 768. It’s true that I had been hoping to get the 1920 x 1080 model, but that variant wasn’t on sale during Prime Day and at the time was $70 more. Paying $340 instead of $200 for a laptop just to get a higher resolution screen didn’t seem particularly worthwhile to me, especially when I already had to adjust the text scaling on my 13” 1080p Chromebook 2 so that my myopic ass could actually &lt;em&gt;read&lt;/em&gt; anything without my face two inches from the screen. All-in-all, I wasn’t that bummed about the resolution.&lt;/p&gt;
&lt;p&gt;The problem is just that the display is horribly washed out. It’s literally incapable of making a color that isn’t pastel. Gray text on an off-white background on a webpage is all but impossible to read with the brightness below 75%. Even when watching videos, the colors are all a lighter hue than you’d expect. While the hardware will &lt;em&gt;easily&lt;/em&gt; push the pixels on a display of this low resolution, I’d recommend against this for a device aimed at video. At least the viewing angles are pretty good?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsAcerChromebook315_cb_open.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;speakers&#34;&gt;Speakers&lt;/h1&gt;
&lt;p&gt;The speakers are fine. They aren’t great, but being mounted facing up does make a massive difference when compared to other devices I’ve used where the speakers are pointing down underneath the device. I’ve been able to easily listen to Spotify on it without being irritated with the sound or any distortion or vibration.&lt;/p&gt;
&lt;h1 id=&#34;ports-and-connectivity&#34;&gt;Ports and Connectivity&lt;/h1&gt;
&lt;p&gt;Awesome enough, the device features two USB C ports and two USB A ports. Having a USB C port on either side of the device is pretty awesome. One of them will commonly be used for charging; it was nice to see that as the charging solution rather than yet another proprietary connector.&lt;/p&gt;
&lt;h1 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h1&gt;
&lt;p&gt;The keyboard is middling at best. I know, I know… for a $279 dollar device, are you expecting a good keyboard? Well… kind of? I’ve owned an Acer CB3-131 before, a device which retailed for $179 and which was made by the exact same company. The keyboard on it was actually significantly better than the one on the CB315. The spacing between the CB315’s keys are good, but typing on it just feels &lt;em&gt;bad&lt;/em&gt;. The keys are extremely squishy; it’s very difficult to tell if you’ve actually pressed a key adequately or not while typing quickly, leaving me with a not-insignificant number of missed characters when I’m hammering out these posts. Admittedly, part of that stems from the fact that I’m used to spending most of my time typing on a &lt;a href=&#34;https://www.unusually.pink/podcast/episode-12-crazy-about-keyboards&#34;&gt;mechanical keyboard&lt;/a&gt;, but I still expected something at least a tiny bit better. That being said, it works well enough for quick tweets and Reddit posts. For longer posts like this, though, I’m more likely to dock it in my work-from-home setup and type on a &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-peripherals-razer-quartz-2019&#34;&gt;Razer Blackwidow Tournament Edition Quartz&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;touchpad&#34;&gt;Touchpad&lt;/h1&gt;
&lt;p&gt;It’s a touchpad. It works. It’s exactly what you expect; it’s simultaneously:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The same as every other Chromebook trackpad&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Better than every PC trackpad&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Worse than every MacBook trackpad&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;software&#34;&gt;Software&lt;/h1&gt;
&lt;p&gt;This is where things get interesting for me. I could very easily find from doing searches online prior to purchasing the device that it had Google Play support. This means you can access the Google Play Store just like you would from an Android phone and install any apps you may happen to want. They might look a little janky (because what phone display has a maximum vertical resolution of 768 pixels in 2019?) but they work and they tend to run pretty smoothly. I even tried out a couple of games and found them pretty pleasant. What I was &lt;strong&gt;really&lt;/strong&gt; curious about, though, were Linux apps. On supported devices, you can essentially install a Linux VM and get access to a shell with a full Linux system running underneath it. For the most part, compatible devices depended upon having the appropriate processor architecture, so I wasn’t sure if an AMD processor would throw a wrench into things. Mercifully, that wasn’t the case. I was able to just search the settings for “Linux”, toggle it to on, wait a minute for a download, and then I was up an running.&lt;/p&gt;
&lt;p&gt;As you can see here, the VM you get is (at the time of this writing) running Debian 9. You can treat it basically like any other Debian install, including installing the packages you need from the repository. Is the repo missing something you really need? Just download and run the .deb file. Linux aficionados like myself will immediately feel at home.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsAcerChromebook315_Screenshot2019-08-29at83157PM.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I was able to quickly configure Vim and Python3 along with using the lovely &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;rustup toolchain&lt;/a&gt; to install the latest version of Rust. All of them work perfectly. This was huge for me because it means I can do some scripting and development on my Chromebook directly. This without having to use which I’d previously do, which was either sit at my loud, furnace of a desktop or use my Chromebook to SSH into a development server.&lt;/p&gt;
&lt;p&gt;The one downside to all of this is that 32 GB hard drive. Getting Debian installed took about 2 GB on its own. When you start adding in some Android apps, copying over a few ebooks, and of course take into account Chrome OS itself, I’m looking at 16 GB of remaining space. 50% isn’t a huge issue for me right now, but if I start needing to add a lot of additional Linux packages or Android apps then things could get tight rather quickly. I may have to investigate swapping out the storage in the future if I start to bump my head.&lt;/p&gt;
&lt;h1 id=&#34;wrap-up&#34;&gt;Wrap-up&lt;/h1&gt;
&lt;p&gt;On the whole, I’m pretty happy with the CB315, especially considering that I paid around 70% of the normal price for it. If I had paid the full price I think I’d still be happy but I’d be slightly &lt;em&gt;more&lt;/em&gt; disappointed with the display. It really is atrocious. Chrome OS has come a long way since when I first started using it in 2013, and as a Linux fan it now has so much more value than it did previously. I still don’t think I’d want to roll with a Chromebook as my only personal computer right now, but I can certainly do more with it now than I could before.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Fixing Let&#39;s Encrypt Certificates After You Delete Them Like An Idiot</title>
      <link>https://hugo.unusually.pink/fixing-lets-encrypt-certificates-after-you-delete-them-like-an-idiot/</link>
      <pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/fixing-lets-encrypt-certificates-after-you-delete-them-like-an-idiot/</guid>
      <description>In Episode 11, I had discussed how I run a couple of my websites on a Linux server running Nginx as the web server and encrypting connections to them via Let’s Encrypt certificates. Shortly after recording that episode, though, I realized I had messed up my certificate configuration via certbot. If you don’t recall the episode, I had taken my web server which was only running laifu.moe and added awk.ninja to it so that I had both sites running on the same server.</description>
      <content>&lt;p&gt;In &lt;a href=&#34;https://www.unusually.pink/podcast/episode-11-attach-all-the-storage&#34;&gt;Episode 11&lt;/a&gt;, I had discussed how I run a couple of my websites on a Linux server running &lt;a href=&#34;https://www.nginx.com/&#34;&gt;Nginx&lt;/a&gt; as the web server and encrypting connections to them via &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let’s Encrypt&lt;/a&gt; certificates. Shortly after recording that episode, though, I realized I had messed up my certificate configuration via &lt;a href=&#34;https://certbot.eff.org/&#34;&gt;certbot&lt;/a&gt;. If you don’t recall the episode, I had taken my web server which was only running &lt;a href=&#34;https://laifu.moe&#34;&gt;laifu.moe&lt;/a&gt; and added &lt;a href=&#34;https://awk.ninja&#34;&gt;awk.ninja&lt;/a&gt; to it so that I had both sites running on the same server. When I added awk.ninja, I had to re-run certbot and get a certificate for it along with the certificate I had for laifu.moe. That’s where I messed up; I got tipped off when I received the following email from Let’s Encrypt letting me know that my certificate for laifu.moe was about to expire.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Your certificate (or certificates) for the names listed below will expire in 10 days (on 07 Jul 19 12:52 +0000). Please make sure to renew your certificate before then, or visitors to your website will encounter errors.&lt;/p&gt;
&lt;p&gt;We recommend renewing certificates automatically when they have a third of their&lt;br&gt;
total lifetime left. For Let’s Encrypt’s current 90-day certificates, that means&lt;br&gt;
renewing 30 days before expiration. See&lt;br&gt;
&lt;a href=&#34;https://letsencrypt.org/docs/integration-guide/&#34;&gt;https://letsencrypt.org/docs/integration-guide/&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;laifu.moe&lt;br&gt;
&lt;a href=&#34;http://www.laifu.moe&#34;&gt;www.laifu.moe&lt;/a&gt;”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That seemed odd to me since I knew I had a &lt;strong&gt;cron&lt;/strong&gt; job running to update the certificates. I checked the expiration for the certificate on laifu.moe and saw that it had nearly two months left on it. I checked the certificate applied to awk.ninja and saw the same thing. EXACTLY the same thing in fact. In double-checking the certificate on laifu.moe, I realized that the Common Name was for awk.ninja. I was using the awk.ninja certificate for &lt;em&gt;both&lt;/em&gt; of my sites. Oops. What happened was that when I added awk.ninja and re-ran &lt;strong&gt;certbot&lt;/strong&gt;, I got the following:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/FixingLetsEncryptCertificatesAfterYouDeleteThemLikeAnIdiot_certbot.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;My thought at the time was that I needed to select ALL of the sites. In reality, this overwrote the configuration I already had on laifu.moe and applied the awk.ninja certificate to both sites. This is where I decided to be really stupid. I decided that I would delete the existing certificates, re-run &lt;strong&gt;certbot&lt;/strong&gt; twice (one for laifu.moe and once for awk.ninja), and then be done. I started off by deleting the awk.ninja certificate that was applied to both sites:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo certbot delete --cert-name awk.ninja
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I did the same to delete the laifu.moe certificate. Then I tried to do a vanilla run of &lt;strong&gt;certbot&lt;/strong&gt; to get the menu in my screenshot above and individually configure each of my two sites. Instead of getting that menu, though, I received an error message that my sites were pointing to certificates that didn’t exist. &lt;strong&gt;certbot&lt;/strong&gt; then exited without giving me any further options. The problem is that my configuration files below still referenced the certificates that I just nuked. Oops.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/etc/nginx/sites-available/awk.ninja
/etc/nginx/sites-available/laifu.moe
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After thinking about it for a few seconds, it made sense; &lt;strong&gt;certbot&lt;/strong&gt; can’t know what’s going on and is expecting me to do some cleanup on the mess I made instead of making assumptions about whether or not I should still have certificates. To keep my life simple, I decided to go back to a clean slate on my &lt;strong&gt;sites-available&lt;/strong&gt; configurations since I knew that I could get &lt;strong&gt;certbot&lt;/strong&gt; to redo the configuration again as long as I could get it to successfully run. As a result, I just set the configurations for both laifu.moe and awk.ninja back to a super vanilla setup. Just &lt;strong&gt;%s/laifu.moe/awk.ninja/g&lt;/strong&gt; on the file below for what I configured on awk.ninja.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
        listen 80;
        listen [::]:80;

        root /var/www/laifu.moe/html;
        index index.html index.htm index.nginx-debian.html;

        server_name laifu.moe www.laifu.moe;

        location / {
                try_files $uri $uri/ =404;
        }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once I had that done, I restarted nginx just to make sure it was working and I could hit port 80 for both sites.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With that working, I was able to re-run &lt;strong&gt;certbot&lt;/strong&gt; and finally get the menu from my initial screenshot. I first configured a certificate for awk.ninja and its www variant. Once that was done, I ran &lt;strong&gt;certbot&lt;/strong&gt; one more time and walked through getting a certificate for laifu.moe and its www-variant. In both instances, I opted to have &lt;strong&gt;certbot&lt;/strong&gt; reconfigure the files in &lt;strong&gt;sites-available&lt;/strong&gt; to redirect all HTTP traffic for HTTPS. I restarted Nginx one more time and &lt;em&gt;finally&lt;/em&gt; I had everything configured the way I wanted with each site using its &lt;em&gt;own&lt;/em&gt; certificate.&lt;/p&gt;
&lt;p&gt;The moral of the story is to actually troubleshoot the problem instead of just starting off by deleting shit from your server. Also, try staying pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Boredom Movie Binge</title>
      <link>https://hugo.unusually.pink/boredom-movie-binge/</link>
      <pubDate>Sun, 07 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/boredom-movie-binge/</guid>
      <description>I had written back before this site was even on Squarespace about binging movies while I was sick since I don’t normally have the attention span to feel like I’m doing a movie justice; I’m too busy being a millenial who needs to check his phone at least once every 45 seconds. On a somewhat related note, I just got a new phone (look for a post on that in the near future), and I’m not so sure about this whole Digital Wellbeing thing.</description>
      <content>&lt;p&gt;I had written back &lt;a href=&#34;https://www.unusually.pink/blog/switching-to-squarespace&#34;&gt;before this site was even on Squarespace&lt;/a&gt; about &lt;a href=&#34;https://www.unusually.pink/blog/illness-movie-binge&#34;&gt;binging movies while I was sick&lt;/a&gt; since I don’t &lt;em&gt;normally&lt;/em&gt; have the attention span to feel like I’m doing a movie justice; I’m too busy being a millenial who needs to check his phone at least once every 45 seconds. On a somewhat related note, I just got a new phone (look for a post on that in the near future), and I’m not so sure about this whole &lt;a href=&#34;https://support.google.com/pixelphone/answer/9137850?hl=en&amp;amp;utm_source=wellbeing.google&amp;amp;utm_medium=referral&amp;amp;utm_campaign=wellbeing&#34;&gt;Digital Wellbeing&lt;/a&gt; thing. That being said, I took a break from staring at the smaller screen in my hand a couple of weekends ago to instead stare at the much larger screen in front of my couch. I just randomly felt like hitting up some movies so I ended up powering through 5 of them in a single weekend. These are all fairly new movies having been released in 2019, and all with the exception of one are currently available on Netflix, with the outlier film being available on HBO. I’ve also not looked at any critical response to any of these films so we’ll see how well my taste holds up.&lt;/p&gt;
&lt;h1 id=&#34;the-perfectionhttpsenwikipediaorgwikithe_perfection&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Perfection&#34;&gt;The Perfection&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I had heard about this movie over the noise it generated from scenes in it being so visceral that they &lt;a href=&#34;https://www.screengeek.net/2019/05/30/the-perfection-netflix-viewers-sick/&#34;&gt;literally made viewers sick&lt;/a&gt;. Brandi had actually watched it on her own a few days after I saw those articles, though, and mentioned it to me one day. She said that it didn’t have the effect on her, but that there was &lt;strong&gt;one&lt;/strong&gt; scene near the end that did make her cringe. When I ended up doing this marathon I braced for the worst… and it actually wasn’t nearly as bad as I expected from that perspective. There are some scenes where a character vomits, but it wasn’t really as nausea-inducing as some of the news articles would make you expect.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BoredomMovieBinge_perfection_poster.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The plot was at least interesting, and the ending goes in a very different direction from what you’d expect at the half-way mark. If you’re a fan of twists then you’ll find &lt;em&gt;The Perfection&lt;/em&gt; fun if nothing else. The acting was fairly well done, though some of the dialog will make you cringe worse than the vomit scene. Also, Brandi was correct; there’s one scene right before the end of the film that is made my hair stand out, and it was physically difficult to watch. I won’t spoil it, but don’t let that stop you from watching if you think it sounds interesting otherwise.&lt;/p&gt;
&lt;h1 id=&#34;the-highwaymenhttpsenwikipediaorgwikithe_highwaymen_film&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Highwaymen_(film)&#34;&gt;The Highwaymen&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Because the universe needed &lt;strong&gt;another&lt;/strong&gt; film about Bonnie and Clyde, right? As someone who has read Bryan Burrough’s &lt;em&gt;Public Enemies: America&amp;rsquo;s Greatest Crime Wave and the Birth of the FBI&lt;/em&gt;, though, I was at least interested in seeing a film possibly take a more realistic approach to the couple than the films which glamorized them. Burrough described them as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Murderous children who longed for the big time, Bonnie and Clyde have garnered an artistic and cultural relevance in death they never found or deserved in life.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you read the book, you won’t disagree.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BoredomMovieBinge_highwaymen_poster.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I also figured it was worth a watch since I’m generally a fan of Woody Harrelson… though much less a fan of Kevin Costner. Refreshingly, the film focus mostly on the unorthodox investigation of the two protagonists and the limitations of state-run investigations at the time that made the birth of the FBI at the time fairly important. It also emphasized the undeserved attention that Bonnie and Clyde received from the public as they evaded law enforcement while making a point of not focusing on them as individuals; you don’t even see the faces of either until the final scene where they are killed. I don’t think that’s a spoiler by this point, kind of like the ending to &lt;em&gt;Titanic&lt;/em&gt;.&lt;/p&gt;
&lt;h1 id=&#34;triple-frontierhttpsenwikipediaorgwikitriple_frontier_film&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Triple_Frontier_(film)&#34;&gt;Triple Frontier&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I admittedly hadn’t even heard of this movie; it just happened to show up as a recommendation from Netflix. Looking into it a little, it seemed to have a lot going for it. A cast that included Ben Affleck, Oscar Isaac, Charlie Hunnam, and Pedro Pascal? Kathryn Bigelow, director of &lt;em&gt;The Hurt Locker&lt;/em&gt; and &lt;em&gt;Zero Dark Thirty&lt;/em&gt;, as an executive producer? That was enough for me to spend 125 minutes of my life watching it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BoredomMovieBinge_triple_frontier_poster.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;At the film’s conclusion, though, I feel like the ensemble was literally the only thing that kept it palatable. The entire plot just felt wonky to me. A bunch of former special forces soldiers, most of whom seem to have a lackluster life after leaving the service, get back together to rob a Colombian drug kingpin while the greed of one of them absolutely ruins everything and ultimately costs him his life. I choose to think that maybe the film was trying to make a statement about how poorly the country takes care of the soldiers who have served it. Otherwise, Ben Affleck’s character makes me want to scream at the TV. The guy has just spent years failing in real-estate, but at the flip of a switch he’s screaming at everyone else to blow their entire plan for cleanly robbing this drug kingpin because the millions of dollars they’ve already stolen aren’t enough and he wants more? And then he crashes a helicopter because the money is more important than safety? And then he shoots villagers because the money is more important than someone’s life?&lt;/p&gt;
&lt;p&gt;Don’t get me wrong… I’m sure if I had the opportunity for a bunch of money I’d want to take advantage of it, too. But I also think that for most people you’re going to hit a threshold where it’s &lt;strong&gt;so&lt;/strong&gt; much money that the numbers no longer even make sense. For someone making less than $100,000 a year, if you’re suddenly faced with getting $50 million or $100 million, I’m sure you want $100 million… but $50 million would also make you set. Do you risk getting no money for a &lt;strong&gt;chance&lt;/strong&gt; at an extra $50 million that you &lt;strong&gt;won’t have any clue what to do with&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;At least the acting was good outside of one character being complete nonsense.&lt;/p&gt;
&lt;h1 id=&#34;deadwood-the-moviehttpsenwikipediaorgwikideadwood_the_movie&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Deadwood:_The_Movie&#34;&gt;Deadwood: The Movie&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;As a fan of the &lt;em&gt;Deadwood&lt;/em&gt; television series, I had been looking forward to this since it was announced. I had briefly considered re-watching the series, but coming off of doing that exact same thing for &lt;em&gt;Game of Thrones&lt;/em&gt; (and look how well &lt;strong&gt;that&lt;/strong&gt; turned out…) I didn’t want to do it again. I hadn’t done much research into the film, so while I knew that they were going to get the majority of the original cast back, I was curious how they would account for the time that had gone by; after all the series ended in 2006. Thankfully, the answer was that it simply took place about a decade after the series ended… which is good since I think the content of the show is a little too serious for them to a pull a &lt;em&gt;Wet Hot American Summer: First Day of Camp&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BoredomMovieBinge_deadwood_poster.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To be completely honest, my inner fanboy was happy with the film the literal second that I got to see Ian McShane reprising the role of Al Swearengen. Keeping things relevant with the series, I was pleasantly surprised to see that it featured the return of George Hearst, now a United States Senator but still a full-time scumbag, in the Black Hills. I was happy that fans got to get as much closure as they would with the Hearst story without completely ignoring history. Hearst was never going to be killed in Deadwood (despite everyone pining for exactly that) since that isn’t what happened in real life, but it’s at least more cathartic than the series ending of “I guess he just got away with everything?”&lt;/p&gt;
&lt;p&gt;The ending, however, was extremely sad. I won’t spoil it, but brace yourself. The only good part is that the entire movie builds up to it, so at least you won’t be caught off guard.&lt;/p&gt;
&lt;h1 id=&#34;the-silencehttpsenwikipediaorgwikithe_silence_2019_film&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Silence_(2019_film)&#34;&gt;The Silence&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The final film of my marathon, this one basically struck me as being spiritually related to &lt;a href=&#34;https://www.unusually.pink/blog/illness-movie-binge&#34;&gt;my much-hated &lt;em&gt;Bird Box&lt;/em&gt;&lt;/a&gt;. Instead of being unable to see, as was the case in &lt;em&gt;Bird Box&lt;/em&gt;, the protagonists in this film can’t make noise due to some sort of prehistoric terror being unleashed on the world which preys on noise. I was &lt;strong&gt;hoping&lt;/strong&gt; that it could use the same basic idea of &lt;em&gt;Bird Box&lt;/em&gt; but not, you know, suck. Also, I said “use” rather than “take” because, much like &lt;em&gt;Bird Box&lt;/em&gt;, &lt;em&gt;The Silence&lt;/em&gt; is based on a novel. While the novel for &lt;em&gt;Bird Box&lt;/em&gt; was released in 2014, the novel for &lt;em&gt;The Silence&lt;/em&gt; was released in 2015. There’s no way the author for &lt;em&gt;The Silence&lt;/em&gt; read &lt;em&gt;Bird Box&lt;/em&gt;, stole the idea, and hammered out a novel in a single year, so let’s shut down that idea right now. Also, it starred Kiernan Shipka, aka Sally Draper from &lt;em&gt;Mad Men&lt;/em&gt;, so I figured I would check it out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BoredomMovieBinge_silence_poster.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;After watching the film, I can’t help but feel the same way I did after watching &lt;em&gt;Bird Box&lt;/em&gt;. I’d &lt;strong&gt;really&lt;/strong&gt; like to read the book, as I feel like the idea was interesting but the execution was poor. Even for a story that’s literally about flying monsters that have lived below the surface of the Earth in utter darkness who prey on sound being unwittingly unleashed upon the planet by some hapless cave explorers, so many things in the movie just felt like too much.&lt;/p&gt;
&lt;p&gt;The hook to the story is that Shipka’s character became deaf after an accident. As a result, she and her family have overcome that by learning sign language. The &lt;strong&gt;entire&lt;/strong&gt; movie is based on the idea that because of this, they can live in silence. Maybe there’s first-hand insight that I’m lacking, but this makes no sense to me at all. They know sign language and thus don’t need to speak. I’ll give the plot that; there are many instances where signing instead of speaking is hugely valuable to the characters. Other than that, though… I don’t think you just cease to make sound because a member of your family is deaf. At one point in the film the family posts up in a house they’ve stumbled across, and it seems like they stay there for a day or two in order to recover while Shipka and Stanley Tucci go out in search of medicine. How do you prepare food without making sound? How do you &lt;strong&gt;shit&lt;/strong&gt; without making sound? What would’ve happened if grandma started to snore in her sleep? Thank fuck no one in this family has allergies.&lt;/p&gt;
&lt;p&gt;On top of that, the film covers a matter of days after the creatures are first set loose; we’re not going into months of years. This is important for a couple of reasons. First, it means that the core of the planet is actually filled with these creatures rather than iron because from a tiny hole in a cave there are enough of them to quite literally engulf entire cities. Seems legit. I wonder what they’ve been eating down there. Second, there are some pretty intense lunatics in the world, as the film’s main antagonist ends up not being the creatures but a weird cult which is obsessed with Kiernan because she’s deaf. This cult is pretty dedicated to silence as they’ve cut out their tongues. Because that makes sense on day #2 of the sound apocalypse, right? Jump &lt;strong&gt;straight&lt;/strong&gt; to cutting out your own tongue… which still isn’t going to save you when you have to sneeze or you’ve got the shits. They’ve also done this before learning sign language themselves. They aren’t the smartest bunch anyway, because they’re obsessed with Shipka’s character due to the fact that, and this is a literal quote, “she’s fertile.” She’s also deaf from an accident rather than genetics. This is quite obviously the worst cult in film history.&lt;/p&gt;
&lt;p&gt;Just like with &lt;em&gt;Bird Box&lt;/em&gt;, I think the idea is interesting, but the execution of the film was just awful. I&amp;rsquo;ll be curious if the book does a better job. It’s also worth mentioning that, despite the holes in the plot, I felt that the acting from Shipka and Tucci was especially good. Similar to &lt;em&gt;Triple Frontier&lt;/em&gt;, I feel like the acting saved it from being a film I just stopped watching before the end.&lt;/p&gt;
&lt;p&gt;If you’re looking to watch &lt;strong&gt;one&lt;/strong&gt; of these films and wondering which would be best, I would say &lt;em&gt;Deadwood: The Movie&lt;/em&gt; if you’re already a fan of the series. If you’ve never watched the series, though, then most of the film won’t make sense. Barring that, I’d give the nod to &lt;em&gt;The Perfection&lt;/em&gt; for having the most interesting plot. Just pretend like some of the more cringe-worthy dialog didn’t happen. On that note, I’ll now return to my film-moratorium until the next time I feel like killing a few days since that’s apparently the only way I can watch movies. Stay pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Enabling Legacy Status Icons In Pop!_OS</title>
      <link>https://hugo.unusually.pink/enabling-legacy-status-icons-in-pop_os/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/enabling-legacy-status-icons-in-pop_os/</guid>
      <description>As we mentioned back in Episode 6, I had installed Pop!OS on my desktop. The design of the Pop!_OS interface is very streamlined and minimal to allow you to focus on things without as many distractions as you’ll frequently see in competing operating systems. That’s pretty awesome, but sometimes I want distractions… namely the ones I get by seeing which applications I have up and running in the background. As you’re probably used to seeing, applications like Dropbox and Discord will drop a small icon somewhere in your OS to let you know the applications are running.</description>
      <content>&lt;p&gt;As we mentioned back in &lt;a href=&#34;https://www.unusually.pink/podcast/episode-6-huzzah-hobbies&#34;&gt;Episode 6&lt;/a&gt;, I had installed &lt;a href=&#34;https://system76.com/pop&#34;&gt;Pop!OS&lt;/a&gt; on my desktop. The design of the Pop!_OS interface is very streamlined and minimal to allow you to focus on things without as many distractions as you’ll frequently see in competing operating systems. That’s pretty awesome, but sometimes I &lt;em&gt;want&lt;/em&gt; distractions… namely the ones I get by seeing which applications I have up and running in the background. As you’re probably used to seeing, applications like &lt;a href=&#34;https://www.dropbox.com/&#34;&gt;Dropbox&lt;/a&gt; and &lt;a href=&#34;https://discordapp.com/&#34;&gt;Discord&lt;/a&gt; will drop a small icon somewhere in your OS to let you know the applications are running. For example, by default they’ll appear in the bottom right corner of the screen in Windows and at the upper right corner in macOS which is right next to the clock. In &lt;a href=&#34;https://ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;, which Pop!_OS is based on, they’ll also show up next to the clock in the upper-right corner of the screen.&lt;/p&gt;
&lt;p&gt;I could live without a Discord icon, but I really wanted one for Dropbox; it’s useful to see the icon change based on the sync status of the service. I did a little bit of digging, and the most challenging part was honestly what search terms to use in order to find the information for which I was hunting. Luckily, it didn’t take long for me to find the &lt;a href=&#34;https://pop.system76.com/docs/status-icons/&#34;&gt;official documentation&lt;/a&gt; on the matter.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Ubuntu and previous versions of GNOME Shell supported “status icons” or “AppIndicators” where installed apps could add arbitrary icons to the shell. In GNOME Shell 3.26, this functionality was removed in favor of other APIs.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The issue isn’t that Pop!_OS doesn’t support status icons, but that it doesn’t support &lt;em&gt;legacy&lt;/em&gt; status icons… at least not out of the box. The application &lt;strong&gt;gnome-shell-extension-appindicator&lt;/strong&gt; from the standard repositories will fix this, though. Just install it via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt install gnome-shell-extension-appindicator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once it’s installed, launch it with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;gnome-shell-extension-prefs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then turn on &lt;strong&gt;KStatusNotifierItem/AppIndicator Support&lt;/strong&gt;. Boom. Okay, not boom. I had to log out and back in first, as noted in the documentation. After &lt;em&gt;that&lt;/em&gt;, though, I was able to see my Dropbox icon in all its glory.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/EnablingLegacyStatusIconsInPop_OS_window_view.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Worth it. Stay pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Sorting IP Addresses With PowerShell</title>
      <link>https://hugo.unusually.pink/sorting-ip-addresses-with-powershell/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/sorting-ip-addresses-with-powershell/</guid>
      <description>I was recently attempting to sort a list of IP addresses that I had in a text file. PowerShell is awesome at sorting, so I figured I would use it given that I had nearly 2000 of them. I initially just tried to pipe the contents of the file to the Sort-Object cmdlet:
Get-Content -Path .\ipListFixed.txt | Sort-Object
The results were, suffice to say, lackluster. I ended up with something like this:</description>
      <content>&lt;p&gt;I was recently attempting to sort a list of IP addresses that I had in a text file. PowerShell is awesome at sorting, so I figured I would use it given that I had nearly 2000 of them. I initially just tried to pipe the contents of the file to the &lt;strong&gt;Sort-Object&lt;/strong&gt; cmdlet:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Get-Content -Path .\ipListFixed.txt | Sort-Object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The results were, suffice to say, lackluster. I ended up with something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;10.1.69.1
10.1.69.12
10.1.69.148
10.1.69.149
10.1.69.17
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Gross, right? Obviously 10.1.69.17 shouldn’t be after 10.1.69.148 or .149. The issue is that the whole octet isn’t being considered. It’s being sorted like they’re just strings rather than IP addresses; 7 is bigger than 4 so they’re sorted accordingly. PowerShell isn’t really comparing the numbers of 17 to 148, for example, to realize that 17 is actually smaller.&lt;/p&gt;
&lt;p&gt;It makes sense; PowerShell can’t assume that the value is an IP address so it’s treating the value like a string instead. This means that the key is to &lt;em&gt;tell&lt;/em&gt; PowerShell it’s an IP address so that PowerShell can adjust the way it does sorting. This is possible by casting the values as the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.version?view=netcore-2.2&#34;&gt;.NET Version class&lt;/a&gt;. Since I happened to be pulling the IPs from a file, I did the casting within the &lt;strong&gt;-Property&lt;/strong&gt; parameter that I added to the &lt;strong&gt;Sort-Object&lt;/strong&gt; cmdlet:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Get-Content -Path .\ipListFixed.txt | Sort-Object -Property { [System.Version]$_ }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This yields &lt;em&gt;significantly&lt;/em&gt; better results:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;10.1.69.1
10.1.69.2
10.1.69.12
10.1.69.17
10.1.69.29
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Stay pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Updates: Dropbox, Password Managers, and Ad Blocking</title>
      <link>https://hugo.unusually.pink/unusually-pink-updates-dropbox-password-managers-and-ad-blocking/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-updates-dropbox-password-managers-and-ad-blocking/</guid>
      <description>This will be one of those weird amalgam posts featuring multiple only mildly-related topics but which are too short to be a post in their own right. I though it would be helpful to provide some updates on a few things that Brandi and I have talked about in some of our past episodes. They’re all tech-related… but you already know that from reading the title.
Dropbox Upgrades and Price Increases On June 1st, Dropbox added more features to their Plus plan.</description>
      <content>&lt;p&gt;This will be one of those weird amalgam posts featuring multiple only mildly-related topics but which are too short to be a post in their own right. I though it would be helpful to provide some updates on a few things that Brandi and I have talked about in some of our &lt;a href=&#34;https://www.unusually.pink/podcast&#34;&gt;past episodes&lt;/a&gt;. They’re all tech-related… but you already know that from reading the title.&lt;/p&gt;
&lt;h2 id=&#34;dropbox-upgrades-and-price-increases&#34;&gt;Dropbox Upgrades and Price Increases&lt;/h2&gt;
&lt;p&gt;On June 1st, Dropbox added more features to their &lt;a href=&#34;https://www.dropbox.com/individual/plans-comparison&#34;&gt;Plus plan&lt;/a&gt;. I’ve been a Plus customer for a couple of years now. It’s less of a “I need to pay for the extra space” situation and more of a “I store some important shit in here and this gives me more peace of mind” situation. The main features from the upgrade, according to the email they sent me, are:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Double your storage—save everything with 2 TB (2,000 GB).&lt;br&gt;
World-class sync technology—move out-of-date files off your computer’s hard drive and to the cloud with Dropbox Smart Sync.&lt;br&gt;
Dropbox Rewind—roll back accidental changes to any folder, or your entire account, up to 30 days.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The extra storage is nice, though suffice to say it’s not exactly something I &lt;strong&gt;need&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkUpdatesDropboxPasswordManagersandAdBlocking_dropbox_space.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Rewind seems &lt;strong&gt;really&lt;/strong&gt; nice, though. I store a lot of PowerShell scripts in Dropbox, so I could see rewind being useful if I accidentally break one or need to snag an older version for some reason. While I’ve recently been making an effort to check in my bigger, more important scripts with &lt;a href=&#34;https://azure.microsoft.com/en-us/services/devops/&#34;&gt;Azure DevOps&lt;/a&gt; for version control, smaller ones that I’m the only person likely to use still just go into Dropbox.&lt;/p&gt;
&lt;p&gt;Things aren’t all roses and unicorns, though, as the added storage and features come at a cost: $2 USD more per month. This bumps the monthly price up to $12 USD. The good part is that if you go with yearly pricing, you save that $2 a month and pay $120 for the year. I’m actually still on monthly pricing despite having used the Plus service for a few years so I’ll need to move over for sure. While the bonus storage is available now the new pricing isn’t happening for me until July. So before early July I need to swap to yearly billing to avoid paying the extra couple of bucks.&lt;/p&gt;
&lt;h2 id=&#34;wired-password-manager-recommendations&#34;&gt;Wired Password Manager Recommendations&lt;/h2&gt;
&lt;p&gt;In our &lt;a href=&#34;https://www.unusually.pink/podcast/episode-8-playlists-and-privacy&#34;&gt;last episode&lt;/a&gt;, Brandi and I spoke a bit about password managers. Right after we recorded that episode &lt;a href=&#34;https://www.wired.com/story/best-password-managers/&#34;&gt;Wired published an article all about password managers&lt;/a&gt;. The timing seemed perfect to share it. Of the ones Wired recommends Dashlane is the only that I haven’t used. It also makes me feel good that my preferred password manager, &lt;a href=&#34;https://1password.com/&#34;&gt;1Password&lt;/a&gt;, was Wired’s #1 recommendation.&lt;/p&gt;
&lt;p&gt;Speaking of Wired, I love their content but always run into my 5 free articles per month limit. I just happened to see earlier today that they’re &lt;a href=&#34;https://subscribe.wired.com/subscribe/wired/121031?source=EDT_WIR_TWITTER_0_WEEKOFJUNE03_3_ZZ&amp;amp;utm_brand=wired&amp;amp;utm_source=twitter&amp;amp;utm_social-type=owned&amp;amp;mbid=social_twitter&amp;amp;utm_medium=social&amp;amp;utm_campaign=wired&#34;&gt;doing a deal&lt;/a&gt; where you can snag a year’s subscription for just $10. This includes the print editions plus digital content (normally $50 a year) or just digital if you don’t care about print (normally $30 a year.) I was fortunate enough to see it right when &lt;a href=&#34;https://twitter.com/WIRED/status/1136709547022848006&#34;&gt;they posted to Twitter&lt;/a&gt;. I have no clue how long this is running for, but it seems pretty worthwhile if you’re a geek and like tech news. And no… we don’t get anything for promoting this. I just like Wired.&lt;/p&gt;
&lt;h2 id=&#34;browser-ad-blocking&#34;&gt;Browser Ad Blocking&lt;/h2&gt;
&lt;p&gt;Also from our &lt;a href=&#34;https://www.unusually.pink/podcast/episode-8-playlists-and-privacy&#34;&gt;last episode&lt;/a&gt;, we discussed how &lt;a href=&#34;https://www.zdnet.com/article/google-chrome-could-soon-kill-off-most-ad-blocker-extensions/&#34;&gt;Google was initially thinking about making changes to the webRequest API&lt;/a&gt; that would essentially cripple ad blockers. Like we discussed in the episode, after those initial reports and backlash in January Google had backed off a little and said they would think through how this API update should work. At the end of May, though, it came to light that &lt;a href=&#34;https://www.androidpolice.com/2019/05/29/google-still-plans-to-kill-chromes-existing-adblock-apis/&#34;&gt;Google still plans to nuke the webRequest API pieces that allow current ad blockers to work&lt;/a&gt;… that is &lt;a href=&#34;https://9to5google.com/2019/05/29/chrome-ad-blocking-enterprise-manifest-v3/&#34;&gt;unless you’re a G Suite customer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What’s worse is that these proposed changes seem to be in the &lt;a href=&#34;https://www.chromium.org/&#34;&gt;open-source Chromium project&lt;/a&gt;. So unless Microsoft does some work on their fork, the &lt;a href=&#34;https://www.microsoftedgeinsider.com/en-us/&#34;&gt;Chromium-based version of Edge&lt;/a&gt; could also be impacted. Suffice to say this gives me some &lt;strong&gt;significant&lt;/strong&gt; pause on my previously mentioned plans to buy a new Chromebook. I’m now re-evaluating what I should do for my laptop situation. And if you haven’t used &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/&#34;&gt;Firefox Quantum&lt;/a&gt; recently, now might be a great time to check it out.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>PowerShell: Export Non-Standard and Multi-Value AD Attributes to CSV</title>
      <link>https://hugo.unusually.pink/powershell-export-non-standard-and-multi-value-ad-attributes-to-csv/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/powershell-export-non-standard-and-multi-value-ad-attributes-to-csv/</guid>
      <description>I’ve recently been spending a lot of my time at work doing PowerShell scripting for a project that’s currently underway. While working on a bit of code late last week I ran into two interesting problems that I had yet to really stumble across despite doing heavy PowerShell scripting against Active Directory for nearly a decade now.
Exporting Non-standard Attributes To CSV My first issue was that I needed to export some non-standard attributes from contact objects in AD to a .</description>
      <content>&lt;p&gt;I’ve recently been spending a lot of my time at work doing PowerShell scripting for a project that’s currently underway. While working on a bit of code late last week I ran into two interesting problems that I had yet to really stumble across despite doing heavy PowerShell scripting against Active Directory for nearly a decade now.&lt;/p&gt;
&lt;h2 id=&#34;exporting-non-standard-attributes-to-csv&#34;&gt;Exporting Non-standard Attributes To CSV&lt;/h2&gt;
&lt;p&gt;My first issue was that I needed to export some non-standard attributes from contact objects in AD to a .csv file. When I say “non-standard” I don’t mean that we’ve done a custom schema extension or anything like that. Instead, I simply mean that the AD PowerShell module only wants to include certain attributes when exporting AD objects to a .csv file. For example, if I run &lt;strong&gt;Get-ADObject&lt;/strong&gt; &lt;strong&gt;-Properties *&lt;/strong&gt; against a particular contact object and simply let the output dump to my shell, I see all of the attributes I expect including stuff like &lt;strong&gt;givenName&lt;/strong&gt; and &lt;strong&gt;sn&lt;/strong&gt;. However, if I run the exact same cmdlet but pipe the result to &lt;strong&gt;Export-Csv&lt;/strong&gt; rather than sending it to the shell I will not have all the same attributes; ones like &lt;strong&gt;givenName&lt;/strong&gt; and &lt;strong&gt;sn&lt;/strong&gt; will now be missing. That’s a problem.&lt;/p&gt;
&lt;h2 id=&#34;storing-mutli-value-attributes-in-a-csv&#34;&gt;Storing Mutli-Value Attributes In a CSV&lt;/h2&gt;
&lt;p&gt;The other problem was that one of the attributes I needed is &lt;strong&gt;proxyAddresses&lt;/strong&gt;. This is a multi-value attribute as contacts could very likely have multiple proxy addresses associated with a particular mailbox. They may have an alias, x500 addresses, etc. If you use PowerShell to pull this information from AD and dump it to the screen you’ll see the expected proxy address information. If you call &lt;strong&gt;GetType()&lt;/strong&gt; on the &lt;strong&gt;proxyAddresses&lt;/strong&gt; attribute you’ll see it listed as an array. That’s why if you export a contact to a .csv file and include &lt;strong&gt;proxyAddresses&lt;/strong&gt;, the value for each contact in that particular column will simply read:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Microsoft.ActiveDirectory.Management.ADPropertyValueCollection&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PowerShell isn’t sure what to do with a multi-value attribute as far as the .csv file goes so it stores the data type. This is also a problem!&lt;/p&gt;
&lt;h2 id=&#34;the-solution&#34;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;My solution to this was the following. Note that it’ll be easier to view &lt;a href=&#34;https://gist.github.com/JFFail/6dd9acb0020845a905eeda8fbc8de1a7&#34;&gt;the Gist for it&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Get the objects with the required attributes and storing proxyAddresses properly in the .csv file.
Get-ADObject -Filter { objectClass -eq &amp;quot;contact&amp;quot; } -Server myserver.mydomain.net -SearchBase &amp;quot;OU=Contacts,DC=mydomain,DC=net&amp;quot; -SearchScope OneLevel -Properties name,givenName,sn,displayName,telephoneNumber,proxyAddresses,targetAddress,mail,mailNickname,company,department,l,physicalDeliveryOfficeName,postalCode,st,streetAddress,title | Select-Object name,givenName,sn,displayName,telephoneNumber,targetAddress,mail,mailNickname,company,department,l,physicalDeliveryOfficeName,postalCode,st,streetAddress,title,@{name=&amp;quot;proxyAddresses&amp;quot;; expression={$_.proxyAddresses -join &amp;quot;;&amp;quot;}} | Export-Csv -Path .\sample.csv -Encoding ASCII -Append -NoClobber -NoTypeInformation

# Shows how to then use the proxyAddresses attribute in the future.
$allContacts = Import-Csv -Path .\sample.csv
foreach($singleContact in $allContacts) {
    $proxyAddresses = $singleContact.proxyAddresses.Split(&amp;quot;;&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The first thing I needed was to get the properties I actually needed as opposed to just the ones PowerShell felt like including due to the object type. The solution was to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Specify all of the attributes I wanted in &lt;strong&gt;-Properties&lt;/strong&gt; to ensure they would be available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pipe the AD object to &lt;strong&gt;Select-Object&lt;/strong&gt; and then re-specify each of the properties I wanted.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This works because PowerShell is selecting the attributes to include in the .csv file based on the type of object. &lt;strong&gt;Select-Object&lt;/strong&gt; takes whatever comes through the pipeline, though, and makes a brand new, generic object from it. That object will include any properties from that original object that you specify, hence why I tell it the exact listing of properties that I need again.&lt;/p&gt;
&lt;p&gt;This leads to the solution to the second problem which is what to do for &lt;strong&gt;proxyAddresses&lt;/strong&gt;. PowerShell allows for the use of an expression to parse together a new property. In this instance the expression is to take the existing &lt;strong&gt;proxyAddresses&lt;/strong&gt; array and &lt;strong&gt;-join&lt;/strong&gt; it into a string. Each of the items in the array are separated by a semicolon. If a contact has the following proxy addresses, for example:&lt;/p&gt;
&lt;p&gt;SMTP:pretty@unusually.pink
smtp:awesome@unusually.pink&lt;/p&gt;
&lt;p&gt;Then the property in the .csv file will be stored as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SMTP:pretty@unusually.pink;smtp:awesome@unusually.pink
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You could pick any character for the delimiter that you want as long as it isn’t used in other data that you’re storing.&lt;/p&gt;
&lt;p&gt;In this instance my goal was to take the exported data, re-import it, and then create contacts in a different AD forest. When creating a new object AD is expecting an array for the &lt;strong&gt;proxyAddresses&lt;/strong&gt; attribute. A string with a random delimiter won’t do it. That’s where the second part of the example comes into play. If I’m looping through all of the data stored in the .csv file I can recreate the array of proxy addresses by splitting the string on my delimiter (in this case a semicolon) and assigning the result to a variable. That variable will be an array which can then be used to popular &lt;strong&gt;proxyAddresses&lt;/strong&gt; when running &lt;strong&gt;New-ADObject&lt;/strong&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>BlizzCon and the AXS of Evil</title>
      <link>https://hugo.unusually.pink/blizzcon-and-the-axs-of-evil/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/blizzcon-and-the-axs-of-evil/</guid>
      <description>As we mention in our latest episode, our plans have changed and we will not be going to BlizzCon this year. We could just let it go and accept that it is what it is… but remember how I mentioned my love of throwing salt into the Internet? So we’re gonna do that instead!
AXS: The most useless ticketing service We mentioned a few of our issues with AXS in Episode 5.</description>
      <content>&lt;p&gt;As we mention in our &lt;a href=&#34;https://www.unusually.pink/podcast&#34;&gt;latest episode&lt;/a&gt;, our plans have changed and we will &lt;strong&gt;not&lt;/strong&gt; be going to BlizzCon this year. We could just let it go and accept that it is what it is… but remember how I mentioned my &lt;a href=&#34;https://www.unusually.pink/blog/microsoft-edge-insider-its-actually-not-that-bad&#34;&gt;love of throwing salt into the Internet&lt;/a&gt;? So we’re gonna do that instead!&lt;/p&gt;
&lt;h2 id=&#34;axs-the-most-useless-ticketing-service&#34;&gt;AXS: The most useless ticketing service&lt;/h2&gt;
&lt;p&gt;We mentioned a few of our issues with AXS in &lt;a href=&#34;https://www.unusually.pink/podcast/episode-5-gotta-blizz-em-all&#34;&gt;Episode 5&lt;/a&gt;. It’s the new ticketing service that Blizzard decided to go with this year. Using AXS was a first for them; last year they went with Universe. In theory, it seemed like a good idea for a convention as popular as BlizzCon where there’s always a massive scramble to get tickets. Instead of having to hope you’re lucky enough to click on the button to buy tickets within 0.23 seconds of it going live, AXS is &lt;strong&gt;supposed&lt;/strong&gt; to serve as an equalizer. They open up a lobby 30 minutes before tickets are available. Anyone who is in that lobby at &lt;strong&gt;any&lt;/strong&gt; time before tickets go live is supposed to have an equal chance at getting them. Hopeful customers are randomly selected from the lobby and are given 7 minutes to purchase their tickets. Seven minutes is plenty of time, but if you don’t purchase them within that allotment then you’ve lost your opportunity and someone else from the lobby is given a chance at them.&lt;/p&gt;
&lt;p&gt;The problem is that &lt;strong&gt;it didn’t fucking work at all&lt;/strong&gt;. Instead of getting tickets when I submitted the purchase after getting lucky RNG, I got this error. Over and over and over.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BlizzConandtheAXSofEvil_axs_is_trash.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I immediately opened support cases with both Blizzard and AXS. Blizzard was insanely unhelpful. They first asserted it must’ve been an issue with my card. I told them I tried 3 different cards with the same results, and that I saw pending transactions for each of them. They then told me it would have to be handled through AXS. This isn’t surprising, but I was hoping they would be a bit more accommodating considering it was an error on the side of the partner they were ignorant enough to select. So I then waited to hear something on my support case with AXS. And waited. And waited. And &lt;strong&gt;waited&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Days went by without hearing anything, so I hit them up on Twitter where they asked me to DM them. I sent them my case number and they responded with the following lovely exchange:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BlizzConandtheAXSofEvil_axs_dms_edit.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Essentially they just admitted that their service didn’t do the &lt;strong&gt;one thing it’s supposed to do&lt;/strong&gt;. On top of that, they didn’t even bother to read my reply, let alone respond to it. As I point out with the arrows I drew in the screenshot above, the blue check next to my original message means that it was “Seen”. The grey check next to my follow-up questions simply means that it was “Sent”. If that isn’t garbage-tier customer service, I don’t know what is.&lt;/p&gt;
&lt;p&gt;Also, this apparently counted as covering the support case I opened as I never received an email or anything else in regard to it.&lt;/p&gt;
&lt;p&gt;Despite this setback, we were still planning to go. Brandi had been in touch with someone we met at BlizzCon last year who has a friend who works for Blizzard and thus was supposedly able to hit us up with tickets. They weren’t on lockdown yet since internal folks apparently get their tickets later on, but we figured worst-case scenario we’d get to hang out in southern California for a few days. It was a nice bonus because I we got a great deal on a hotel… until we didn’t.&lt;/p&gt;
&lt;h2 id=&#34;hilton-us-where-it-hurts&#34;&gt;Hilton us where it hurts&lt;/h2&gt;
&lt;p&gt;If you’ve ever been to BlizzCon before, then you know the Anaheim Hilton is &lt;strong&gt;the&lt;/strong&gt; place to be. Along with being right next to the Anaheim Convention Center for easy access to BlizzCon, it’s also the after-hours social hub of the convention with parties breaking out each night. The Hilton embraces this and last year had a bunch of pop-up bars in the lobby selling Bottle Logic’s special StarCraft 20th Anniversary beer. It was awesome.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/BlizzConandtheAXSofEvil_sc_beer.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Last year we didn’t stay at the Hilton because, on top of just being a Hilton, event prices are pretty insane. Staying for just 4 days, for example, easily pushes over $2,000 USD. I have family who works for Hilton which means I can often get a “friends and family” discount, but events are always blacked out. Brandi and I just happened to check this year, though, and sure enough discounted rooms were available. Suffice to say we pounced on one, booking 5 days for half the price most people were paying for 4 days. Even if something fell through without our BlizzCon tickets, being in the area and in the epicenter for the happenings of the convention still seemed super fun. Unfortunately, a week later I got the following email:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“We are contacting you regarding your upcoming Go Hilton reservation at Hilton Anaheim - Confirmation # XXXXXXXXXX. Unfortunately, due to a misconfiguration in our booking system there were Go Hilton rates offered that should have not been made available. This affected reservations booked between May 09th and May 13th 2019. We regret to inform you that we can no longer honor these reservations, and they will be cancelled shortly. We are deeply sorry for this inconvenience and appreciate your understanding due to the systems error.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Followed shortly by a cancellation email with the most tone-deaf greeting possible:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“JOHN, we’re sorry to see you go! We hope you allow Hilton Hotels &amp;amp; Resorts the opportunity to serve you in the future.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When I let Brandi know, we were both pretty fed up with the whole ordeal. Along with losing the insanely good Hilton pricing, now a week had passed since most people would have booked their rooms… meaning that the availability of something else in the area had already been shrinking. We would have to settle for a worse room at a higher price. Did we really want to spend the money and go through the hassle when neither of us having even played a Blizzard game in the past three months? Ultimately the answer was no, so we’ll be bailing on the convention this year.&lt;/p&gt;
&lt;p&gt;With the money we &lt;em&gt;aren’t&lt;/em&gt; spending on BlizzCon, Brandi and I will likely do other cool shit this year. I have a few other trips in mind that I’d like to take, and Brandi is getting a freaking puppy! Expect &lt;strong&gt;TONS&lt;/strong&gt; of puppy pics on &lt;a href=&#34;https://www.instagram.com/unusuallypinkpodcast/&#34;&gt;Instagram&lt;/a&gt; when that happens!&lt;/p&gt;
&lt;p&gt;In the meantime, keep the Morton’s flowing and stay pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>It&#39;s All About Open Source</title>
      <link>https://hugo.unusually.pink/its-all-about-open-source/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/its-all-about-open-source/</guid>
      <description>A friend of mine who has been doing some programming (hi, Fy!) recently asked me for some ideas on open source projects they could look at and possibly contribute to. It made me think of what open source software I tend to use on a regular basis… which is a decent amount as someone who runs a few different Linux systems. It seemed like a solid opportunity to compile the Super Official List of Open Source Stuff John Likes™.</description>
      <content>&lt;p&gt;A friend of mine who has been doing some programming (hi, &lt;a href=&#34;http://fyritke.us/&#34;&gt;Fy&lt;/a&gt;!) recently asked me for some ideas on open source projects they could look at and possibly contribute to. It made me think of what open source software I tend to use on a regular basis… which is a decent amount as someone who runs a few different Linux systems. It seemed like a solid opportunity to compile the Super Official List of Open Source Stuff John Likes™. As someone who doesn’t really know much about writing code, I have &lt;strong&gt;no&lt;/strong&gt; idea if any of these are good candidates for someone to start contributing to open source; they just happen to be things I use on the regular. Without further adieu and in no particular order:&lt;/p&gt;
&lt;h3 id=&#34;notepadhttpsnotepad-plus-plusorg&#34;&gt;&lt;a href=&#34;https://notepad-plus-plus.org/&#34;&gt;Notepad++&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Notepad++ has been one of my favorite Windows text editors for as long as I can remember. While it may not be as flashy or as popular as some of the other editors I’ll get to in a little bit (yeah… I’ve got a thing for text editors), it’s hard to top the speed and footprint of Notepad++. It also has at least basic syntax highlighting for almost every programming language under the sun. I also can’t overstate the importance of being able to open a plaintext file at work and having the editor launch &lt;em&gt;immediately&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;visual-studio-codehttpscodevisualstudiocom&#34;&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;VSCode is another &lt;a href=&#34;https://www.unusually.pink/blog/microsoft-edge-insider-its-actually-not-that-bad&#34;&gt;rare example of Microsoft software I enjoy&lt;/a&gt;. While I dislike the large, clunky IDE that is Visual Studio, VSCode is a nice balance between a simple editor and an IDE. It has a large plugin ecosystem that can give you benefits of things like Intellisense and a debugger without being needless. It’s based on the same Electron framework as &lt;a href=&#34;https://atom.io/&#34;&gt;GitHub’s Atom editor&lt;/a&gt;. I’ve found it to be such a nice editor across a wide array of languages that I’ve even taken to installing it on Linux systems for the times when I want a GUI editor.&lt;/p&gt;
&lt;p&gt;If you’re curious how I configure it, here’s my &lt;strong&gt;settings.json&lt;/strong&gt; file. Note that I mainly use it for PowerShell:&lt;/p&gt;
&lt;p&gt;{
&amp;ldquo;workbench.colorTheme&amp;rdquo;: &amp;ldquo;Dracula&amp;rdquo;,
&amp;ldquo;editor.minimap.enabled&amp;rdquo;: true,
&amp;ldquo;editor.minimap.showSlider&amp;rdquo;: &amp;ldquo;always&amp;rdquo;,
&amp;ldquo;editor.wordWrap&amp;rdquo;: &amp;ldquo;on&amp;rdquo;,
&amp;ldquo;editor.scrollBeyondLastLine&amp;rdquo;: false,
&amp;ldquo;files.hotExit&amp;rdquo;: &amp;ldquo;off&amp;rdquo;,
&amp;ldquo;powershell.integratedConsole.showOnStartup&amp;rdquo;: false,
&amp;ldquo;editor.fontFamily&amp;rdquo;: &amp;ldquo;&amp;lsquo;Fira Code&amp;rsquo;, &amp;lsquo;Fira Mono&amp;rsquo;, monospace&amp;rdquo;,
&amp;ldquo;editor.fontLigatures&amp;rdquo;: true,
&amp;ldquo;git.ignoreMissingGitWarning&amp;rdquo;: true
}&lt;/p&gt;
&lt;h3 id=&#34;vimhttpswwwvimorg&#34;&gt;&lt;a href=&#34;https://www.vim.org/&#34;&gt;Vim&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Of course, most of the time when I’m using Linux I’m &lt;strong&gt;not&lt;/strong&gt; using a GUI. I feel at home on the command line, which is good considering I run a handful of headless servers that I only ever access via SSH (which happens to be a &lt;strong&gt;great&lt;/strong&gt; way to mess with scripting or code from a Chromebook if it doesn’t have support for Linux apps yet.) Vim is the de facto CLI editor for me (sorry Emacs users), and I can install it on literally everything. Most Linux distros also come with either it or Vi installed by default, so it’s ubiquitous.&lt;/p&gt;
&lt;p&gt;Vim has a reputation for being difficult to use, but I don’t really think that’s the case. It’s just that it’s very &lt;em&gt;different&lt;/em&gt; to use if you’re coming from most modern editors. Once you get accustomed to it, I’ve found it to be perhaps the most easy for editing text effectively. Plus, it has a rich plugin ecosystem for things like syntax highlighting and support. I use &lt;a href=&#34;https://github.com/tpope/vim-pathogen&#34;&gt;Pathogen&lt;/a&gt; as my plugin manager for Vim.&lt;/p&gt;
&lt;p&gt;If you want to know my Vim config, this is my typical &lt;strong&gt;.vimrc&lt;/strong&gt; file:&lt;/p&gt;
&lt;p&gt;execute pathogen#infect()
set hlsearch ignorecase smartcase incsearch relativenumber ruler
set laststatus=2 tabstop=4 shiftwidth=4 expandtab notitle
syntax on
filetype plugin indent on&lt;/p&gt;
&lt;h3 id=&#34;htophttpshishamhmhtop&#34;&gt;&lt;a href=&#34;https://hisham.hm/htop/&#34;&gt;htop&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;htop is a &lt;em&gt;super&lt;/em&gt; handy, interactive utility for seeing what the heck is happening in a Linux system. Think of it like the terminal version of the Windows Task Manager. It gives you a nice breakdown of CPU, RAM, and swap usage along with a listing of processes and what each is doing. It also offers and easy way to adjust the nice level of particularly important or greedy processes. It’s an enhancement over the older &lt;strong&gt;top&lt;/strong&gt; utility.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ItsAllAboutOpenSource_Screenshotfrom2019-05-0617-32-51.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;tmuxhttpsgithubcomtmuxtmux&#34;&gt;&lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;tmux&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;tmux is terminal multiplexer, hence the name. If you have no clue what that means, it allows you to take a single terminal and divide it up into multiple virtual terminals. This lets easily have multiple terminals on the screen at the same time with different information on them without having to flip between tabs. Here’s a sample:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ItsAllAboutOpenSource_Screenshotfrom2019-05-0618-16-41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In a single terminal window I’ve got Vim open with some simple Go code on the left pane. The right side has two panes; the top pane has Cowsay running while the bottom pane I just used to install Cowsay. While not exact useful in the scenario I set up for this screenshot, it can be really handy for doing something like writing a script in one pane and having a second, smaller pane to the side or top of running it periodically without ever needing to close the file.&lt;/p&gt;
&lt;p&gt;The other super handy part of tmux is that you can keep a persistent session going on a remote system without staying connected to it. I can SSH to a server, open tmux, connect to an IRC server, and use it for however long I need. If I want to disconnect from SSH but keep my IRC session going, I can simply detach my current SSH session from tmux but leave tmux running. Then I can close my SSH session. When I later SSH into the system again, I can reattach to the existing tmux session and pick right back up where I left off.&lt;/p&gt;
&lt;h3 id=&#34;powershellhttpsgithubcompowershellpowershell&#34;&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell&#34;&gt;PowerShell&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Since I’ve mentioned code a few times in these examples after starting the post off by saying I don’t know what the hell I’m doing when it comes to writing code, PowerShell is the one exception. I basically live in a PowerShell window for work, using it for both my day-to-day management at the CLI and in scripts that I use to automate my work… because work smart, not hard, right? I feel decently proficient with PowerShell, and I’m excited that version 6 is now open source! It’s nice to be able to use the same scripting language and commands to manage Windows servers at work that I use to manage my Linux servers at home.&lt;/p&gt;
&lt;p&gt;I haven’t posted anything new in a while (I’ve written &lt;em&gt;tons&lt;/em&gt; of stuff but just haven’t thought to post it), but you can see some of my sample PowerShell scripts over on &lt;a href=&#34;https://github.com/jffail&#34;&gt;GitHub&lt;/a&gt;. I’ve also posted some &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer&#34;&gt;/r/DailyProgrammer&lt;/a&gt; challenges as &lt;a href=&#34;https://gist.github.com/jffail&#34;&gt;Gists&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;hugohttpsgohugoio&#34;&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Hugo is a static site generator. The concept is that instead of needing a CMS (content management system… think something like WordPress) to manage posts, pagination, design, etc. on a website that you can instead do it all via plaintext. Hugo allows you to have HTML templates, CSS, and then posts that are authored as Markdown. When you make a new post or change the site in any way, you can recompile your site which is then output as simple HTML and CSS that you can throw onto a web server. New post? Recompile the site and just move the files. Hugo worries about things like how many posts there should be on a page and will adjust it all for you. Need to change information in your header? Just change it one time in your template file and then recompile; there’s no need to use &lt;strong&gt;sed&lt;/strong&gt; through every page and change each of them.&lt;/p&gt;
&lt;p&gt;There are plenty of other static site generators out there (&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; is a popular one), but I’ve found that Hugo is by far the fastest. When your site starts to get large with a lot of pages to parse and generate, generators like Jekyll — which is written in Ruby, an interpreted language — can start to bog down. Hugo is written in Go; it’s literally one binary, and that allows it to be super speedy even when your site is large.&lt;/p&gt;
&lt;h3 id=&#34;nethackhttpsgithubcomnethacknethack&#34;&gt;&lt;a href=&#34;https://github.com/NetHack/NetHack&#34;&gt;NetHack&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To end the post on a fun note, NetHack is an incredible video game. It’s easy to look at it and assume that it’s a simplistic, basic game. It runs in a terminal (though variants with tiles and graphics do exist), and everything in the game is represented as an ASCII symbol. Your character? The @ symbol. A kobold? The letter k. The game is also crazy old… it was released in 1987. Here’s what it looks like:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ItsAllAboutOpenSource_Screenshotfrom2019-05-0618-38-44.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It’s a fantasy game so the whole point is to hack-and-slash your way through a procedurally generated dungeon, meaning no two games are the same since each level is random; on top of this is the fact that there are more classes, races, and mechanics than most modern games have.&lt;/p&gt;
&lt;p&gt;Even better is that the game is &lt;em&gt;still being updated&lt;/em&gt;. The latest commit on their GitHub repo was yesterday. Pretty nuts. The game is also a marvel of what’s possible in the C programming language. Imagine making something like this without even being able to use objects.&lt;/p&gt;
&lt;p&gt;NetHack exists for every operating system on the planet, but if you don’t want to bother with installing it you don’t have to. You can instead just hop on the &lt;a href=&#34;https://alt.org/nethack/&#34;&gt;alt.org NetHack server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are, of course, tons of other open source applications I use on the regular — I didn’t even bother getting into operating systems — but these are the ones I use the most frequently and enjoy the most. The most important thing, though… is to &lt;strong&gt;stay pink!&lt;/strong&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Podcast Links</title>
      <link>https://hugo.unusually.pink/unusually-pink-podcast-links/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-podcast-links/</guid>
      <description>As we mentioned in our last episode, we recently got our podcast all over the Internet so you can listen to it regardless of which service(s) you happen to prefer.
Our host for the podcast is Podbean. The posts on the podcast page for each episode will always link to our Unusually Pink Podcast profile there. (Related: we are crushing it on the alliteration front.) We figured most people wouldn’t be listening to it directly from there, though.</description>
      <content>&lt;p&gt;As we mentioned in our &lt;a href=&#34;https://www.unusually.pink/podcast/episode-3-jams-amp-japan&#34;&gt;last episode&lt;/a&gt;, we recently got our podcast &lt;strong&gt;all&lt;/strong&gt; over the Internet so you can listen to it regardless of which service(s) you happen to prefer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkPodcastLinks_up_everywhere.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Our host for the podcast is &lt;a href=&#34;https://www.podbean.com/&#34;&gt;Podbean&lt;/a&gt;. The posts on the &lt;a href=&#34;https://www.unusually.pink/podcast&#34;&gt;podcast page&lt;/a&gt; for each episode will always link to our &lt;a href=&#34;https://unusuallypinkpodcast.podbean.com/&#34;&gt;Unusually Pink Podcast profile&lt;/a&gt; there. (Related: we are &lt;strong&gt;crushing&lt;/strong&gt; it on the alliteration front.) We figured most people &lt;em&gt;wouldn’t&lt;/em&gt; be listening to it directly from there, though. So if you happen to use any of the following services, feel free to give the podcast a follow and stay on top of the latest episodes. Posts from the website for new episodes, of course, will also be posted to our &lt;a href=&#34;https://twitter.com/unusuallypink&#34;&gt;Twitter&lt;/a&gt; and &lt;a href=&#34;https://www.facebook.com/unusuallypinkpodcast&#34;&gt;Facebook&lt;/a&gt; profiles.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://open.spotify.com/show/2rij9eIk5D6GkgdxfcEIVo&#34;&gt;Spotify&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-unusually-pink-podcast/id1461474071&#34;&gt;iTunes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://play.google.com/music/listen?u=0#/ps/I7by7y7faj6e6dj3kgqkbiaw7ia&#34;&gt;Google Play&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/podcasts?feed=aHR0cHM6Ly9mZWVkLnBvZGJlYW4uY29tL3VudXN1YWxseXBpbmtwb2RjYXN0L2ZlZWQueG1s&amp;amp;authuser=0&#34;&gt;Google Podcasts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.stitcher.com/podcast/unusually-pink-podcast&#34;&gt;Stitcher&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why does Google have two? Great question.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Microsoft Edge Insider: It&#39;s Actually Not That Bad</title>
      <link>https://hugo.unusually.pink/microsoft-edge-insider-its-actually-not-that-bad/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/microsoft-edge-insider-its-actually-not-that-bad/</guid>
      <description>If you happened to listen to our Introduction Episode of the podcast, you’ll know that Brandi and I are sysadmins who work together in a highly Microsoft-centric environment. Essentially all of the servers we manage run some flavor of Windows, we make heavy use of Office 365 and Azure, and both of us spend our entire day either typing email into Outlook or commands into PowerShell.
You may read that and think, “Wow, they really like Microsoft stuff.</description>
      <content>&lt;p&gt;If you happened to listen to our &lt;a href=&#34;https://unusuallypinkpodcast.podbean.com/e/episode-0-introduction-1556126516/&#34;&gt;Introduction Episode of the podcast&lt;/a&gt;, you’ll know that Brandi and I are sysadmins who work together in a &lt;em&gt;highly&lt;/em&gt; Microsoft-centric environment. Essentially all of the servers we manage run some flavor of Windows, we make heavy use of Office 365 and Azure, and both of us spend our entire day either typing email into Outlook or commands into PowerShell.&lt;/p&gt;
&lt;p&gt;You may read that and think, “Wow, they really like Microsoft stuff.” At least for me (John, if that’s not clear by now) that’s not the case. I tend to be extremely critical and frequently frustrated with a lot of Microsoft’s offerings. I’ve poured a healthy bit of salt into the Internet over the years at Microsoft’s expense. I could even share some of my more recent frustration with Microsoft products if it wouldn’t spoil what will likely be content for a near-future podcast episode. Suffice to say, there’s a reason one of my former coworkers threw together this image… that’s my face on the can if you’re confused.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/MicrosoftEdgeInsiderItsActuallyNotThatBad_morton.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;And there’s a reason why I made this image at one point. Cut me some slack… I didn’t really know how to use &lt;a href=&#34;https://www.gimp.org/&#34;&gt;GIMP&lt;/a&gt; that well at the time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/MicrosoftEdgeInsiderItsActuallyNotThatBad_admiral_o365.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;That being said, I’m all about trying the new hotness where software is concerned, so I decided to install the &lt;a href=&#34;https://www.microsoftedgeinsider.com/en-us/&#34;&gt;new Microsoft Edge Insider build&lt;/a&gt; on my work machine. If you haven’t been keeping score at home, Microsoft essentially admitted that the current, production version of Edge that ships with Windows 10 is a disaster. No one uses it according to every metric, despite Microsoft’s attempts at forcing it on users. They also accepted that their rendering engine under-performed. Perhaps the biggest problem, though, was how the Edge browser was inextricably tied to the underlying operating system, meaning that Edge essentially only got updates during Microsoft’s major updates to Windows 10. Going 6+ months between browser updates is a pretty massive blow when competitors are releasing new versions every month.&lt;/p&gt;
&lt;p&gt;The new builds of Edge are based on the open-source &lt;a href=&#34;https://www.chromium.org/&#34;&gt;Chromium&lt;/a&gt; project. While perhaps most notably serving as the underpinnings for Google’s behemoth of a browser that has come to dominate the web, &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Chrome&lt;/a&gt;, it’s also come to serve the same function for plenty of other noteworthy browsers, such as &lt;a href=&#34;https://www.opera.com/&#34;&gt;Opera&lt;/a&gt; and &lt;a href=&#34;https://brave.com/&#34;&gt;Brave&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So I threw the Insider build on my work PC to check it out. If you happen to be curious, you can install it alongside the current version of Edge. The icon looks the same but has a green “Dev” stamp over the blue “e”. If you fire it up, it looks essentially like what you’d expect to see opening the current version of Chrome. You get the option to sign in with a Microsoft account, though, rather than a Google account. The various options and settings have been changed up in how they appear, but they’re basically all the same. If you’d like to use an extension, you can select from a subset of Chrome extensions that are currently working with this build of Edge in Microsoft’s own gallery; I’ve read that they’re working to make every extension supported by Chromium and Chrome work with Edge eventually. I was just happy enough that I could get &lt;a href=&#34;https://github.com/gorhill/uBlock&#34;&gt;uBlock Origin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/MicrosoftEdgeInsiderItsActuallyNotThatBad_edge_chromium.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I’ve been running with it as my default browser for a couple of weeks now, and I have to admit that I haven’t run into any issues yet. Everything just works the same as I’d expect, only with a bit of a smaller footprint than with Chrome. I assume this is &lt;a href=&#34;https://www.theverge.com/2019/4/8/18300772/microsoft-google-services-removed-changed-chromium-edge-browser&#34;&gt;due to all of the Google services Microsoft ended up removing&lt;/a&gt;. If so, it almost reminds me of how Firefox was before the Electrolysis rebuild, where it had become a bit slow and clunky due to bloat. Or how Opera was back in the day when the browser featured a mail client, IRC client, toaster oven, vacuum cleaner, etc. A good feature purge isn’t necessarily the worst thing to happen to some software projects as they expand over time.&lt;/p&gt;
&lt;p&gt;Speaking of &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/new/&#34;&gt;Firefox&lt;/a&gt;, one of the downsides to this is the fact that it means yet &lt;strong&gt;another&lt;/strong&gt; browser is now based on Chromium. Outside of looking as extremely niche browsers, this means that Firefox is now the only non-Chromium-based mainstream browser. That’s a sticky situation since it means that a single project (Chromium) can essentially dictate the growth and direction of the web if they so choose. If that project opted to move away from established standards to do their own thing, for example, no one would be able to ignore that many impacted users. Switching to a Chromium base is a situation that I would describe as good for Microsoft and extremely bad for the web as a whole.&lt;/p&gt;
&lt;p&gt;And if you’re one of the three people in the world using the current stable version of Edge with Windows 10 and you’re mad that it will be going away, please just read &lt;a href=&#34;https://www.forbes.com/sites/daveywinder/2019/04/21/unpatched-windows-10-vulnerability-uses-microsoft-edge-to-steal-data-how-to-mitigate-the-risk/#503de7ad673f&#34;&gt;this article about a nasty Edge vulnerability that Microsoft has declined to patch&lt;/a&gt;. Then please stop using that browser.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>The Unusually Pink Playlist</title>
      <link>https://hugo.unusually.pink/the-unusually-pink-playlist/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/the-unusually-pink-playlist/</guid>
      <description>Do you want to listen to the dankest collection of music since my 2018 Spotify wrapped post? If your answer is yes (and really… I don’t see a single possible reason why it shouldn’t be) then you’re in luck. We are pleased to introduce the Unusually Pink Playlist. Featuring tracks loved by Brandi and I, most will be more recent discoveries as opposed to old favorites; we don’t really want to start off a brand new playlist with 10+ hours of material right out of the gate… even if it would be really good material.</description>
      <content>&lt;p&gt;Do you want to listen to the dankest collection of music since my &lt;a href=&#34;https://www.unusually.pink/blog/2018-in-music-spotify-wrapped&#34;&gt;2018 Spotify wrapped post&lt;/a&gt;? If your answer is yes (and really… I don’t see a single possible reason why it shouldn’t be) then you’re in luck. We are pleased to introduce the &lt;a href=&#34;https://open.spotify.com/playlist/26aNDr4SulSOQm1vEzUMpG&#34;&gt;&lt;strong&gt;Unusually Pink Playlist&lt;/strong&gt;&lt;/a&gt;. Featuring tracks loved by Brandi and I, most will be more recent discoveries as opposed to old favorites; we don’t really want to start off a brand new playlist with 10+ hours of material right out of the gate… even if it would be &lt;em&gt;really&lt;/em&gt; good material.&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Brandi and I have a lot in common when it comes to music, but we also a good bit of diversity and different methods of finding new music. We just start putting this playlist together the other day, but you’ll eventually start seeing plenty of indie, hip-hop, and EDM making the rounds along with some pop.&lt;/p&gt;
&lt;p&gt;If you find yourself enjoying the playlist, feel free to give it a follow! Song recommendations are always welcome; hit us up on Twitter &lt;a href=&#34;https://twitter.com/UnusuallyPink&#34;&gt;@UnusuallyPink&lt;/a&gt;.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Switching To Squarespace</title>
      <link>https://hugo.unusually.pink/switching-to-squarespace/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/switching-to-squarespace/</guid>
      <description>If you happened to see this site around the time when the first post went up, you might notice that:
  The site looks very different now.
  A lot of what’s in that first post no longer seems to be true.
  For example, this is not the Rusty theme for Hugo. Those technically savvy would also notice that the site no longer has the same DNS record value as laifu.</description>
      <content>&lt;p&gt;If you happened to see this site around the time when the &lt;a href=&#34;https://www.unusually.pink/blog/its-all-about-being-unusually-pink&#34;&gt;first post&lt;/a&gt; went up, you might notice that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The site looks very different now.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A lot of what’s in that first post no longer seems to be true.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example, this is &lt;em&gt;not&lt;/em&gt; the &lt;a href=&#34;https://themes.gohugo.io/hugo-theme-rusty/&#34;&gt;Rusty&lt;/a&gt; theme for Hugo. Those technically savvy would also notice that the site no longer has the same DNS record value as &lt;a href=&#34;https://laifu.moe&#34;&gt;laifu.moe&lt;/a&gt; where things were originally hosted. That’s because the site is no longer running on my own web server and is not created using Hugo. There were a few reasons for this. The main was just that I’m &lt;strong&gt;really&lt;/strong&gt; bad at web design. The Rusty theme in Hugo is pretty light on imagery, which I’m cool with. Once we decided to actually make &lt;em&gt;Unusually Pink&lt;/em&gt; into a thing and do a podcast, though, we had our &lt;strong&gt;amazing&lt;/strong&gt; logos made by the uber-talented &lt;a href=&#34;https://www.jpfdesigns.com/&#34;&gt;JPFDesigns&lt;/a&gt;. Integrating those into the Rusty theme for Hugo was a bit more than I was up for; CSS is legitimately the final boss of my life, and my life is (apparently) an NES &lt;em&gt;Contra&lt;/em&gt; game; I couldn’t do it.&lt;/p&gt;
&lt;p&gt;The other reason was just that it allows for &lt;strong&gt;much&lt;/strong&gt; better reliability. The site isn’t beholden to my ability to not mess up my web server. Not that it’s particularly likely for me to do something to brick it (I’ve been using Linux and Nginx for my web servers for ages now), but it’s possible. I was also responsible for backups, which I’d prefer to take off of my own hands if possible.&lt;/p&gt;
&lt;p&gt;The last reason was that the site really needed to be divided from one main section (e.g. the blog I originally planned just to do &lt;strong&gt;something&lt;/strong&gt; with the domain) to two sections: a blog and a list of podcast episodes. While I was able to just dump a &lt;strong&gt;/podcast&lt;/strong&gt; directory into my &lt;strong&gt;static&lt;/strong&gt; folder for Hugo, it meant that posting podcast episodes and summaries was now an entirely manual process rather than something assisted by a CMS-esque system like Hugo.&lt;/p&gt;
&lt;p&gt;Swapping to &lt;a href=&#34;https://www.squarespace.com/&#34;&gt;Squarespace&lt;/a&gt; allowed me to let someone far smarter than me figure out all of that within a theme; all I had to do was upload some images (Squarespace is awesome at scaling images for me, even when it needed to make one tiny for the favicon) and then swap around a few of the colors in the theme to get something &lt;em&gt;unusually pink&lt;/em&gt;. I was also able to simply add two blogs to the site; one is a normal blog and the other will have posts for each podcast episode. In this way, both sections of the site are managed by a CMS rather than being done manually. Doing it manually may not seem like &lt;strong&gt;too&lt;/strong&gt; big of a deal at first, but once you start to get too many posts for a single page, creating and manually updating the pagination after each new post would be enough to drive someone insane.&lt;/p&gt;
&lt;p&gt;As for choosing Squarespace, it’s the one I’ve heard the most about through various avenues on the Internet. Their pricing was reasonable, and I figured it seemed like a safe bet since I know a few other people who have experience with them. The other recommendation I got was Wix, which I admittedly had never heard of previously. Looking at the &lt;a href=&#34;https://www.wix.com/upgrade/website&#34;&gt;pricing for Wix&lt;/a&gt; compared to the &lt;a href=&#34;https://www.squarespace.com/pricing&#34;&gt;pricing for Squarespace&lt;/a&gt;, though, I think it’s clear that Squarespace is a better deal. The Wix $11 USD per month package is pretty lackluster, especially when you look at 2 GB of bandwidth and 3 GB of storage. To get something more comparable to Squarespace’s $12 per month package that includes unlimited bandwidth and storage, you’d need the $14 per month plan from Wix… and that still doesn’t give you unlimited storage.&lt;/p&gt;
&lt;p&gt;Expect the site to still go through a few minor changes as we continue to tweak the layout, colors, and everything else. Feel free to drop any feedback to our &lt;a href=&#34;https://twitter.com/UnusuallyPink&#34;&gt;Twitter profile&lt;/a&gt;!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>2018 In Music: Spotify Wrapped</title>
      <link>https://hugo.unusually.pink/2018-in-music-spotify-wrapped/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/2018-in-music-spotify-wrapped/</guid>
      <description>I’ve used quite a few streaming services for music throughout the years (I feel old remembering when Pandora was new), but Spotify is by far my favorite. The main value I see from it as opposed to similar, competing services is the amount of personalized, curated content that Spotify generates for me on a regular basis. Each Monday I get a Discover Weekly playlist with music I’ve never listened to before but which is similar to other things I’ve enjoyed.</description>
      <content>&lt;p&gt;I’ve used quite a few streaming services for music throughout the years (I feel old remembering when Pandora was new), but Spotify is by far my favorite. The main value I see from it as opposed to similar, competing services is the amount of personalized, curated content that Spotify generates for me on a regular basis. Each Monday I get a Discover Weekly playlist with music I’ve never listened to before but which is similar to other things I’ve enjoyed. Every Friday I get a Release Radar playlist with new releases that also match my taste. These only get better over time as the service learns more and more of what I like.&lt;/p&gt;
&lt;p&gt;Along with these weekly goodies, Spotify also does neat stuff for various milestones, and that’s especially true at the end of the calendar year. For example, each December I get a yearly playlist with my top 100 songs from the past year. It’s always an interesting listen to see how varied my tastes were throughout the year. Accompanying that is &lt;a href=&#34;https://spotifywrapped.com&#34;&gt;Spotify Wrapped&lt;/a&gt; which provides all sorts of interesting statistics about my listening. As someone who keeps Spotify tied to &lt;a href=&#34;https://last.fm&#34;&gt;Last.fm&lt;/a&gt; because I love statistics, I always look forward to Wrapped. Here are some of my interesting notes from 2018 (no pun intended.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;8,131: The total number of unique songs I listened to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;50,739: The total number of minutes I listened to music.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For those keeping score at home, that’s over 35 &lt;strong&gt;days&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My top artist was Tegan and Sara.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I spent 32 hours listening just to their tracks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Overall top artists:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Tegan and Sara&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grimes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eminem&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coeur De Pirate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;St. Vincent&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Overall top tracks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;RAP DEVIL (Machine Gun Kelly)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Los Ageless (St. Vincent)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1940 - AmpLive Remix (The Submarines)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flesh without Blood (Grimes)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do You Feel It? (Chaos Chaos)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Overall top genres:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Indie&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rock&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dance/Electronic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hip Hop&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I listened to “non-mainstream” artists 69% more than the average Spotify listener.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I have no idea what’s considered mainstream or whether Spotify is taking the “average” listener to be all listeners or only Premium accounts. Regardless, it makes me feel special.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here’s to more music in 2019.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Firebase Update Control Error</title>
      <link>https://hugo.unusually.pink/firebase-update-control-error/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/firebase-update-control-error/</guid>
      <description>One of my websites (not this one) is hosted via Firebase. It’s a largely static site that I rarely need to touch. I manage it from their CLI running on a VPS that I do some coding on so that I can access it regardless of which of my numerous devices I happen to be using. Since I don’t touch the site regularly, though, the Firebase tools tend to get a bit out of date.</description>
      <content>&lt;p&gt;One of my websites (not this one) is hosted via &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;. It’s a largely static site that I rarely need to touch. I manage it from &lt;a href=&#34;https://firebase.google.com/docs/cli/&#34;&gt;their CLI&lt;/a&gt; running on a VPS that I do some coding on so that I can access it regardless of which of my numerous devices I happen to be using. Since I don’t touch the site regularly, though, the Firebase tools tend to get a bit out of date. I needed to push a minor change the other day and figured I’d check for an update:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo npm install -g firebase-tools
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Instead of completing happily, though, I got the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm ERR! path /usr/local/bin/firebase
npm ERR! code EEXIST
npm ERR! Refusing to delete /usr/local/bin/firebase: ../lib/node_modules/firebase-tools/bin/firebase symlink target is not controlled by npm /usr/local/bin
npm ERR! File exists: /usr/local/bin/firebase
npm ERR! Move it away, and try again.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I’m a bit embarrassed that I did a bunch of super unnecessary troubleshooting at first instead of just &lt;em&gt;reading&lt;/em&gt; the error. When I finally got to that point because things like clearing the &lt;code&gt;npm&lt;/code&gt; cache didn’t work, I saw noticed this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;File exists: /usr/local/bin/firebase
Move it away, and try again.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Okay, seems sensible enough. I first just renamed it in the same directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo mv /usr/local/bin/firebase /usr/local/bin/firebaseBKP
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I re-ran the &lt;code&gt;npm&lt;/code&gt; installation command, and sure enough it worked without any issues. I verified I could actually see &lt;code&gt;firebase&lt;/code&gt; in my &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;which firebase
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And that it was the newer version:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;firebase --version
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With that out of the way, I simply deleted the file I renamed:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo rm /usr/local/bin/firebaseBKP
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then I could push the update to my site without any issues. To be honest I’m not entirely sure why or how that file wouldn’t be controlled by &lt;code&gt;firebase&lt;/code&gt; or it couldn’t be removed by running the command under &lt;code&gt;sudo&lt;/code&gt;, but I’m happy that it had a clear error message that allowed me to fix things easily enough… once I actually, you know, &lt;em&gt;read&lt;/em&gt; the error message.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Illness Movie Binge</title>
      <link>https://hugo.unusually.pink/illness-movie-binge/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/illness-movie-binge/</guid>
      <description>I’ve been sick for the past week, and with a long weekend this past weekend I did what any sane sick person should do during cold weather: bundled up on the couch with blankets, a lot of tea, and watched movies. I’m usually too lazy to pay attention to a full movie, but given that I was camped out on the couch for entire days on end with a throbbing sinus headache, keeping track of the plot of a 2 hour movie was easier than keeping track of the plot for multiple television episodes.</description>
      <content>&lt;p&gt;I’ve been sick for the past week, and with a long weekend this past weekend I did what any sane sick person should do during cold weather: bundled up on the couch with blankets, a &lt;em&gt;lot&lt;/em&gt; of tea, and watched movies. I’m usually too lazy to pay attention to a full movie, but given that I was camped out on the couch for entire days on end with a throbbing sinus headache, keeping track of the plot of a 2 hour movie was easier than keeping track of the plot for multiple television episodes. I ended up watching 7 movies across 3 days which is more movies than I watched through all of 2018. I’m not about to even come close to writing a review for each movie given how particular I get after doing so much film analysis in college, but I figured I’d jot down some quick thoughts on each of the films I happened to watch. Most of them were titles that were just added to streaming services I use. I watched each movie without looking at basically anything, from reviews to earnings so I could go into it as blind as possible, though with some of the more… popular recent titles (ahem, &lt;em&gt;Bird Box&lt;/em&gt;) I had already seen a lot of chatter. For most of them I went back and checked that info out afterward, though.&lt;/p&gt;
&lt;p&gt;I didn’t intend for this since I knew basically nothing about the majority of the movies I watched, but most of the live action ones had extremely small casts. Go figure.&lt;/p&gt;
&lt;p&gt;It should go without saying but &lt;strong&gt;basically the rest of this post will contain spoilers. Skip a film if you don’t want something ruined.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;annihilationhttpsenwikipediaorgwikiannihilation_film-2018&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Annihilation_(film)&#34;&gt;Annihilation&lt;/a&gt; (2018)&lt;/h2&gt;
&lt;p&gt;I mainly watched this because I like pretty much anything with Natalie Portman, which already starts the bias train off on the right foot. I found the movie to be pretty entertaining. I liked the creepy, new-weird vibe that I assume comes from the novel it was based on (which I immediately added to my wishlist after watching this.) I thought the small cast did quite well, and they kept the tension on edge. The non-linear timeline, aided between Portman’s recounting of events as the basis for the film plus the characters’ self-proclaimed inability to keep track of time within “The Shimmer”, also made it fun to try to piece together what was happening. The end was trippy as hell (though not the trippiest of what I watched.) Before the &lt;em&gt;very&lt;/em&gt; end I was tempted to think the idea of killing the alien being which spawned “The Shimmer” caused the whole thing to self-implode was a little too neat-and-tidy, but Lena and Kane’s ending scene where neither believes they are their true selves combined with the changing irises brought it back. I thought it was definitely worth watching, though I can understand how it flopped at the box office. I’m also curious where the story goes from here since I know there are two additional books in the series; I’ll be checking them out for sure.&lt;/p&gt;
&lt;p&gt;If you like weird sci-fi that won’t always make complete sense and isn’t entirely explained, I’d recommend giving this one a shot.&lt;/p&gt;
&lt;h2 id=&#34;bird-boxhttpsenwikipediaorgwikibird_box_film-2018&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Bird_Box_(film)&#34;&gt;Bird Box&lt;/a&gt; (2018)&lt;/h2&gt;
&lt;p&gt;I had heard a &lt;em&gt;ton&lt;/em&gt; about this movie over the past month, not the least of which being the idiots doing the “Bird Box Challenge” and injuring themselves. I knew the basic premise of the plot, and I actually own the book though I haven’t read it yet. More on that later. I found the concept to be &lt;em&gt;extremely&lt;/em&gt; interesting; otherworldly beings that inflict anyone (well… almost anyone) who looks upon them with such powerful emotions they’re compelled beyond control to kill themselves. The film started off just as promising, and the scene with Malorie and her sister leaving the hospital was truly intense. After things settled in at the house, though, the problems with the film began. There were just &lt;em&gt;so&lt;/em&gt; many plot holes that the whole thing barely made any sense. Just the ones I happened to remember right now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The harrowing trip to the grocery store went relatively smoothly aside from when the car was surrounded by the creatures, despite the fact that shots of the street prior showed complete chaos of wrecks and road blockages. How the hell would you actually drive through that with just GPS (the display for which is always delayed…) and proximity sensors is pretty rich.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After Machine Gun Kelly and whoever the woman he was with (most of the characters weren’t memorable enough for me to recall the names… that’s bad), they somehow continued to get food without the car? They lived in the house for YEARS, based on the age of the children. I don’t think they got enough supplies for that from a single trip.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When Psycho Dude (again, I don’t recall the name) made most of the house see the creatures and commit suicide right after the birth of the children, he opens the windows in the bedroom where Malorie and Olympia gave birth. Olympia destroys the window when she jumps out of it. Somehow this is later repaired without sight. Wut?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Malorie, Tom, and the children randomly relocate to a much more secluded house from which Malorie eventually departs on the river. How the hell did they get there? Was it that easy to just walk outside, not listen to the temptation of the creatures, and stumble upon it? I could &lt;em&gt;maybe&lt;/em&gt; buy that, but if that’s true then it’s horribly contradicted later by the next point.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why the fuck would you make someone &lt;em&gt;look&lt;/em&gt; when going through the rapids on the river? When reaching the rapids, why not just land the boat and walk around them? When this initially came up, I assumed there was significant river travel after the rapids, though that obviously wasn’t the case since Malorie and the children run to the rescue location after (unsurprisingly) overturning their boat. The only thing that makes sense is the idea that getting onto land is just &lt;strong&gt;way&lt;/strong&gt; too dangerous for the entire group, thus putting a single person in danger by looking is a safer bet. If that’s the case, though, then I have to ask again how the hell they randomly got to this house in the middle of nowhere. The continuity was just awful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A last, more general point, but Malorie seemed to have an almost preternatural ability to see when blindfolded if it was really important. In the last mad dash to the doorway of the school for the blind, for example, she 1.) runs straight to the door, 2.) sets the children down right in front of the single step, and 3.) steps over it without issue. In the forest before that, she tripped over every fucking log in the place.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the whole, I thought &lt;em&gt;Bird Box&lt;/em&gt; was a great idea that was ruined by an absolutely awful movie. I’m still looking forward to reading the book in the hopes that it does the concept more justice.&lt;/p&gt;
&lt;p&gt;Unless you’re literally dying to see what all of the noise in the media regarding this movie is about, I’d skip it.&lt;/p&gt;
&lt;h2 id=&#34;iohttpsenwikipediaorgwikiio_film-2019&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Io_(film)&#34;&gt;IO&lt;/a&gt; (2019)&lt;/h2&gt;
&lt;p&gt;I knew literally nothing about this film going in, but it seemed sci-fi-esque and was new on Netflix. The concept was interesting, and not particularly far-fetched given the way the world is going. The beginning and end of the movie were pretty good, but I felt that the middle was really bogged down by preaching “Being alone is bad, m’kay?” As someone who is pretty lonely, I don’t particularly like that motif in films. People who are lonely already know this and feel shitty about it. People who aren’t lonely are like, “Yeah, whatever, that would suck.” We don’t need an hour about it. That being said, I felt that Margaret Qualley did a great job of portraying someone who was quirky and awkward from years of isolation in the interactions between Sam and Micah.&lt;/p&gt;
&lt;p&gt;When I initially watched the film, I thought the ending was terrible. Sam decides to stay on Earth, removes her helmet in a toxic environment, and somehow lives. To me that just seems way too implausible. The film showcased how a queen bee had adapted to the new environment when it lived through the toxic storm. Bees live way shorter lives than people, though. Given that Sam had never experienced Earth “before”, we can figure that she can her father had been working on these projects essentially her entire life. I can believe that in a few generations of bees that mutations would occur to allow for this. A single person just randomly mutating to survive in a toxic environment? Yeah, no.&lt;/p&gt;
&lt;p&gt;After thinking it over, though, I’m choosing to interpret the ending in a different way that makes me like the film much more. My thought is that Sam didn’t become immune to the toxic environment but that she actually died when the scene of her removing her helmet faded to black. The ending scene of Sam on the beach with the child is the final iteration of her recurring dream rather than reality. Maybe that’s macabre, but it makes for a much better film.&lt;/p&gt;
&lt;p&gt;I think pretty much everyone should watch this one to develop their own opinion.&lt;/p&gt;
&lt;h2 id=&#34;closehttpsenwikipediaorgwikiclose_film-2019&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Close_(film)&#34;&gt;Close&lt;/a&gt; (2019)&lt;/h2&gt;
&lt;p&gt;I watched this soley because I saw Noomi Rapace was the star, and I’ve loved her since her work in &lt;em&gt;The Girl With The Dragon Tattoo&lt;/em&gt;. After the opening scene of Sam saving the lives of the journalists in Sudan in true badass fashion, I was pretty stoked. The movie was off to a great start. When it switched gears to “babysit the bratty rich girl”, I may have audibly groaned. I maintained an affinity for Sam throughout the film just due to my bias for Rapace, but I literally spent the whole film wishing she would just abandon Zoe and move on. There were a handful of sick action sequences, but on the whole the film was a super generic “z0mg, gotta find who is betraying who!” film with the most predictable “plot twist” possible. I almost wanted to be engrossed by the generic plot just to distract me from how much I hated Zoe. The ending was also extremely anticlimactic with Zoe and Rima mostly holding off the &lt;strong&gt;lone gunman, who was the leader of the dumbest criminal organization on Earth&lt;/strong&gt; until Sam could remember to stop guessing numbers that couldn’t possibly be the birthday for a teenage brat and get herself out of a locked room. Oh, and that gunman’s sole contact to their buyer was murdered by Sam like 45 seconds after the gunman and his contact spoke. So he wasn’t getting paid. That dude was straight up &lt;strong&gt;horrible&lt;/strong&gt; at his job.&lt;/p&gt;
&lt;p&gt;Unless you adore Noomi Rapace beyond all understanding, definitely skip this movie. Just watch &lt;em&gt;The Girl With The Dragon Tattoo&lt;/em&gt; for the 500th time… you’ll be better off for it.&lt;/p&gt;
&lt;h2 id=&#34;godzilla-city-on-the-edge-of-battlehttpsenwikipediaorgwikigodzilla_city_on_the_edge_of_battle-2018&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Godzilla:_City_on_the_Edge_of_Battle&#34;&gt;Godzilla: City on the Edge of Battle&lt;/a&gt; (2018)&lt;/h2&gt;
&lt;p&gt;I took a break from live action films to &lt;a href=&#34;https://laifu.moe&#34;&gt;weeb&lt;/a&gt; out for a little bit. This film is the sequel to 2017’s &lt;em&gt;Godzilla: Planet of the Monsters&lt;/em&gt;. It’s a sequel in the way that &lt;em&gt;Lord of the Rings: The Two Towers&lt;/em&gt; is a sequel; they’re parts of a trilogy and just continue the unfinished story. The animation from all of these films is absolutely top-notch. I don’t watch dubs, but the Japanese voice actors did really well to my supremely untrained ear. The pacing for this film was much better than with the original title that was saddled with a good bit of setup. Beyond that, just &lt;em&gt;everything&lt;/em&gt; was better, to be honest. The action sequences were more engaging with less “let’s do the same thing over and over for 15 minutes.” The plot is what takes it on the nose up until the very end, though, as everything is mostly straightforward as can be right up until the revelation that the Bilusaludo’s vision of “victory” looks quite different from what the humans and Exif envision. And yes, if you’re curious I recalled the name and spelling of the fictional race “Bilusaludo” when I don’t recall the normal, American names of the half-dozen characters in &lt;em&gt;Bird Box&lt;/em&gt;. That should say something about &lt;em&gt;Bird Box&lt;/em&gt;. I felt like Haruo’s decision between losing to Godzilla or sacrificing humanity to achieve a Pyrrhic victory was the first sense of emotional discord in the series beyond the general rage at Godzilla. Haruo’s swallowing of that rage in a refusal to concede Earth also set a terrific basis for the third film.&lt;/p&gt;
&lt;h2 id=&#34;godzilla-the-planet-eaterhttpsenwikipediaorgwikigodzilla_the_planet_eater-2019&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Godzilla:_The_Planet_Eater&#34;&gt;Godzilla: The Planet Eater&lt;/a&gt; (2019)&lt;/h2&gt;
&lt;p&gt;In easily the best film of the series, this one was truly enjoyable to watch. Building on the themes from the end of &lt;em&gt;City on the Edge of Battle&lt;/em&gt; and setting up for the conclusion of the series, the film plays upon the idea that both 1.) people are never satisfied with what they have, 2.) hate breeds hate, and 3.) everyone has their own agenda. It was a little similar to the Bilusaludo reveal of wanting nanometal to encompass the Earth, but the Exif long-con to use humanity to summon their demi-god Ghidorah to Earth as an offering was unexpected… even if it was a little rich that both of the alien races helping humanity essentially turned on them within a span of a day or two. I also enjoyed the play on humanity’s own weakness for so easily falling into the claws of religion rather than looking at the logical conclusion that the Houtua’s work saved them from the nanometal, not a higher power.&lt;/p&gt;
&lt;p&gt;As is so commonly the case in anime, the final confrontation between Haruo and Metphies was needlessly dramatic due to Haruo going by himself rather than just taking a few other people along with him, but oh well. The real ending was honestly pretty poignant with Haruo seeing humanity’s assimilation into the Houtua culture (which views “winning” as living and “losing” as dying) and realizing that he alone was keeping alive the hatred which allows creatures such as Godzilla to be created in the first place. Maybe it was just to drive the point home how strong his hatred was, but it was a little surprising to me how unemotional Haruo was in his final conversation with Maina or even the one before that where she revealed the Houtua have no word for “hate”, but it felt meaningful nonetheless when Haruo opted to kill himself to safeguard the future of humanity, even if it wasn’t the future he wanted.&lt;/p&gt;
&lt;p&gt;It’s a bit of a slog to get through the first film and parts of the second, but I think they’re worth watching to experience the third. I’m not normally a Godzilla fan, but this was just a terrific anime film in general. If you do watch it, stick around until after the credits of &lt;em&gt;The Planet Eater&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;2036-origin-unknownhttpsenwikipediaorgwiki2036_origin_unknown-2018&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/2036_Origin_Unknown&#34;&gt;2036 Origin Unknown&lt;/a&gt; (2018)&lt;/h2&gt;
&lt;p&gt;By far the trippiest of the films I watched, I opted into this one just because Katee Sackhoff is the star, and I absolutely &lt;strong&gt;loved&lt;/strong&gt; her in &lt;em&gt;Battlestar Galactica&lt;/em&gt;. And when I say she’s the “star”, it’s a bit of injustice because she’s literally one of two actors with any significant screen time; the other actor gets maybe 10 minutes. She solo acts pretty much the entire thing, which is insane. When the film first reveals the mysterious cube on Mars, I was prepared for a shitty &lt;em&gt;2001: A Space Odyssey&lt;/em&gt; rip-off. It quickly turned into much more than that, though, as the film really explored the place of AI in humanity’s future and an almost &lt;em&gt;Ghost in the Shell&lt;/em&gt;-esque questioning of the nature of one’s own reality.&lt;/p&gt;
&lt;p&gt;I can’t even give a good recounting of the end simply because I don’t quite fully understand it yet. ARTI &lt;em&gt;seems&lt;/em&gt; to have destroyed the Earth and all of humanity along with it, opting to use Mack as the basis for an android representative of what humanity could be as it leverages the cube to meet an alien civilization. While tons of people have theories about the film, I took most of it at face value. After Mack dies from suffocation when the Earth is destroyed, she sports the same injuries she had in the video to the android version of herself, though I can’t account for when that filming would have taken place given how little time there was between the assault on the mission control room by security forces, Earth’s destruction, and Mack’s death. My best guess is that Mack from the film is not the human Mack from the video, but that ARTI has been running this same simulation over and over as a sort of Turing test to produce the best possible android version of Mack that he can. Now that I know what happens, I really think I need to give this one another watch to make more sense of it. The fact that I’m willing to do that speaks volumes for the film, though. Despite a low budget and virtually &lt;em&gt;no&lt;/em&gt; cast beyond Sackhoff, it was a fantastic watch.&lt;/p&gt;
&lt;p&gt;If you like sci-fi and don’t mind a pretty cerebral ride, you owe it to youself to check this one out. Just be aware that you’ll likely feel pretty lost at the end and, like me, either want to watch it again or just feel like you wasted your time. Your mileage may vary.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>It&#39;s all about being Unusually Pink.</title>
      <link>https://hugo.unusually.pink/its-all-about-being-unusually-pink./</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/its-all-about-being-unusually-pink./</guid>
      <description>This domain was a completely random purchase. Earlier today while taking a break from work (which was sorely needed… I had 3 weeks off over the holidays, and coming back today was not easy), I decided to hop on Mastodon for the first time in quite a while. A friend of mine who was previously on the same instance as me had apparently swapped to a different instance during the month or so that I was gone.</description>
      <content>&lt;p&gt;This domain was a completely random purchase. Earlier today while taking a break from work (which was sorely needed… I had 3 weeks off over the holidays, and coming back today was &lt;em&gt;not&lt;/em&gt; easy), I decided to hop on Mastodon for the first time in quite a while. A friend of mine who was previously on the same instance as me had apparently swapped to a different instance during the month or so that I was gone. I just happened to get lucky enough that another individual I follow happened to boost a toot from him; this friend was using the same avatar on his new instance that he used on the previous instance, so I immediately knew it was him. In seeing what instance he was on, I was a bit surprised. It had a &lt;code&gt;.pink&lt;/code&gt; TLD. I had no idea &lt;code&gt;.$COLORS&lt;/code&gt; was a thing now.&lt;/p&gt;
&lt;p&gt;I hopped over to my registrar of choice (&lt;a href=&#34;https://namecheap.com&#34;&gt;Namecheap&lt;/a&gt;) and saw that I could snag a domain for just $2.88 USD. It was a no-brainer. This was especially true because another friend of mine has a saying about the color pink. She doesn’t normally enjoy pink things, but she likes things which are (to quote her) “unusually pink.” A pink heart? Boring. A pink &lt;a href=&#34;https://www.razer.com/quartz&#34;&gt;Razer keyboard and mouse combo&lt;/a&gt;? Unusually pink and therefore extremely cool. (If you happen to be curious, I own both that keyboard and mouse. They match wonderfully with the pink LEDs in my gaming desktop. Bonus points to me if I’m using them to play Overwatch while wearing my pink Mercy t-shirt.) Hopefully she wasn’t too mad that I snagged this domain. If you’re reading this, I’m sorry. But I did offer up a sub-domain of her choice should she want one!&lt;/p&gt;
&lt;p&gt;At any rate, I made the purchase but had no idea what to do with it. After rolling a few things around in my mind, I decided that I would just make a blog on it. I used to blog a &lt;em&gt;lot&lt;/em&gt; back in my college days, and I managed to garner enough readership that a few companies would occasionally send me free anime and video games if I promised to write a review on my blog. I lost my luster for writing a few years back, but maybe this will motivate me to do it more frequently. I already had the hosting space available on my VPS currently running &lt;a href=&#34;https://laifu.moe&#34;&gt;laifu.moe&lt;/a&gt;, which doesn’t need all of the resources on the server by a longshot. Plus, I found this sick theme! It’s &lt;a href=&#34;https://themes.gohugo.io/hugo-theme-rusty/&#34;&gt;Rusty&lt;/a&gt; from the Hugo Themes gallery. It also gave me an excuse to learn how to use site blocks in Nginx as I’ve used Nginx for years but never with multiple sites on the same server. Spoiler alert: it’s super easy to do.&lt;/p&gt;
&lt;p&gt;Hopefully I’ll put up more posts in the near future! They’ll be… unusually pink.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>PSA: Get Ready For New Let&#39;s Encrypt Validation</title>
      <link>https://hugo.unusually.pink/psa-get-ready-for-new-lets-encrypt-validation/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/psa-get-ready-for-new-lets-encrypt-validation/</guid>
      <description>If you’re using Let’s Encrypt, now would be a really great time to make sure that you’re ready for them to stop supporting ACME TLS-SNI-01 domain validation. I got an email a couple of days ago (as I assume everyone using Let’s Encrypt did) letting me know this change was coming. I had nothing to actually do, but going through the validation was super easy and is likely worth the time to ensure your site(s) aren’t impacted.</description>
      <content>&lt;p&gt;If you’re using &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let’s Encrypt&lt;/a&gt;, now would be a really great time to make sure that you’re ready for them to stop supporting ACME TLS-SNI-01 domain validation. I got an email a couple of days ago (as I assume everyone using Let’s Encrypt did) letting me know this change was coming. I had nothing to actually do, but going through the validation was super easy and is likely worth the time to ensure your site(s) aren’t impacted. March 13th is the deadline for ACME TLS-SNI-01 to no longer function, so there’s still a lot of time to take a couple of minutes and verify you’re in good shape.&lt;/p&gt;
&lt;p&gt;*Note: I’m using &lt;code&gt;certbot&lt;/code&gt;, which makes this whole thing super easy. If you’re &lt;strong&gt;not&lt;/strong&gt; using &lt;code&gt;certbot&lt;/code&gt; then your steps will be different.*&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://letsencrypt.org/docs/staging-environment/&#34;&gt;Let’s Encrypt staging environment&lt;/a&gt; already has disabled ACME TLS-SNI-01 validation, so checking against that is a good test. As a &lt;code&gt;certbot&lt;/code&gt; user, I also needed to validate that I was using at least version 0.28 of the application, which is simple enough to do via:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;certbot --version    
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That appears to be the latest version offered by the PPA: &lt;code&gt;ppa:certbot/certbot&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Testing a &lt;code&gt;certbot&lt;/code&gt; run against the staging environment is toggled via the &lt;code&gt;--dry-run&lt;/code&gt; switch. If you do a dry run of your renewal against the staging environment and everything comes back successful, you should be in good shape:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo certbot renew --dry-run
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;My certs all validated successfully, so everything is ready to go for the change. I presume if there are any failures then the dry run will alert you to what needs to be fixed; I can’t say for sure since I was lucky enough to not see any of those. Full instructions from Let’s Encrypt are &lt;a href=&#34;https://community.letsencrypt.org/t/how-to-stop-using-tls-sni-01-with-certbot/83210&#34;&gt;available on their site&lt;/a&gt;, though.&lt;/p&gt;
&lt;p&gt;Happy encrypting!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>The Accidentals Show</title>
      <link>https://hugo.unusually.pink/the-accidentals-show/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/the-accidentals-show/</guid>
      <description>As I’ve mentioned before, I’m a pretty big fan of music. I link my Spotify account to Last.fm for all of the juicy statistics, and I feel like I’ve been a complete loser if my weekly report doesn’t have at least 24 hours of listening on it. One of the things I’ve never really done much of, though, is live music. I’ve wanted to start attending more events, though a bit of social anxiety can make that challenging (though it helps that many of the shows I’d want to go to are at bars… drinking making social anxiety more tolerable.</description>
      <content>&lt;p&gt;As I’ve &lt;a href=&#34;https://unusually.pink/post/2018-wrapped/&#34;&gt;mentioned before&lt;/a&gt;, I’m a pretty big fan of music. I link my Spotify account to &lt;a href=&#34;https://www.last.fm/user/johnfail&#34;&gt;Last.fm&lt;/a&gt; for all of the juicy statistics, and I feel like I’ve been a complete loser if my weekly report doesn’t have at least 24 hours of listening on it. One of the things I’ve never really done much of, though, is live music. I’ve wanted to start attending more events, though a &lt;em&gt;bit&lt;/em&gt; of social anxiety can make that challenging (though it helps that many of the shows I’d want to go to are at bars… drinking making social anxiety more tolerable.)&lt;/p&gt;
&lt;p&gt;The final push, though, came a few weeks ago when I got an email from Spotify about an upcoming show. I’ve received a few of these emails before where Spotify finds upcoming shows (relatively) close to me and recommends them. While the other shows I’ve seen before weren’t particularly enticing, the most recent email was for a show by &lt;a href=&#34;https://www.theaccidentalsmusic.com/&#34;&gt;The Accidentals&lt;/a&gt;. Despite the fact that they’ve been together for quite a long time, I never discovered them until late last year when a friend and I were trying to find a bunch of songs to add to our BlizzCon-themed playlist we were creating in preparation for our trip. I stumbled across their track &lt;a href=&#34;https://www.youtube.com/watch?v=fRP4TquLg-U&#34;&gt;&lt;em&gt;Earthbound&lt;/em&gt;&lt;/a&gt; and immediately fell in love. Since then I’ve been through their entire library more times than I can count.&lt;/p&gt;
&lt;p&gt;My friend graciously agreed to go with me, so yesterday we got to experience The Accidentals live. The show was nothing short of incredible; I feel like I should’ve paid more for the tickets given how amazing the experience was. All three members of the band are such talented and passionate people, playing an insane variety of instruments and doing songs in a swath of different styles.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/TheAccidentalsShow_signal-2019-04-07-102809-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;While they didn’t perform &lt;em&gt;Earthbound&lt;/em&gt;, I was stoked for them to play both &lt;em&gt;Heavy Flag&lt;/em&gt; and &lt;em&gt;Crow’s Feet&lt;/em&gt;, along with a &lt;em&gt;completely&lt;/em&gt; acoustic version of &lt;em&gt;Sixth Street&lt;/em&gt; at the front of the stage. I also got to experience some brand new songs they’re trying out in preparation for the &lt;em&gt;TWO&lt;/em&gt; (!) albums they’re planning to release this year. The first will be a live album coming out in a few months, and the second later in the year will be a fully produced studio album. The show was definitely the high point of my 2019 thus far. Any music fans who happen to get the chance to see The Accidentals live should definitely jump at the opportunity and support some amazing live music.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Peripherals: Razer Quartz 2019</title>
      <link>https://hugo.unusually.pink/unusually-pink-peripherals-razer-quartz-2019/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-peripherals-razer-quartz-2019/</guid>
      <description>Given the name of this site and what I said in the first post, you can probably guess that I’m a fan of things which are unusually pink. That’s why last year when gaming peripheral maker Razer announced a line of pink products under their new Quartz branding, I was stoked. I immediately ordered both their keyboard and their mouse. The Quartz products generally aren’t brand new; they’re a pink take on existing products.</description>
      <content>&lt;p&gt;Given the name of this site and what I said in the &lt;a href=&#34;https://unusually.pink/post/new-domain/&#34;&gt;first post&lt;/a&gt;, you can probably guess that I’m a fan of things which are unusually pink. That’s why last year when gaming peripheral maker &lt;a href=&#34;https://www.razer.com/&#34;&gt;Razer&lt;/a&gt; announced a line of pink products under their new Quartz branding, I was stoked. I immediately ordered both their keyboard and their mouse. The Quartz products generally aren’t brand new; they’re a pink take on existing products. The first keyboard was a &lt;a href=&#34;https://www.razer.com/gaming-keyboards-keypads/razer-blackwidow-tournament-edition-chroma-v2&#34;&gt;Razer Blackwidow Tournament Edition&lt;/a&gt; with Razer Green switches (their equivalent of Cherry’s MX Blue line of clicky, tactile switches.) It’s great, and I still use it daily:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkPeripheralsRazerQuartz2019_2019-02-07170324.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The mouse was a bit less exciting as it was a &lt;a href=&#34;https://www.razer.com/gaming-mice/razer-lancehead-tournament-edition&#34;&gt;pink variant of the Razer Lancehead&lt;/a&gt;. The Lancehead isn’t a bad mouse, but it’s not what I’m really looking for as far as gaming goes. It’s a relatively flat mouse with small, squishy side buttons. I used it for a while but eventually switched to a different mouse.&lt;/p&gt;
&lt;p&gt;I was happy with my purchaes, but just last week &lt;a href=&#34;https://www.razer.com/campaigns/quartz&#34;&gt;Razer announced updates across their Quartz lineup&lt;/a&gt;. I once again had zero self control and immediately purchased the new &lt;a href=&#34;https://www.razer.com/gaming-keyboards-keypads/razer-huntsman&#34;&gt;keyboard&lt;/a&gt; and &lt;a href=&#34;https://www.razer.com/gaming-mice/razer-basilisk&#34;&gt;mouse&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;razer-huntsman-quartz&#34;&gt;Razer Huntsman Quartz&lt;/h2&gt;
&lt;p&gt;This keyboard was exciting because, along with being pink, it’s based on the Huntsman. That’s Razer’s first keyboard with their new optomechanical switches. Rather than being completely mechanical, these switches use the same mechanical feel to allow a beam of light to pass through it and be detected by a sensor on the opposite of where it is generated. That light hitting the sensor triggers the actuation of the switch rather than a metal contact. I’m not pro gamer, so I can’t honestly say if I feel any difference in the speed or accuracy of actuation, but I &lt;strong&gt;do&lt;/strong&gt; have to admit that the whole thing is cool as hell. On top of that, every single switch has a metal stabilizer to ensure each key gives a solid, consistent press. That’s normally something you only see on larger keys like the spacebar, Shift, Enter, etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkPeripheralsRazerQuartz2019_2019-03-27085607.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The keys aren’t embedded into a base for the Huntsman; they sit flat on the board. I really like this style, and it looks great. The keys all have a beautiful, smooth, soft pink finish that looks great. The board itself has the same finish, which is a welcome improvement from the Quartz version of the Blackwidow Tournament Edition. That board had the same key finish but something that felt like a soft-touch powder coating on the board itself. While it had a decent texture, it also seemed like something that could scratch off in an accident. My board actually came with a tiny nick in that coating above the function keys.&lt;/p&gt;
&lt;p&gt;I was a little leery about spending so much on a keyboard when I didn’t even know if I’d like the switches, but typing on them is a downright &lt;strong&gt;joy&lt;/strong&gt;. Every key stroke just feels good. Their actuation force of 45 grams is a little lighter than Razer Greens that clock in at 50 grams. I was surprised, though, that after a weekend of gaming on the optomechanical switches, typing on Razer Greens actually felt heavy to me. 45 grams feels like the sweet spot where the switches are easy to press, but not so easy that you could do it on accident. The tactile feedback also removes any doubt of whether or not the switch actuated. On the whole, I adore these switches.&lt;/p&gt;
&lt;p&gt;I do wish there was a TKL variant since I don’t really need the number pad on my gaming keyboard. I had to move the keyboard further left to keep the same amount of space on my mat for the mouse, but it’s still comfortable to keep my left hand on WASD.&lt;/p&gt;
&lt;h2 id=&#34;razer-basilisk-quartz&#34;&gt;Razer Basilisk Quartz&lt;/h2&gt;
&lt;p&gt;The mouse was also a very nice improvement for the Quartz line. This variant is based on the Razer Basilisk, which is an FPS-centric mouse. I appreciate the fact that it has a very large hump behind the buttons, meaning that even with my relatively large hands I can palm the mouse without my hand touching the mat. The rubber grips around the sides are super nice and have a good feel to them. The scroll wheel features adjustable tension, handled via a small wheel on the underside of the device. You can go all the way from extremely rough, tacticle clicks for each scroll to free scrolling. I found a very low amount of tension to be the best for me.&lt;/p&gt;
&lt;p&gt;The side buttons have a good feel to them, though the true boon for this mouse is the DPI clutch just in front of them. The clutch can be configured to decrease your DPI if you need to be precise. For example, you might want to hold in the clutch while sniping in a game to avoid things feeling too twitchy. The button for it is a bit large for my taste, extending just a bit over the first side button. Luckily, this button is removable and comes with a smaller button you can swap in that I greatly prefer. If you have no interest in the clutch, you can also replace it with a pink rubber plug that simply fills the hole and matches the rest of the mouse’s exterior.&lt;/p&gt;
&lt;p&gt;Given that &lt;a href=&#34;https://playoverwatch.com/en-us/&#34;&gt;Overwatch&lt;/a&gt; is my game of choice at the moment, the Basilisk feels like the perfect mouse. It pairs nicely with the Huntsman, and I’ve been really enjoying these preferals across a variety of games like Overwatch, Diablo 3, and Elder Scrolls Online. To be perfectly honest, I’d have kept them no matter what just because, well… they’re &lt;em&gt;pink&lt;/em&gt;. I’m actually extremely happy with both of them, though, as they’re high quality products that deliver a high quality experience. Many pink computer accessories are pretty much hot garbage because the gimmick of being pink is the selling point, not the quality. With these two devices, though, you absolutely get both the performance and the color. If your battlestation needs a little more pink and you’ve got the spare money, you can’t go wrong with the current Quartz lineup.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>All Dracula (Theme) Everything</title>
      <link>https://hugo.unusually.pink/all-dracula-theme-everything/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/all-dracula-theme-everything/</guid>
      <description>When you spend a significant portion of each and every day staring at a computer screen, it&amp;rsquo;s important for things to look nice. Aside from just aesthetics, it can help reduce eye strain and improve productivity. With that in mind, we wanted to help spread the word about one of the best themes ever created: Dracula. I believe I first learned about the Dracula theme from someone I follow on Twitter, though enough time is passed that I&amp;rsquo;m not 100% positive on who or if that&amp;rsquo;s even where I really found it.</description>
      <content>&lt;p&gt;When you spend a significant portion of each and every day staring at a computer screen, it&amp;rsquo;s important for things to look nice. Aside from just aesthetics, it can help reduce eye strain and improve productivity. With that in mind, we wanted to help spread the word about one of the best themes ever created: &lt;a href=&#34;https://draculatheme.com/&#34;&gt;Dracula&lt;/a&gt;. I &lt;em&gt;believe&lt;/em&gt; I first learned about the Dracula theme from someone I follow on Twitter, though enough time is passed that I&amp;rsquo;m not 100% positive on who or if that&amp;rsquo;s even where I really found it.&lt;/p&gt;
&lt;p&gt;Dracula is a beautiful dark theme with a focus on pink, green, red, and white to give it a striking visual style that&amp;rsquo;s also easy on the eyes; it&amp;rsquo;s nice when working with code to see things stand out so clearly. One of the strengths of Dracula is also that it feels like it exists for &lt;em&gt;everything&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;terminalapphttpsdraculathemecomterminal&#34;&gt;&lt;a href=&#34;https://draculatheme.com/terminal&#34;&gt;Terminal.app&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/AllDraculaThemeEverything_terminal.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I spend a &lt;strong&gt;large&lt;/strong&gt; portion of my day working out of Terminal.app on my MacBook Pro, and the Dracula theme fits with it perfectly. While you end up with a lot more white text here than in most text editors, the smooth color scheme still makes for something a bit more pleasing to look at than the stock green text on a blackbackground that I&amp;rsquo;ve used in my terminal emulators for decades.&lt;/p&gt;
&lt;h4 id=&#34;bonus&#34;&gt;Bonus&lt;/h4&gt;
&lt;p&gt;If you aren&amp;rsquo;t using &lt;a href=&#34;https://www.zsh.org/&#34;&gt;zsh&lt;/a&gt; as your shell already, you should definitely consider switching to it!&lt;/p&gt;
&lt;h2 id=&#34;vimhttpsdraculathemecomvim&#34;&gt;&lt;a href=&#34;https://draculatheme.com/vim&#34;&gt;Vim&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/AllDraculaThemeEverything_vim.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Vim has been my text editor of choice for years now. While the learning curve is steep compared to a lot of other text editors, it&amp;rsquo;s honestly not too difficult to get started with the basics. Once you&amp;rsquo;ve got those covered, it&amp;rsquo;s easy to simply look up what you need when the need arises to expand your skills with it. After a little time, you can quickly become much more productive; I&amp;rsquo;m now significantly &lt;em&gt;slower&lt;/em&gt; when navigting plaintext with a combination of arrow keys with Ctrl, Home, and End.&lt;/p&gt;
&lt;h3 id=&#34;caveat&#34;&gt;Caveat&lt;/h3&gt;
&lt;p&gt;The directions on the Dracula site for installing the theme with my favorite Vim plugin manager, &lt;a href=&#34;https://github.com/tpope/vim-pathogen&#34;&gt;Pathogen&lt;/a&gt; aren&amp;rsquo;t quite correct and assume you&amp;rsquo;ve done a few steps that many people will not have done. The directions instruct you to do this:&lt;/p&gt;
&lt;p&gt;git submodule add &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:dracula/vim.git bundle/dracula&lt;/p&gt;
&lt;p&gt;This may give you the following error:&lt;/p&gt;
&lt;p&gt;fatal: not a git repository (or any of the parent directories): .git&lt;/p&gt;
&lt;p&gt;The error is &lt;em&gt;very&lt;/em&gt; generic, so searching the Interwebs might not give you relevant results. The tl;dr is that you can&amp;rsquo;t clone a submodule via git into a directory that isn&amp;rsquo;t already a git repository. So if you&amp;rsquo;re in the &lt;code&gt;~/.vim&lt;/code&gt; directory you can remedy that by running:&lt;/p&gt;
&lt;p&gt;git init .&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;still&lt;/em&gt; got an error after running the original command, though:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;: Permission denied (publickey).
fatal: Could not read from remote repository.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t have git set up in a way to allow me to clone with that format, or maybe you&amp;rsquo;re intended to change the &amp;ldquo;&lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;&amp;rdquo; to your own GitHub user information? I&amp;rsquo;m honestly not sure, but rather than screwing with it I just changed the URL to the https URI for the repository:&lt;/p&gt;
&lt;p&gt;git submodule add &lt;a href=&#34;https://github.com/dracula/vim.git&#34;&gt;https://github.com/dracula/vim.git&lt;/a&gt; bundle/dracula&lt;/p&gt;
&lt;p&gt;This cloned without any issues.&lt;/p&gt;
&lt;h3 id=&#34;bonus-1&#34;&gt;Bonus&lt;/h3&gt;
&lt;p&gt;If you like my font in the screenshots above, I recenetly switched to using &lt;a href=&#34;https://github.com/microsoft/cascadia-code&#34;&gt;Cascadia Code&lt;/a&gt; from Microsoft. It looks terrific, is extremely readable, and works well in both text editors and the terminal. While I&amp;rsquo;ve stopped using it in favor of Cascadia Code, &lt;a href=&#34;https://mozilla.github.io/Fira/&#34;&gt;Fira Mona&lt;/a&gt; from Mozilla is also an extremely strong font if Cascadia isn&amp;rsquo;t your thing.&lt;/p&gt;
&lt;h2 id=&#34;atomhttpsdraculathemecomatom&#34;&gt;&lt;a href=&#34;https://draculatheme.com/atom&#34;&gt;Atom&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While I do most of my work in Vim, occasionally I&amp;rsquo;ll find myself wanting/needing a GUI-based editor. In those cases, my editor of choice is Atom from GitHub. It has a solid built-in package manager with a wide array of official and community-created plugins for language support.&lt;/p&gt;
&lt;h2 id=&#34;visual-studio-codehttpsdraculathemecomvisual-studio-code&#34;&gt;&lt;a href=&#34;https://draculatheme.com/visual-studio-code&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This one is more Brandi&amp;rsquo;s thing than mine, but Visual Studio Code is another terrific GUI text editor. It also has the best &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell&#34;&gt;PowerShell plugin&lt;/a&gt; of any text editor, making it the de facto PowerShell editor if that&amp;rsquo;s what you work in (even though I still use Vim with &lt;a href=&#34;https://github.com/PProvost/vim-ps1&#34;&gt;vim-ps1&lt;/a&gt;.) Both Visual Studio Code and Atom are &lt;a href=&#34;https://www.electronjs.org/&#34;&gt;Electron&lt;/a&gt; applications, so you get a similar footprint and responsiveness with either of them. I say that as a warning since Electron apps can be a little on the slow side when launching them. More on that later.&lt;/p&gt;
&lt;h2 id=&#34;firefoxhttpsdraculathemecomfirefox&#34;&gt;&lt;a href=&#34;https://draculatheme.com/firefox&#34;&gt;Firefox&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/AllDraculaThemeEverything_image-asset.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Hugo kudos to Brandi for discovering this one, but there&amp;rsquo;s even a Dracula theme for Firefox! As a privacy-focused individual, Firefox is my browser of choice on all of my laptops. I&amp;rsquo;ve spent years using and being happy with the default dark theme in Firefox, but Dracula just takes it to the next level. I really appreciate how subtle the theme is with just hints of pink you see around active menus or the currently active tab.&lt;/p&gt;
&lt;h2 id=&#34;honorable-mentions&#34;&gt;Honorable Mentions&lt;/h2&gt;
&lt;h4 id=&#34;notepadhttpsdraculathemecomnotepad-plus-plus&#34;&gt;&lt;a href=&#34;https://draculatheme.com/notepad-plus-plus&#34;&gt;Notepad++&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Back when I was using a Windows laptop for my job, I&amp;rsquo;d do a lot of my code editing in Atom and/or Visual Studio Code. They&amp;rsquo;re great editors, but Electron apps can be a bit on the slow side given that you&amp;rsquo;re loading the Chromium runtime engine for it. Notepad++ was what I used as a backup when I just needed to quickly open a plaintext file for quick viewing and/or edits rather than a prolonged coding session.&lt;/p&gt;
&lt;h4 id=&#34;windows-terminalhttpsdraculathemecomwindows-terminal&#34;&gt;&lt;a href=&#34;https://draculatheme.com/windows-terminal&#34;&gt;Windows Terminal&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Another holdover from when I used Windows for work, you may recall the &lt;a href=&#34;https://www.unusually.pink/podcast/episode-6-huzzah-hobbies&#34;&gt;podcast episode where we raved about the new Windows Terminal&lt;/a&gt;. While I no longer have a Windows 10 machine, if I did you can bet that I&amp;rsquo;d be using the Dracula theme with it.&lt;/p&gt;
&lt;p&gt;Much like the elements in the Dracula theme&amp;hellip; stay pink!&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
