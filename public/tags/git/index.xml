<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on Unusually Pink</title>
    <link>https://hugo.unusually.pink/tags/git/</link>
    <description>Recent content in git on Unusually Pink</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2021</copyright>
    <lastBuildDate>Mon, 15 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hugo.unusually.pink/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>macOS Big Sur 11.2 Homebrew and Git Error</title>
      <link>https://hugo.unusually.pink/posts/macos-big-sur-11-2-homebrew-and-git-error/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/posts/macos-big-sur-11-2-homebrew-and-git-error/</guid>
      <description>After I upgraded my macOS install from 11.1 to 11.2, the next time I tried running brew update to update all of the packages available in Homebrew, I got a wall of text regarding things going off the rails that ultimately culminated with this error:
 Error: Failure while executing; git config --replace-all homebrew.analyticsmessage true was terminated by uncaught signal KILL.
 When this happens, not only is Homebrew broken, but git itself is broken.</description>
      <content>&lt;p&gt;After I upgraded my macOS install from 11.1 to 11.2, the next time I tried running &lt;code&gt;brew update&lt;/code&gt; to update all of the packages available in &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;, I got a wall of text regarding things going off the rails that ultimately culminated with this error:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error: Failure while executing; &lt;code&gt;git config --replace-all homebrew.analyticsmessage true&lt;/code&gt; was terminated by uncaught signal KILL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When this happens, not only is Homebrew broken, but &lt;code&gt;git&lt;/code&gt; itself is broken. Running a simple &lt;code&gt;git status&lt;/code&gt; inside of an existing repository will similarly result in an error. I initially tweeted about it after I found a &lt;a href=&#34;https://github.com/Homebrew/discussions/discussions/673&#34;&gt;relevant thread on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I did have to combine the steps from a few different support threads, though, so after I had to go through the same process again after upgrading from macOS 11.2 to 11.2.1, I figured I&amp;rsquo;d throw together a quick post about what worked for me. From the input others are sharing on GitHub, it seems different combinations are working for different people, so your mileage may vary.&lt;/p&gt;
&lt;p&gt;The first thing that I needed to do is reinstall the Xcode CLI tools. This is &lt;em&gt;not&lt;/em&gt; a full Xcode installation, so no need to worry about a massive download. If you get the warning about being on battery and the recommendation that you only do the installation while the device is plugged in, you can likely just ignore it and proceed on battery power; on my system the install takes about 2 minutes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For some people, the second and final step is to reinstall &lt;code&gt;git&lt;/code&gt;. This did &lt;em&gt;not&lt;/em&gt; work for me, though. Following &lt;a href=&#34;https://github.com/Homebrew/discussions/discussions/439#discussioncomment-261267&#34;&gt;another thread&lt;/a&gt;, I discovered that I needed to reinstall two dependencies of &lt;code&gt;git&lt;/code&gt;: &lt;code&gt;gettext&lt;/code&gt; and &lt;code&gt;pcre2&lt;/code&gt;. I&amp;rsquo;m assuming that you can likely reinstall both with one command without any issues, but both times I&amp;rsquo;ve seen the problem thus far I&amp;rsquo;ve run the commands individually:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;brew reinstall gettext
brew reinstall pcre2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The final step then is to &lt;em&gt;now&lt;/em&gt; reinstall &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;brew reinstall git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once that&amp;rsquo;s done, now re-running &lt;code&gt;brew update&lt;/code&gt; or &lt;em&gt;any&lt;/em&gt; &lt;code&gt;git&lt;/code&gt; command should be successful.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Adding SSH To GitHub</title>
      <link>https://hugo.unusually.pink/posts/adding-ssh-to-github/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/posts/adding-ssh-to-github/</guid>
      <description>Between the Thanksgiving holiday and some shifting priorities when I got back to work, I hadn&amp;rsquo;t made any new commits to my GitHub account for about 10 days. This meant that I didn&amp;rsquo;t have any new posts to my recently-launched GitCommit site that makes a bit of a microblog from my commit messages. To be honest, putting it together was really an excuse to have something up at the domain I bought, but I really like the way it turned out.</description>
      <content>&lt;p&gt;Between the Thanksgiving holiday and some shifting priorities when I got back to work, I hadn&amp;rsquo;t made any new commits to my &lt;a href=&#34;https://github.com/jfabry-noc/&#34;&gt;GitHub account&lt;/a&gt; for about 10 days. This meant that I didn&amp;rsquo;t have any new posts to my recently-launched &lt;a href=&#34;https://gitcommit.gay&#34;&gt;GitCommit&lt;/a&gt; site that makes a bit of a microblog from my commit messages. To be honest, putting it together was really an excuse to have &lt;em&gt;something&lt;/em&gt; up at the domain I bought, but I really like the way it turned out. After making a fresh commit yesterday, though, I received an email from GitHub telling me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You recently used a password to access the repository at jfabry-noc/OxidizedBackup with git using git/2.25.1.&lt;/p&gt;
&lt;p&gt;Basic authentication using a password to Git is deprecated and will soon no longer work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It also included a link to their &lt;a href=&#34;https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/&#34;&gt;authentication requirements documentation&lt;/a&gt;. On the whole it made sense to me; I typically would just have &lt;code&gt;git&lt;/code&gt; remember my credentials so that I never had to enter them. In the new setup, I would &lt;em&gt;have&lt;/em&gt; to enter them, though I could configure how long they would remain cached. On the surface, this didn&amp;rsquo;t bother me, and I went about my day making several additional commits beyond the first. Later on, though, I realized that my new commits weren&amp;rsquo;t appearing on the GitCommit site. The site is hosted by &lt;a href=&#34;https://netlify.com&#34;&gt;Netlify&lt;/a&gt;, and it works by polling my GitHub account via a &lt;code&gt;cron&lt;/code&gt; job every 4 hours (I&amp;rsquo;m hoping to eventually update it to use webhooks to have commit information pushed to it, but I haven&amp;rsquo;t had an opportunity yet.) When a new commit happens, my code pulls the repository, the commit message, and the timestamp. It then updates the HTML and automatically makes an &lt;em&gt;additional&lt;/em&gt; commit on its own repository (yes, I included code to avoid an endless repost loop.) Netlify has been configured to look at only the &lt;strong&gt;html&lt;/strong&gt; directory in the repository, dynamically updating whenever a new change is commited to that directory, much like how &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; or any other CI web hosting works.&lt;/p&gt;
&lt;p&gt;Since my new commits weren&amp;rsquo;t showing up, I first checked the &lt;a href=&#34;https://github.com/jfabry-noc/GitCommit&#34;&gt;GitHub repo for GitCommit&lt;/a&gt;. No new HTML changes had been commited to it. Next, I went to the VPS which executes the &lt;code&gt;cron&lt;/code&gt; job. For my own sanity, I long ago learned that I should implement some type of logging for any code that I plan to run automatically so that I can easily troubleshoot it during this exact situation. Checking the log file, I saw that my code &lt;em&gt;did&lt;/em&gt; successfully find the new commits and update the appropriate HTML file. It was able to make the expected commit, and running &lt;code&gt;git status&lt;/code&gt; even confirmed that my local repository was ahead of the remote by 2 commits. However, running the following didn&amp;rsquo;t work to push my changes up to GitHub so that Netlify could see them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git push origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Suddenly it clicked, and I realized that the change from earlier in the day was the culprit; my code could no longer &lt;code&gt;git push&lt;/code&gt; because that was now prompting for a password that would never be typed given that the code was executed by &lt;code&gt;cron&lt;/code&gt;. To confirm, I manually executed the script from my SSH session and saw the password prompt appear. Ick.&lt;/p&gt;
&lt;p&gt;Fortunately, I realized that I wouldn&amp;rsquo;t need a password if I was syncing my repository via SSH rather than HTTPS. SSH would allow me to use certificates instead. First, I had to generate a new public-private key pair with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;ssh-keygen -t ed25519 -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email@email.com&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Yeah, I&amp;rsquo;m not telling you my email address. I&amp;rsquo;ll give you a hint; it&amp;rsquo;s &lt;a href=&#34;mailto:something@unusually.pink&#34;&gt;something@unusually.pink&lt;/a&gt;. Good luck. The above command asked for a couple of things such as the location where I wanted to store the keys and if I wanted to add a password for accessing them. I just took the defaults. Next up, I had to start a background SSH agent and tell it to use the private key I had just generated:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ssh-agent -s&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
ssh-add ~/.ssh/id&lt;span style=&#34;color:#ae81ff&#34;&gt;\_&lt;/span&gt;ed25519
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With everything set on the client side, I now had to tell GitHub to use my public key for any SSH interactions. They have &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/adding-a-new-ssh-key-to-y&#34;&gt;very solid documentation&lt;/a&gt; available with the exact steps. Just be sure you actually copy the content of the &lt;strong&gt;public&lt;/strong&gt; key into GitHub rather than the private key. GitHub won&amp;rsquo;t accept the private key because the formatting is wrong, but the very fact that I pasted it there made me paranoid enough to regenerate the pair and do it again.&lt;/p&gt;
&lt;p&gt;To test things out, I tried to clone one of my private repositories via the SSH link, which you can select from the tabs when trying to clone anything from GitHub.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/github_ssh.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;That worked successfully and verified that my keys were properly identifying me. The last step was to update the local repository for GitCommit to use a new URL for the remote repository. Regardless of whether I&amp;rsquo;m using HTTPS or SSH, I still run &lt;code&gt;git push origin main&lt;/code&gt; in order to sync it to the remote; the configuration of the local repository is what specifies which URL is used. In order to flip mine from HTTPS to SSH, I simply ran the following from my local directory for GitCommit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git remote set-url origin git@github.com:jfabry-noc/GitCommit.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After this, I re-ran my script and &lt;code&gt;git push&lt;/code&gt; was able to successfully push my code to the remote without any interaction. After working through many commits today, I verified that my website was updated as expected.&lt;/p&gt;
&lt;p&gt;As a bonus note, astute readers may recall the issues I had following the published steps to sync the &lt;a href=&#34;https://unusually.pink/all-dracula-everything/&#39;&#34;&gt;Dracula theme for git&lt;/a&gt;. This was the exact same scenario where the instructions assumed that SSH was in use rather than HTTPS.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
