<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Unusually Pink</title>
    <link>https://hugo.unusually.pink/tags/linux/</link>
    <description>Recent content in linux on Unusually Pink</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2021</copyright>
    <lastBuildDate>Fri, 12 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hugo.unusually.pink/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Swapping Mirrors On Manjaro Linux</title>
      <link>https://hugo.unusually.pink/swapping-mirrors-on-manjaro-linux/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/swapping-mirrors-on-manjaro-linux/</guid>
      <description>One of my favorite aspects of Linux ever since my first Ubuntu 6.06 installation has been the software repository. Back in 2006, installing the overwhelming majority of the software I might need from a supported repository stood in stark contrast with the Windows XP method of searching the web for the software you wanted, finding a download link that didn&amp;rsquo;t seem shady, and then hoping for the best.
Repositories are frequently hosted by the maintainer of a Linux distribution (e.</description>
      <content>&lt;p&gt;One of my favorite aspects of Linux ever since my first Ubuntu 6.06 installation has been the software repository. Back in 2006, installing the overwhelming majority of the software I might need from a supported repository stood in stark contrast with the Windows XP method of searching the web for the software you wanted, finding a download link that didn&amp;rsquo;t &lt;em&gt;seem&lt;/em&gt; shady, and then hoping for the best.&lt;/p&gt;
&lt;p&gt;Repositories are frequently hosted by the maintainer of a Linux distribution (e.g. &lt;a href=&#34;https://ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; has official repos hosted by &lt;a href=&#34;https://canonical.com/&#34;&gt;Canonical&lt;/a&gt;, &lt;a href=&#34;https://getfedora.org/&#34;&gt;Fedora&lt;/a&gt; has official repos hosted by &lt;a href=&#34;https://www.redhat.com/en&#34;&gt;Red Hat&lt;/a&gt;, etc.) That being said, often times repositories are mirrored by service providers (e.g. &lt;a href=&#34;https://www.linode.com/&#34;&gt;Linode&lt;/a&gt; hosts many mirrors so that repository content can be served out of the same datacenter as the virtual machines), Linux interest groups, and other community members. This is great because it allows for the repos to be geographically diverse. Pulling downloads from a repository hosted in the same continent, for example, will typically show a marked improvement over using one on the opposite side of the planet.&lt;/p&gt;
&lt;p&gt;The downside to this is that repos occasionally become unavailable for whatever reason. This happened to be recently, as I went to update one of my &lt;a href=&#34;https://manjaro.org/&#34;&gt;Manjaro&lt;/a&gt; installs via:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Syu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After sitting for an unusual amount of time, I was told that a connection couldn&amp;rsquo;t be established to my current mirror, which happened to be: &lt;strong&gt;us.mirrors.fossho.st&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s worth noting that, at least on Manjaro, your mirror is only displayed when the connection fails. If the connection is successful, you only see the results of the update check. I could have simply tried again later, but without knowing how long the outage would be I instead decided to hunt for how to swap to a different mirror. Fortunately, the process is extremely easy. The current mirrors are contained in the file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The file contains a list of mirrors, with a comment above each indicating the country. At the very top of my list was my current mirror of &lt;strong&gt;us.mirrors.fossho.st&lt;/strong&gt;. I simply added a &lt;code&gt;#&lt;/code&gt; to the start of the line for it, commenting it out. I next ran a full package sync to make sure I didn&amp;rsquo;t have anything cached locally that wouldn&amp;rsquo;t be reflected on a different mirror:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -Syyu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This picked a different mirror, and everything worked as expected. The problem was solved. Not satisfied with leaving things at that, though, I decided to see if I could tell of any indicators of a mirror being down. I first confirmed that I could ping &lt;strong&gt;us.mirrors.fossho.st&lt;/strong&gt;. Likewise, I could connect to it over port 80 (HTTP.) However, I couldn&amp;rsquo;t connect to it over port 443 (HTTPS.) I don&amp;rsquo;t actually know what mechanism is used for deliver updates, but I feel like it&amp;rsquo;s &lt;em&gt;very&lt;/em&gt; likely that HTTPS is used; I couldn&amp;rsquo;t see HTTP being the norm given that you wouldn&amp;rsquo;t be able to ensure the updates hadn&amp;rsquo;t been tampered with. A random port is always possible, though.&lt;/p&gt;
&lt;p&gt;For the sake of comparison, I opened &lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt; back up and searched for another mirror in the US. &lt;strong&gt;mirror.dacentec.com&lt;/strong&gt; was the first hit. I repeated the same process and confirmed that I &lt;em&gt;could&lt;/em&gt; reach it on both ports 80 and 443.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/nmap_mirrors_full.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It seems like 443 is the key. It was only after doing this, though, that I realized a project like Manjaro likely has a status page for their mirrors. &lt;a href=&#34;https://repo.manjaro.org/&#34;&gt;I wasn&amp;rsquo;t disappointed.&lt;/a&gt; Checking this did appear to indicate that my original mirror is experiencing issues. Incidentally, the baseline mirror I tested is included in the same screenshot, and it&amp;rsquo;s shown to be up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/mirror_status-1024x139.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Upgrading Star Labs Firmware On Manjaro Linux</title>
      <link>https://hugo.unusually.pink/upgrading-star-labs-firmware-on-manjaro-linux/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/upgrading-star-labs-firmware-on-manjaro-linux/</guid>
      <description>As you may recall, I purchased a new Linux laptop from Star Labs a while back. It’s a solid little device, though I admittedly haven’t been using it as much as I anticipated due to my increased reliance on my iPads. For more information on that, look for the new Same Shade Of Difference podcast episode that should be dropping very soon. That being said, because I don’t have the worst operational security ever, I do update my laptop every time I happen to see that something is pending.</description>
      <content>&lt;p&gt;As you may recall, I &lt;a href=&#34;https://unusually.pink/star-lite-mk-iii/&#34;&gt;purchased a new Linux laptop from Star Labs&lt;/a&gt; a while back. It’s a solid little device, though I admittedly haven’t been using it as much as I anticipated due to my increased reliance on my iPads. For more information on that, look for the new &lt;a href=&#34;https://sameshadeofdifference.com&#34;&gt;Same Shade Of Difference&lt;/a&gt; podcast episode that should be dropping &lt;em&gt;very&lt;/em&gt; soon. That being said, because I don’t have the worst operational security ever, I do update my laptop every time I happen to see that something is pending. Given that I run &lt;a href=&#34;https://manjaro.org&#34;&gt;Manjaro Linux&lt;/a&gt;, that tends to happen frequently. Manjaro is what’s known as an evergreen Linux distribution. It uses a rolling release cycle, meaning that there are no new “major” releases of the OS. For example, there’s no equivalent in Manjaro of moving from Ubuntu 20.04 to Ubuntu 20.10. Occasionally the maintainers spin off a new .iso with updated packages, but that’s just to save users from having to upgrade an insane number of packages when they do a fresh installation.&lt;/p&gt;
&lt;p&gt;While I’ve been diligent about upgrading my OS and my Linux kernels (which Manjaro also provides a nice manager for), I’ve neglected to upgrade my firmware. Fortunately, Star Labs makes this process extremely simple. All of their firmware is published to &lt;a href=&#34;https://github.com/StarLabsLtd/firmware?utm_campaign=9th%20March%202020%20coreboot%20MK%20III%20%28TQpHxp%29&amp;amp;utm_medium=email&amp;amp;utm_source=Newsletter&amp;amp;_ke=eyJrbF9jb21wYW55X2lkIjogIlBjaGtVQyIsICJrbF9lbWFpbCI6ICJqamZhYnJ5QHByb3Rvbm1haWwuY29tIn0%3D&#34;&gt;their GitHub account&lt;/a&gt;. There’s no need to actually keep tabs on that if you don’t want to, though, because Star Labs also sends periodic emails announcing firmware updates for their devices. I obviously can’t speak to how deep into the lifecycle of each device these may go, but at least for the time being it’s extremely helpful.&lt;/p&gt;
&lt;p&gt;Even better, when it comes to installing firmware there’s a dedicated utility for it. They cover the &lt;a href=&#34;https://support.starlabs.systems/articles/installing-updates-from-the-lvfs?utm_campaign=9th%20March%202020%20coreboot%20MK%20III%20%28TQpHxp%29&amp;amp;utm_medium=email&amp;amp;utm_source=Newsletter&amp;amp;_ke=eyJrbF9jb21wYW55X2lkIjogIlBjaGtVQyIsICJrbF9lbWFpbCI6ICJqamZhYnJ5QHByb3Rvbm1haWwuY29tIn0%3D&#34;&gt;gamut of options on their support site&lt;/a&gt; since they support a large number of Linux variants, but for Manjaro you just need to start by installing a couple of additional packages:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo pacman -Sy fwupd gnome-firmware
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I realized after the fact that I probably &lt;em&gt;didn’t&lt;/em&gt; need &lt;strong&gt;gnome-firmware&lt;/strong&gt; since I’m unlikely to ever use the GUI for this, but it’s not as though the application takes up a large degree of space. Once the packages are installed, the next step is to check for any new firmware.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo fwupdmgr refresh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This should report back if there are new firmware updates. In my case, it reported firmware updates for 2 items, one of which was 3 revisions out of date. Yikes! I kicked off the firmware upgrade via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo fwupdmgr update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It’s worth mentioning that the system will complain if you run the above command without having a power source connected since, generally, upgrading firmware and losing power in the middle of the process is a recipe for bricking your device. If power isn’t connected, though, it’ll very smartly prompt you to connect power and retry.&lt;/p&gt;
&lt;p&gt;After the installation kicks off, the device will need to reboot. After the reboot, you’ll land in the firmware itself and be prompted to confirm the upgrades you’re about to apply. Use the arrow keys to move to the bottom and apply the pending changes (they’ll be pending by default.) This may take some time, and in my case the firmware application would move from 0% to 100% multiple times without any indication it was at different stages or anything like that. I recommend getting some coffee and letting your device do its thing. Once the upgrades are fully completed, you’ll be prompted to hit literally any key to kick off another reboot. This reboot will take noticeably longer than a normal reboot, and you’ll spend a decent amount of time staring at a black screen before you even see the Star Labs logo appear like you normally would during the boot cycle. Patience is a virtue, so just let the device do its thing. Eventually you should see the login screen you know and love.&lt;/p&gt;
&lt;p&gt;At that point, just log back in and everything should be running as expected with the new firmware. If you want to be certain, running&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;fwupdmgr refresh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;hellip; again should confirm there are no longer any pending firmware upgrades. It’s also worth mentioning that, during the upgrade process, many peripherals may end up being disconnected if the device is docked or anything like that. In my case the laptop was running standalone with nothing but AC power connected. The upgrade utility also very kindly warns you of this ahead of time, so just be on the lookout for the messages it gives you as you go through the upgrade process. The tl;dr is that if you read the output given to you by &lt;strong&gt;fwupdmgr&lt;/strong&gt;, everything should go smoothly.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Star Lite Mk III</title>
      <link>https://hugo.unusually.pink/star-lite-mk-iii/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/star-lite-mk-iii/</guid>
      <description>After spending some quality time with my Pinebook Pro, I decided that I wanted something slightly more powerful for my personal laptop. While most of my heavy-lifting in the world of computers is done with my MacBook Pro for work (which was recently upgraded to a device featuring the new M1 chips; look for more on that soon both here and on the Same Shade of Difference podcast), the Pinebook Pro&amp;rsquo;s extremely weak ARM processor wasn&amp;rsquo;t quite cutting it.</description>
      <content>&lt;p&gt;After spending some quality time with my &lt;a href=&#34;https://unusually.pink/unusually-pink-impressions-pinebook-pro/&#34;&gt;Pinebook Pro&lt;/a&gt;, I decided that I wanted something &lt;em&gt;slightly&lt;/em&gt; more powerful for my personal laptop. While most of my heavy-lifting in the world of computers is done with my MacBook Pro for work (which was recently upgraded to a device featuring the new M1 chips; look for more on that soon both here and on the &lt;a href=&#34;https://sameshadeofdifference.com/&#34;&gt;Same Shade of Difference podcast&lt;/a&gt;), the Pinebook Pro&amp;rsquo;s extremely weak ARM processor wasn&amp;rsquo;t quite cutting it. Even doing things like writing up blog posts in the WordPress editor would occasionally lag, and watching videos above 720p is essentially impossible. I was still infatuated with the idea of a low-cost Linux laptop, though. I love using Linux, but I didn&amp;rsquo;t exactly need a workhorse device from somewhere like &lt;a href=&#34;https://system76.com/laptops&#34;&gt;System 76&lt;/a&gt; just to write blog posts, maintain a couple of websites, watch videos, and play chess. After going down a rabbit hole of trying to find a (relatively) inexpensive Linux laptop (spoiler alert: they&amp;rsquo;re rare), I decided to pre-order the &lt;a href=&#34;https://starlabs.systems/pages/lite-mk-iii&#34;&gt;Star Lite Mk III from Star Labs&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;shipping&#34;&gt;Shipping&lt;/h2&gt;
&lt;p&gt;I originally pre-ordered the laptop in the summer, with a shipping estimate of early September. I wasn&amp;rsquo;t exactly in a rush, so that wasn&amp;rsquo;t a problem for me. The global pandemic caused something of a cascading series of delays which ultimately meant that I didn&amp;rsquo;t receive my device until mid-November. For example, production delays in China that ran behind became exacerbated when the factory closed due to &lt;a href=&#34;https://en.wikipedia.org/wiki/Golden_Week_(China)&#34;&gt;Golden Week&lt;/a&gt;. Star Labs is based in the UK, so once production and QA were done, the devices shipped from the factory in China to the UK. There they were held up in customs for an entire week before they actually reached Star Labs in order to be redistributed to the customers who pre-ordered.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t say any of this to knock Star Labs or the device; it&amp;rsquo;s just the nature of ordering something that needs to be shipped to the opposite side of the planet during a global pandemic. In fact, the team at Star Labs did really well in setting up a dedicated part of their website to post daily updates on the status starting in October so that everyone knew exactly what was going on. Kudos to them.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;p&gt;While it was about double the cost of the Pinebook Pro (my Lite Mk III was just over $400 USD when I ordered it), the device itself still feels premium to an order of magnitude higher than what I would&amp;rsquo;ve expected for the price. It came packaged up in a sleek box with a nice, blue microfiber bag around the laptop in the packaging. Another sat between the closed screen and the keyboard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/IMG_0317.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The body of the device is plastic (I&amp;rsquo;m pretty sure), but it feels &lt;strong&gt;very&lt;/strong&gt; high quality and sturdy. The hinge for the screen will almost catch me off guard with how strongly it wants to close the last few degrees, but it manages to do this in a way that doesn&amp;rsquo;t make it difficult to open, which is often a problem for such small, light laptops.&lt;/p&gt;
&lt;p&gt;The trackpad is the antithesis of what the Pinebook Pro uses. It&amp;rsquo;s glass rather than plastic, and it&amp;rsquo;s incredibly snappy. Whereas the Pinebook Pro trackpad feels clunky and inaccurate, the Like Mk III feels precise. I&amp;rsquo;ve been extremely impressed with it. The keyboard, unfortunately, it&amp;rsquo;s quite as glowing. I mean, it&amp;rsquo;s &lt;em&gt;literally&lt;/em&gt; glowing in that it&amp;rsquo;s backlit, and generally it feels good to type on with a decent bit of travel on the keys. The keys don&amp;rsquo;t always feel responsive, though, and hitting them in slightly the wrong way will often result in the keys failing to register the keystroke. I notice this most commonly in the way that I hit the L and Spacebar keys, though the problem occurs on others as well. It&amp;rsquo;s not a deal breaker, but it can be frustrating at times given that I type quickly and often have to go back and fix myriad errors. For the most part, I&amp;rsquo;m impressed with the amount of space they managed to give the keyboard on such a small device, though as I mentioned in my post about the &lt;a href=&#34;https://unusually.pink/keychron-k2-v2/&#34;&gt;Keychron K2 V2&lt;/a&gt;, the dedicated arrow keys resulted in a &lt;em&gt;tiny&lt;/em&gt; right Shift key; whereas the Shift keys are normally at least double the width of the standard letter keys, the right Shift is actually &lt;strong&gt;smaller&lt;/strong&gt; than the letter keys. Originally this resulted in my accidentally hitting the Up arrow key when I wanted to hit Shift, but after a couple of weeks I began to adjust. I&amp;rsquo;m still not perfect with it, but it&amp;rsquo;s not as problematic as I had been worried that it might be. It&amp;rsquo;s also a nice touch that, since the laptop is designed for Linux, it actually features Ctrl, Fn, Super, and Alt keys.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/IMG_0319.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The display is a rather nice 1080p IPS, which has all of the benefits and drawbacks one might expect on an 11&amp;quot; device. While everything looks extremely crisp, I have to adjust the text size in basically every application in order to be able to read anything. My eyesight is rather poor, so your mileage may vary, but for anyone with vision problems the zoom functionality and adjustable font sizes will be essential. The speakers aren&amp;rsquo;t groundbreaking, but they certainly get the job done and can be surprisingly loud.&lt;/p&gt;
&lt;p&gt;The processor is a Pentium Silver N5000 from Intel. It&amp;rsquo;s fairly low-end, but it gets the job done, and that&amp;rsquo;s exactly what I needed for the price point. It&amp;rsquo;ll occasionally stutter a bit for really heavy web pages or when firing up GIMP to do some light photo editing, but for the most part it chugs along happily. I was extremely impressed that the device actually comes with 8 GB of RAM, which is extremely helpful. I did &lt;a href=&#34;https://unusually.pink/swapfile-fix-on-manjar-linux-pinebook-pro/&#34;&gt;set up a swap file&lt;/a&gt; in order to be able to hibernate the device, but it basically stays untouched during active operation. For storage, it comes with a 240 GB over-provisioned SSD. That&amp;rsquo;s configurable up to 960 GB if you need it, though I was more than fine with 240 GB.&lt;/p&gt;
&lt;p&gt;While it&amp;rsquo;s not typically something I think too much about when getting new hardware, I have to mention that the charger for the Lite Mk III is extremely nice. It&amp;rsquo;s a slick-looking brick that comes with a blue and black braided USB-C cable. When I think of relatively inexpensive laptops, often the charger is an area where the OEM can save a little money, but that wasn&amp;rsquo;t something they opted for in this case.&lt;/p&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;p&gt;I won&amp;rsquo;t touch too much on this since the experience really comes down to which flavor of Linux you want to install. Star Labs offers most major distros as pre-installed options; I went with Manjaro XFCE since I&amp;rsquo;ve come to enjoy using Manjaro so much on my Pinebook Pro. The experience has been great so far aside from the fact that, after immediately upgrading to the latest Linux kernel after receiving my laptop, I had horrible video issues. I simply reverted back to the latest LTS kernel (which is extremely easy to do in Manjaro), and everything was fine. Ubuntu, Mint, MX Linux, and others are all offered as options and across a wide array of window managers for each. Of course, it&amp;rsquo;s simple to just reinstall any other OS whenever you want since the device is designed to facilitate that.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://starlabs.kb.help/updates-upgrades/installing-updates-from-the-lvfs/&#34;&gt;Star Labs uses the LVFS to distribute new firmware&lt;/a&gt;, and it works very well. Along with firmware for the devices that are a part of the laptop, I&amp;rsquo;ve also received firmware upgrades through it for some of my peripherals that I use with it, like my Logitech MX Ergo trackball.&lt;/p&gt;
&lt;h2 id=&#34;wrap-up&#34;&gt;Wrap-Up&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/IMG_0318.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;On the whole, I&amp;rsquo;m fairly pleased with the Lite Mk III. The unreliability of the keyboard is my only major issue that gives me some headaches. Otherwise, it&amp;rsquo;s exactly what I was looking for in a small, inexpensive Linux laptop. I really hope more Linux-focused OEMs consider making an entrance into this particular market for people who want something basically on the order of a Chromebook but without any Google nonsense.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t think I could use the Lite Mk III as my &lt;em&gt;only&lt;/em&gt; laptop, but for any Linux nerds like myself who are looking for a supplementary device it makes for a great fit. Add in the fact that the warranty allows for the device to be opened by the user and repairs made without voiding it &amp;ndash; the &lt;a href=&#34;https://starlabs.kb.help/star-lite-mk-ii/star-lite-mk-ii-complete-disassembly-guide/&#34;&gt;company even offers a disassembly guide&lt;/a&gt; &amp;ndash; and there&amp;rsquo;s a lot to like.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Ubuntu Linux GRUB Error After 20.04 Upgrade</title>
      <link>https://hugo.unusually.pink/ubuntu-linux-grub-error-after-20-04-upgrade/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/ubuntu-linux-grub-error-after-20-04-upgrade/</guid>
      <description>While I&amp;rsquo;ve nuked my personal VPS, I still have a VPS that I use for work; it comes in handy for things like running cron jobs, maintaining persistent shells, and generally handling things where a Linux shell seems better than a macOS shell (I&amp;rsquo;m looking at you, remote PowerShell sessions connecting to Microsoft Exchange.) This week I decided to upgrade it from Ubuntu 18.04 to Ubuntu 20.04. I like to stick on the LTS (long term support) releases for my servers, but I do typically prefer to keep even the LTS releases upgraded rather than waiting for them to go end of life.</description>
      <content>&lt;p&gt;While I&amp;rsquo;ve &lt;a href=&#34;https://unusually.pink/github-pages-hosting/&#34;&gt;nuked my personal VPS&lt;/a&gt;, I still have a VPS that I use for work; it comes in handy for things like running &lt;code&gt;cron&lt;/code&gt; jobs, maintaining persistent shells, and generally handling things where a Linux shell seems better than a macOS shell (I&amp;rsquo;m looking at you, remote PowerShell sessions connecting to Microsoft Exchange.) This week I decided to upgrade it from Ubuntu 18.04 to Ubuntu 20.04. I like to stick on the LTS (long term support) releases for my servers, but I do typically prefer to keep even the LTS releases upgraded rather than waiting for them to go end of life. I &lt;em&gt;could&lt;/em&gt; have kept using Ubuntu 18.04 with &lt;a href=&#34;https://ubuntu.com/about/release-cycle&#34;&gt;maintenance updates until 2023 and security maintenance until 2028&lt;/a&gt;, but what&amp;rsquo;s the fun in that?&lt;/p&gt;
&lt;p&gt;Upgrading a VPS is always a bit of a nerve-wracking situation just because I don&amp;rsquo;t have local access to the host in case something goes extremely awry. Ubuntu tries to help alleviate this by opening a second SSH daemon on a different port just in case the primary daemon crashes during the upgrade, but if the machine ends up in a non-bootable state I&amp;rsquo;m still more or less hosed. Fortunately for me, things almost went off without a hitch&amp;hellip; almost.&lt;/p&gt;
&lt;p&gt;While the upgrade &lt;em&gt;did&lt;/em&gt; complete, I received an error toward the end of the process that &lt;a href=&#34;https://www.gnu.org/software/grub/&#34;&gt;GRUB&lt;/a&gt; failed to upgrade successfully. This was mildly terrifying since GRUB is the bootloader; if it&amp;rsquo;s not working properly the system won&amp;rsquo;t boot, and I can&amp;rsquo;t access the host of the VPS to troubleshoot it. Luckily, GRUB continued to work in my case, and my system was able to reboot successfully after the 20.04 upgrade and beyond. GRUB just wasn&amp;rsquo;t getting upgraded. I quickly noticed that I also received an error from GRUB every time I ran &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt; to update my system. Again, the other packages would upgrade successfully, but GRUB would always complain:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dpkg: error processing package grub-pc (&amp;ndash;configure):&lt;/p&gt;
&lt;p&gt;installed grub-pc package post-installation script subprocess returned error exit&lt;/p&gt;
&lt;p&gt;status 1&lt;/p&gt;
&lt;p&gt;Errors were encountered while processing: grub-pc&lt;/p&gt;
&lt;p&gt;E: Sub-process /usr/bin/dpkg returned an error code (1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After spending some time just ignoring the problem since it wasn&amp;rsquo;t exactly critical, I finally decided to do some digging. It turns out that problems like this have apparently plagued Ubuntu upgrades for a while, as I found a thread with the &lt;a href=&#34;https://askubuntu.com/questions/636456/14-04-upgrade-triggers-grub-pc-failure/636523#636523&#34;&gt;same problem all the way back with an upgrade to Ubuntu 14.04&lt;/a&gt;. The solution in that case was to simply &amp;ldquo;nuke and pave&amp;rdquo; by removing GRUB and then re-installing it. It&amp;rsquo;s once again a bit of a white-knuckle situation since if anything happens between removing and reinstalling GRUB the system will not have the ability to boot. The steps were very similar to the linked thread with some minor differences in the era of Ubuntu 20.04. The first step was still to purge GRUB:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt-get purge grub-pc grub-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Running this command in 2020 removes &lt;code&gt;/etc/grub.d/&lt;/code&gt; already, so there&amp;rsquo;s no reason to manually run the removal. Instead, I next moved straight to re-installing GRUB:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt-get install grub-pc grub-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The installation process kicks off an interactive wizard asking which disk(s) GRUB should be installed to. In my case, I only needed it on the main disk, which is &lt;code&gt;/dev/sda&lt;/code&gt;. With that done, I updated GRUB and then rebooted:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo update-grub
sudo reboot now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This part kind of sucked as I was left running &lt;code&gt;nmap&lt;/code&gt; against the SSH port for my VPS and hoping that GRUB was properly set up to allow the system to boot. After a nervous 15 seconds, though, the port started to respond again, and I could successfully SSH into the server. Re-checking for updates showed that everything was fine; the errors about GRUB having a needed upgrade that couldn&amp;rsquo;t be installed were gone. Admittedly, it was probably unnecessary to go through this upgrade without any specific reason for it, but the beauty of Ubuntu is its popularity. Rarely will there be an issue someone else hasn&amp;rsquo;t encountered, solved, and documented before, and this problem was no exception.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Swapfile Fix on Manjaro Linux Pinebook Pro</title>
      <link>https://hugo.unusually.pink/swapfile-fix-on-manjar-linux-pinebook-pro/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/swapfile-fix-on-manjar-linux-pinebook-pro/</guid>
      <description>I wrote about a month ago of an update on my Pinebook Pro after switching to Manjaro Linux. I continue to make heavy use of my Pinebook Pro while I&amp;rsquo;m still social distancing and staying at home, giving me lots of time to work on personal projects without much else to do.
Today I ran into an interesting issue, though, after applying a round of updates. I mentioned in my last Pinebook Pro post about going through the process of creating a swapfile using the directions from the Manjaro wiki so that I could hibernate the machine and get much better battery life.</description>
      <content>&lt;p&gt;I wrote about a month ago of an update &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-impressions-pinebook-pro&#34;&gt;on my Pinebook Pro&lt;/a&gt; after &lt;a href=&#34;https://www.unusually.pink/blog/pinebook-pro-follow-up-manjaro-linux&#34;&gt;switching to Manjaro Linux&lt;/a&gt;. I continue to make heavy use of my Pinebook Pro while I&amp;rsquo;m still social distancing and staying at home, giving me lots of time to work on personal projects without much else to do.&lt;/p&gt;
&lt;p&gt;Today I ran into an interesting issue, though, after applying a round of updates. I mentioned in my last Pinebook Pro post about going through the process of creating a swapfile using the &lt;a href=&#34;https://wiki.manjaro.org/index.php?title=Swap#Using_a_Swapfile&#34;&gt;directions from the Manjaro wiki&lt;/a&gt; so that I could hibernate the machine and get &lt;em&gt;much&lt;/em&gt; better battery life. I literally just opened the device back up, though, and saw a familiar message that there wasn&amp;rsquo;t enough swap space to successfully hibernate the machine, leaving me with about 20% less battery life than I had been expecting. Running &lt;code&gt;htop&lt;/code&gt; quickly showed me that my swap space was back to nothing. Weird.&lt;/p&gt;
&lt;p&gt;Following the instructions, my swapfile is literally called &lt;strong&gt;swapfile&lt;/strong&gt; on the root of the filesystem. I verified it was still in place with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ll / | grep swap
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With the file still in place, I ran through the instructions again. These ones were both successful:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo mkswap /swapfile
sudo chmod u=rw,go= /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I got an error when running this, though:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo swapon /swappfile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This told me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;swapon: /swapfile: swapon failed: Invalid argument&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Weird. I verified that I still had my swapfile entry in &lt;code&gt;/etc/fstab&lt;/code&gt; to assign the swapfile on boot by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo cat /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I tried running the &lt;code&gt;swapon&lt;/code&gt; command a different way to have it apply everything in the &lt;code&gt;fstab&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo swapon -a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This gave me another &amp;ldquo;Invalid argument&amp;rdquo; error still referencing &amp;ldquo;/swapfile&amp;rdquo;. At this point, I took to the Internet. After a couple of searches, I stumbled across &lt;a href=&#34;https://unix.stackexchange.com/questions/294600/i-cant-enable-swap-space-on-centos-7&#34;&gt;a matching Stack Exchange question&lt;/a&gt;. The top answer claims that the issue is the initial &lt;code&gt;fallocate&lt;/code&gt; command used to create the file (the same command used in the Manjaro wiki) doesn&amp;rsquo;t physically allocate the 4 GB on the storage for speed, but that&amp;rsquo;s apparently problematic for &lt;code&gt;swapon&lt;/code&gt;. Following that answer, I ran a &lt;code&gt;dd&lt;/code&gt; command to replace my swapfile with something physically allocated:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dd if=/dev/zero of=/swapfile count=4096 bs=1MiB
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This takes a few moments to run, especially on the eMMC storage of the Pinebook Pro. Once it completed, though, I repeated the other commands and verified they were all successful. Sure enough, running &lt;code&gt;htop&lt;/code&gt; once again shows my 4 GB of allocated swap space.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Pinebook Pro Follow-up: Manjaro Linux</title>
      <link>https://hugo.unusually.pink/pinebook-pro-follow-up-manjaro-linux/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/pinebook-pro-follow-up-manjaro-linux/</guid>
      <description>I had written in early February about my Pinebook Pro laptop after roughly a month of using it. Now that significantly more time has passed, time which I&amp;rsquo;ve almost exclusively spent at home due to nationwide stay-at-home orders and social distancing, I figure I&amp;rsquo;d share some of my thoughts on the laptop I raved about initially, and more specifically what I&amp;rsquo;ve done with the operating system.
The OS If you read my original post then you may recall that I was debating swapping the default Debian operating system for something different.</description>
      <content>&lt;p&gt;I had &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-impressions-pinebook-pro&#34;&gt;written in early February about my Pinebook Pro laptop&lt;/a&gt; after roughly a month of using it. Now that significantly more time has passed, time which I&amp;rsquo;ve almost exclusively spent at home due to nationwide stay-at-home orders and social distancing, I figure I&amp;rsquo;d share some of my thoughts on the laptop I raved about initially, and more specifically what I&amp;rsquo;ve done with the operating system.&lt;/p&gt;
&lt;h2 id=&#34;the-os&#34;&gt;The OS&lt;/h2&gt;
&lt;p&gt;If you read my original post then you may recall that I was debating swapping the default Debian operating system for something different. While I mentioned NetBSD in the post I ended up installing &lt;a href=&#34;https://manjaro.org/&#34;&gt;Manjaro Linux&lt;/a&gt; instead. Why? There are a few reasons to consider.&lt;/p&gt;
&lt;p&gt;One of the biggest reasons why swapping the OS can be considered important is that there are some issues with the Debian build that came on my device. It&amp;rsquo;s a &lt;a href=&#34;https://github.com/mrfixit2001/debian_desktop&#34;&gt;custom setup put together by a community member&lt;/a&gt;. It looks incredible, but that comes at a cost; the highly customized environment means that many things in it &lt;em&gt;cannot&lt;/em&gt; be updated; this includes both Chromium and Firefox. Running outdated browsers isn&amp;rsquo;t exactly cool, and I wasn&amp;rsquo;t too keen on having to compile Firefox from source every time there was a new release.&lt;/p&gt;
&lt;p&gt;On the other hand many of the community members seemed to really love Manjaro Linux, so I figured I&amp;rsquo;d gvie it a shot. Along with people in the Pinebook community raving about it, it&amp;rsquo;s also been hovering near the top of &lt;a href=&#34;https://distrowatch.com/&#34;&gt;Distrowatch&lt;/a&gt; for a while now. In fact it was &lt;a href=&#34;https://www.pine64.org/2020/03/15/march-update-manjaro-on-pinebook-pro-pinephone-software/&#34;&gt;announced in March&lt;/a&gt; that Manjaro was going to be the default OS for new Pinebook Pro devices, which is pretty slick! They&amp;rsquo;re shipping with the KDE variant, though, and while I&amp;rsquo;ve read about people having a good experience with that, I personaly prefer the more lightweight &lt;a href=&#34;https://www.xfce.org/&#34;&gt;XFCE desktop&lt;/a&gt;. It&amp;rsquo;s lighter, simpler, and overall I feel like it&amp;rsquo;s a better fit for the Pinebook Pro.&lt;/p&gt;
&lt;h2 id=&#34;getting-the-os&#34;&gt;Getting The OS&lt;/h2&gt;
&lt;p&gt;As something of a noob when it comes to working with open source SoC setups like a Rock64 or Raspberry Pi, I struggled a little with figuring out exactly how to install a new OS on the Pinebook Pro. The first thing I figured out is that, currently, you cannot boot the Pinebook Pro from USB. I made a few bootable flash drives like I would&amp;rsquo;ve historically used when installing Linux on a more traditional device without success. The &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro&#34;&gt;Pinebook Pro wiki&lt;/a&gt; seems to contradict itself on this point, saying:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Pinebook Pro is capable of booting from eMMC, USB 2.0, USB 3.0, or an SD card. It cannot boot from USB-C. The boot order of the hard-coded ROM of its RK3399 SoC is: SPI NOR, eMMC, SD, USB OTG.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then in the very next paragraph it says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;At this time, the Pinebook Pro ships with a Debian + MATE build with uboot on the eMMC. Its boot order is: SD, then eMMC. Booting off USB storage is not currently available, but will be in the future.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I wouldn&amp;rsquo;t put it past myself to just be misunderstanding something, though, so your mileage may vary. As you might be able to guess from the quotes shared above, I just ordred a cheap microSD card online and used that for the OS installation; everything worked great.&lt;/p&gt;
&lt;p&gt;For Manjaro specifically, the best way to get the proper image is to go to the forum announcement for the latest version, like &lt;a href=&#34;https://forum.manjaro.org/t/manjaro-arm-20-04-released/133374&#34;&gt;this one for the 20.04 release&lt;/a&gt;. There you can select the appropriate link for your Pinebook Pro and for your preferred desktop environment. Once you select that, you&amp;rsquo;ll be taken to another page &lt;a href=&#34;https://osdn.net/projects/manjaro-arm/storage/pbpro/xfce/20.04/&#34;&gt;like this one listing all of the images files you can download for that version and desktop environment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Be aware that if you want to install Manjaro &lt;strong&gt;directly on the laptop&lt;/strong&gt;, be sure to grab the image file with &amp;ldquo;emmc-installer&amp;rdquo; in the file name! This is the image designed to be flashed onto the internal eMMC storage of the Pinebook Pro! Grabbing the image without this will simply create a microSD card that will run the OS. This isn&amp;rsquo;t bad if you&amp;rsquo;d like to try out Manjaro while leaving the Debian installation on your eMMC, but I wanted to go all-in.&lt;/p&gt;
&lt;h2 id=&#34;preparing-your-media&#34;&gt;Preparing Your Media&lt;/h2&gt;
&lt;p&gt;To prepare the media, you can use basically any option that&amp;rsquo;ll allow you to flash the .img file you downloaded onto the microSD card. You can be old-school and use &lt;code&gt;dd&lt;/code&gt; from the command line, but I went easy mode and used &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt; instead.&lt;/p&gt;
&lt;h2 id=&#34;the-rest&#34;&gt;The Rest&lt;/h2&gt;
&lt;p&gt;The boot order on the Pinebook Pro automatically has the microSD card slot above the eMMC, so once you have a microSD card prepared just insert it into the Pinebook Pro, boot the device, and follow the prompts; it&amp;rsquo;s honestly pretty simple to install. The only catch is a known bug with the 20.04 release where you have to hit &lt;code&gt;Esc&lt;/code&gt; while looking at the Manjaro logo after booting from the microSD card before it&amp;rsquo;ll move forward; as a known bug I would imagine this won&amp;rsquo;t be relevant for future releases.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When the Manjaro logo has been present for about 15 seconds, press ESC (this is a bug, we know).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once it&amp;rsquo;s all done, you boot to this gorgeous view!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/PinebookProFollow-upManjaroLinux_manjaro_pbp_xfce.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;caveats&#34;&gt;Caveats&lt;/h2&gt;
&lt;p&gt;For the most part, Manjaro works like a complete dream, and I&amp;rsquo;ve been extremely happy with it. There are just a couple of caveats that might be worth mentioning, though.&lt;/p&gt;
&lt;h3 id=&#34;initial-update&#34;&gt;Initial Update&lt;/h3&gt;
&lt;p&gt;First, there was a bug when running the initial software update on the factory image. First I had to figure out &lt;em&gt;how&lt;/em&gt; to update it, but after some quick DuckDuckGo-fu (since I&amp;rsquo;ve really only used Debian-based flavors of Linux before) I figured I could update Manjaro via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo pacman -Syyu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that you can aslo just click the little shield icon in the bottom-right corner of the screen. Regardless of method, though, immediately after booting my new OS I would get the following error when attempting to update:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Conflicting files: nss /usr/lib/p11-kit-trust.so already exists in filesystem&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another benefit to choosing Manjaro is that it has an extremely active community, so it&amp;rsquo;s easy to search on errors like this and get solutions! I quickly found a &lt;a href=&#34;https://www.youtube.com/watch?v=NexyTfO0iuY&#34;&gt;YouTube video&lt;/a&gt; covering this error and providing the solution:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo pacman -Syyu --overwrite /usr/lib*/p11-kit-trust.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that initial update succeeded I&amp;rsquo;ve been able to perform subsequent updates without needing the &lt;code&gt;--overwrite&lt;/code&gt; parameter. Updating via the GUI also works.&lt;/p&gt;
&lt;h3 id=&#34;swap&#34;&gt;Swap&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s entirely possible I just made a mistake in my installation, but I eventually realized that I didn&amp;rsquo;t have a swap partition or file. I realized this because I noticed that the battery drain while under suspend was a bit severe; I was losing roughly 6% of my battery per hour. This meant that leaving the device on suspend for a day would completely drain a full battery. I changed my XFCE setting so that when closing the lid of the device it would hibernate. This gave me an error, though, that I didn&amp;rsquo;t have enough swap space to hibernate.&lt;/p&gt;
&lt;p&gt;I checked the output of &lt;code&gt;htop&lt;/code&gt; and realized that I didn&amp;rsquo;t have enough space because I didn&amp;rsquo;t have &lt;strong&gt;any&lt;/strong&gt; swap. Luckily for me, the Manjaro folks have a wiki page dedicated to exactly this; I ended up following the steps to &lt;a href=&#34;https://wiki.manjaro.org/index.php?title=Swap#Using_a_Swapfile&#34;&gt;create a swapfile rather than adjusting my partitions to have a swap partition&lt;/a&gt;. Since there are 4 GB of RAM in the Pinebook Pro, I ended up creating a 4 GB swap file. Once it&amp;rsquo;s created you can verify it by looking at &lt;code&gt;htop&lt;/code&gt; or running &lt;code&gt;swapon&lt;/code&gt;. If you&amp;rsquo;re concerned about the amount of storage on the eMMC, you can see how much you&amp;rsquo;re using via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;df -H | grep /$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;typing-and-the-touchpad&#34;&gt;Typing and the Touchpad&lt;/h3&gt;
&lt;p&gt;One thing I&amp;rsquo;ve noticed on occasion is that typing does not disable the touchpad on the laptop, meaning that it&amp;rsquo;s easy for your hand to accidentally brush it, clicking somewhere else and causing a bit of havoc on whatever it is you&amp;rsquo;re trying to do. I&amp;rsquo;ve accidentally done it once just while working on this article. I&amp;rsquo;ve not found a solution for this yet (I&amp;rsquo;ll update the post if I do), but it hasn&amp;rsquo;t been a big deal for me. It&amp;rsquo;s just something to be mindful about.&lt;/p&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End&lt;/h2&gt;
&lt;p&gt;On the whole, I&amp;rsquo;m &lt;em&gt;extremely&lt;/em&gt; pleased with my switch to Manjaro. If you&amp;rsquo;re running a Pinebook Pro with the original Debian build, I&amp;rsquo;d highly recommend giving Manjaro a shot; it honestly feels like a whole new device afterward.&lt;/p&gt;
&lt;p&gt;Keep the &lt;a href=&#34;https://www.unusually.pink/blog/its-all-about-open-source&#34;&gt;open source love alive&lt;/a&gt;, and stay pink!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Impressions: Pinebook Pro</title>
      <link>https://hugo.unusually.pink/unusually-pink-impressions-pinebook-pro/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-impressions-pinebook-pro/</guid>
      <description>In my last post about not using Chrome OS, I neglected to get into what I was replacing my Chromebooks with since that seemed like a lengthy post in its own right. As the title gave away, my switch went to the Pinebook Pro from Pine 64. I had been interested in the original $99 USD Pinebook when that came out a couple of years ago, but it seemed a bit too basic for what I wnanted.</description>
      <content>&lt;p&gt;In my &lt;a href=&#34;https://www.unusually.pink/blog/rip-chrome-os&#34;&gt;last post about not using Chrome OS&lt;/a&gt;, I neglected to get into &lt;em&gt;what&lt;/em&gt; I was replacing my Chromebooks with since that seemed like a lengthy post in its own right. As the title gave away, my switch went to the &lt;a href=&#34;https://www.pine64.org/pinebook-pro/&#34;&gt;Pinebook Pro&lt;/a&gt; from Pine 64. I had been interested in the original $99 USD Pinebook when that came out a couple of years ago, but it seemed a bit &lt;strong&gt;too&lt;/strong&gt; basic for what I wnanted. The Pinebook Pro seemed to offer a more compelling experience for $199. The description on the site even seemed to match exactly what I was wanting.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Pinebook Pro is meant to deliver solid day-to-day Linux or *BSD experience and to be a compelling alternative to mid-ranged Chromebooks that people convert into Linux laptops.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I didn&amp;rsquo;t want to have to deal with Windows, nor was I wanting to go through a lot of research to find a Windows laptop or Chromebook that I could then convert to a Linux laptop. The Pinebook Pro seemed to take care of this for me while also giving me an outlet to support a great company doing some awesome things for the open source community. I was a little leery on what kind of performance I would get out of an ARM processor and if I would hit any compatibility issues, but so far everything has been buttery smooth.&lt;/p&gt;
&lt;h1 id=&#34;hardware&#34;&gt;Hardware&lt;/h1&gt;
&lt;p&gt;The hardware is absurdly nice for a $199 device. The Magnesium alloy body just feels solid and sturdy. It has enough heft to make the laptop feel more expensive than it is without being a pain to carry around. It also just looks sleek given that there&amp;rsquo;s literally nothing on the top, not even branding. It&amp;rsquo;s a spotless, black surface.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_IMG_0051.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t normally leave my laptops completely unemblazoned, so I just ordered some stickers for it earlier today. I&amp;rsquo;ll share pictures on the socials once those are on.&lt;/p&gt;
&lt;p&gt;Under the hood is the a screen that you almost feel has no business being on a $200 machine. It&amp;rsquo;s a 14&amp;quot; 1080p IPS display that looks absolutely gorgeous. Everything from typing away in a Terminal or blog post to watching videos looks terrific on it.&lt;/p&gt;
&lt;p&gt;The keyboard is also surprisingly nice. It&amp;rsquo;s spacious, and the keys have an impressive amount of travel to them. Given that these days I rarely use my personal laptop unless I&amp;rsquo;m doing a lot of typing where I need a physical keyboard, the keys on the Pinebook Pro really deliver. Rarely do I even bother to sit at a desk and connect an external keyboard; the default experience is just fine. The keys have good tactile feedback to go along with that travel distance, so you&amp;rsquo;re never left doubting if you pressed a particular key or not.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_IMG_0052.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;You may notice that the keyboard also features literally the only external branding other than the sticker on the bottom of the device. The super key has a Pine 64 logo on it, which is a nice, subtle touch.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_IMG_0050.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The trackpad is unfortunately not quite as solid as the keyboard. It doesn&amp;rsquo;t feel particular sensitive and the pointer come across as &amp;ldquo;floaty&amp;rdquo;. Hitting big buttons is fine, but it can be annoying to make more precise movements like grabbing the corner of an application to resize it. If I&amp;rsquo;m using the device for something that&amp;rsquo;s mouse-intensive, I&amp;rsquo;ll typically reach for my &lt;a href=&#34;https://www.logitech.com/en-us/product/mx-ergo-wireless-trackball-mouse&#34;&gt;Logitech MX Ergo trackball&lt;/a&gt;, but the trackpad is still workable in a pinch.&lt;/p&gt;
&lt;p&gt;The speakers aren&amp;rsquo;t bad, but they&amp;rsquo;re about what you expect from laptop speakers. Only Apple seems to posess the voodoo required to make great sounding laptop speakers.&lt;/p&gt;
&lt;p&gt;The device comes with a barrel jack charger. You can also charge it via the USB-C port as well, which is what I much more commonly do with the charger which came with my Acer Chromebook 315.&lt;/p&gt;
&lt;h1 id=&#34;software&#34;&gt;Software&lt;/h1&gt;
&lt;p&gt;Once the device is booted, you&amp;rsquo;ll be using a customized Debian Linux version that comes from the factory.&lt;/p&gt;
&lt;p&gt;Distributor ID:    Debian
Description:    Debian GNU/Linux 9.12 (stretch)
Release:    9.12
Codename:    stretch&lt;/p&gt;
&lt;p&gt;Being that it&amp;rsquo;s Debian Linux, you can do pretty much anything else that you&amp;rsquo;d expect with Debian Linux&amp;hellip; and that&amp;rsquo;s &lt;strong&gt;awesome&lt;/strong&gt;. There are some limitations in the packages simply regarding what software supports ARM and which software does not, but everything I&amp;rsquo;ve tried to do so far has worked fine. That being said, I&amp;rsquo;m mainly still using the device very similar to a Chromebook; I want a web browser and a Terminal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_Screenshotat2020-02-0915-17-28.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The ARM processor and included 4 GB of RAM do an excellent job of keeping everything snappy. It&amp;rsquo;ll occasionally take a little bit longer to launch a heavier application, but otherwise it&amp;rsquo;s often easy to forget that I&amp;rsquo;m on a $200 Linux laptop and not my $2000 MacBook Pro for work. The 64 GB of local storage is a nice change from most Chromebooks as well. Rarely is my system ever bumping its head against the hardware, even when I&amp;rsquo;m streaming music and have a bunch of browser tabs open.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsPinebookPro_image-asset.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Need to install something new? Just &lt;code&gt;sudo apt install package-name&lt;/code&gt; and you&amp;rsquo;re good to go! That being said, just like normal with Debian you get a wide array of software out of the box&amp;hellip; all of which still only amounts to a 5 GB footprint in what comes from the factory.&lt;/p&gt;
&lt;h1 id=&#34;to-do&#34;&gt;To Do&lt;/h1&gt;
&lt;p&gt;There are a few things to do out of the box when you get a Pinebook Pro; I would &lt;strong&gt;highly&lt;/strong&gt; recommend reading &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro&#34;&gt;the wiki page&lt;/a&gt; about the device so you know what those are instead of trying to do things on your own. For example, there&amp;rsquo;s no traditional &amp;ldquo;first run&amp;rdquo; experience to set things up given that this is a highly customized Debian image. Instead, you log in with the default credentials &lt;code&gt;rock/rock&lt;/code&gt; to get things started. It&amp;rsquo;s highly recommended you &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro#Initial_user_changes.2C_password.2C_name.2C_etc&#34;&gt;rename the &lt;code&gt;rock&lt;/code&gt; account&lt;/a&gt; if you want to keep all of the customizations. If you make a brand new account, which is totally an option if you want to go that route, you&amp;rsquo;ll end up in a session that looks much more like a traditional Debian installation.&lt;/p&gt;
&lt;p&gt;While the Wiki does an awesome job of covering what to do when you get the device, my recommendations are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disable the root account.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo passwd -l root&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install and enable &lt;code&gt;ufw&lt;/code&gt; for a firewall.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo apt install ufw&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw enable&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run the &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro#Default_Debian_MATE_Desktop_Quick_Start&#34;&gt;system update script&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Update the rest of the system.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Update the &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro#Trackpad&#34;&gt;keyboard and trackpad firmware&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Check your keyboard version to make sure it&amp;rsquo;s on the correct language. Mine came as UK English.
&lt;ul&gt;
&lt;li&gt;If that&amp;rsquo;s not correct, type &lt;code&gt;keyboard&lt;/code&gt; at the menu launcher, open the keyboard preferences, go to the &lt;code&gt;Layouts&lt;/code&gt; tab, and select the apporpriate layout.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Verify if your timezone is correct or needs to be updated.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tzselect&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, all of this assumes you&amp;rsquo;re going to keep rolling with the factory Debian image. There&amp;rsquo;s a &lt;a href=&#34;https://wiki.pine64.org/index.php/Pinebook_Pro_Software_Release&#34;&gt;wide array of operating systems you can choose from&lt;/a&gt;. I&amp;rsquo;m personally super tempted to give the &lt;a href=&#34;http://www.armbsd.org/arm/&#34;&gt;NetBSD image&lt;/a&gt; a shot.&lt;/p&gt;
&lt;h1 id=&#34;wrap-up&#34;&gt;Wrap Up&lt;/h1&gt;
&lt;p&gt;Overall, I&amp;rsquo;m &lt;em&gt;extremely&lt;/em&gt; pleased with the Pinebook Pro so far. They&amp;rsquo;ve got a great community, and I&amp;rsquo;ve spent a little time so far keeping tabs on their IRC server and Discord. If you can&amp;rsquo;t find something in particular on the wiki (which would be surprising; it&amp;rsquo;s extremely well-maintained), the helpful folks on IRC can likely assist. If you&amp;rsquo;re a fan of budget laptops but want to move away from Chrome OS or Windows, the Pinebook Pro seems like a great option if you feel comfortable with Linux.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Chromebooks, VPNs, and You</title>
      <link>https://hugo.unusually.pink/chromebooks-vpns-and-you/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/chromebooks-vpns-and-you/</guid>
      <description>Do you trust your Internet service provider? If you answer that question with a resounding “No!”, then you’re among friends here. While Internet connectivity is an essential need for many of us, there are a plethora of reasons to be wary of the company providing that connectivity to you. Especially in the United States, the recent repeal of net neutrality rules and erosion of privacy mean you may want to obscure exactly what you’re doing from your Internet provider, even if that activity is completely legal and innocuous.</description>
      <content>&lt;p&gt;Do you trust your Internet service provider? If you answer that question with a resounding “No!”, then you’re among friends here. While Internet connectivity is an essential need for many of us, there are a plethora of reasons to be wary of the company providing that connectivity to you. Especially in the United States, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Net_neutrality_in_the_United_States#Rollback_of_Obama-era_rules&#34;&gt;recent repeal of net neutrality rules&lt;/a&gt; and &lt;a href=&#34;https://www.eff.org/deeplinks/2017/04/heres-how-protect-your-privacy-your-internet-service-provider&#34;&gt;erosion of privacy&lt;/a&gt; mean you may want to obscure exactly what you’re doing from your Internet provider, even if that activity is completely legal and innocuous. Just because I’m not doing anything illegal online doesn’t mean I want to allow my ISP to gather data on what I’m doing in order to sell it to advertisers; in my opinion they make plenty of money off of the monthly fee I pay them for Internet access.&lt;/p&gt;
&lt;p&gt;This is where a VPN (virtual private network) can come in handy, as we discussed in &lt;a href=&#34;https://www.unusually.pink/podcast/episode-8-playlists-and-privacy&#34;&gt;Episode 8&lt;/a&gt;. VPNs are historically most common in the corporate world. They allow employees to create a secure tunnel between wherever they are and their internal company network in order to access resources that aren’t available to the outside world. In the consumer space, though, they’ve been gaining popularity as privacy-conscious consumers look for way to protect themselves from things like public WiFi and, increasingly, ISP data collection.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: This post is&lt;/em&gt; &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;going to cover the potential risks for a VPN or how to choose one. We recommend you check out guidance from sources like the&lt;/em&gt; &lt;a href=&#34;https://ssd.eff.org/en/module/choosing-vpn-thats-right-you&#34;&gt;&lt;em&gt;EFF&lt;/em&gt;&lt;/a&gt; &lt;em&gt;for that. Brandi and John personally recommend either&lt;/em&gt; &lt;a href=&#34;https://www.privateinternetaccess.com&#34;&gt;&lt;em&gt;Private Internet Access&lt;/em&gt;&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a href=&#34;https://www.tunnelbear.com&#34;&gt;&lt;em&gt;TunnelBear&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Check out&lt;/em&gt; &lt;a href=&#34;https://www.unusually.pink/podcast/episode-8-playlists-and-privacy&#34;&gt;&lt;em&gt;Episode 8&lt;/em&gt;&lt;/a&gt; &lt;em&gt;for more details!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As we’ve discussed in a few podcast episodes, I happen to be a fan of Chromebooks as my personal laptop. While I have a beefy desktop to use as a gaming computer or when I need to do some heavy lifting, I like having a Chromebook as a cheap, fast, and easy computer for things like browsing Reddit, watching YouTube videos, and typing up blog posts. The &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-impressions-acer-chromebook-315&#34;&gt;addition of a Linux VM&lt;/a&gt; means I can even do some programming. VPNs get a little wonky on a Chromebook, though. Most VPNs offer applications for Windows, macOS, Android, and iOS. Many services will also support configurations with the &lt;a href=&#34;https://openvpn.net&#34;&gt;OpenVPN Connect&lt;/a&gt; client in case you want to use something open source and/or are running some flavor of Linux. For example, Brandi subscribes to &lt;a href=&#34;https://www.privateinternetaccess.com&#34;&gt;Private Internet Access&lt;/a&gt;. On her MacBook, she simply runs the PIA application, selects the endpoint she’d like to direct her traffic to, and is done.&lt;/p&gt;
&lt;p&gt;The waters get murkier in Chromebook land since you don’t install traditional applications on them. You also have to consider the scope of where you’re working on a Chromebook and what it is you’re looking to protect. Are you just concerned about securing the data flowing through the Chrome browser? Do you need to cover system level networking? Are you doing anything online via your Linux VM that you want to secure? These all play a role, and hopefully this post will enlighten you as to the reach of the options at your disposal.&lt;/p&gt;
&lt;p&gt;The first step to testing the scope of VPN clients on Chromebooks is to be able to figure out what your external IP is since that can tell you where the outside world sees your connection coming from, be it your home network or a VPN provider’s. I personally like &lt;a href=&#34;http://icanhazip.com/&#34;&gt;I Can Haz IP&lt;/a&gt; for that. Simply going to the site will give you a web page with your public IP address. Here we can see the result I get from my Chromebook with no VPN solutions at play.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_browser_none.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The really cool part about this service is that if you bounce an HTTP request off of it from &lt;a href=&#34;https://curl.haxx.se&#34;&gt;curl&lt;/a&gt;, it’ll reply with your public IP address. This easily allows testing of VPN providers from a command line. If you don’t have curl in your Linux VM, you can easily install it via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt install curl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we can see what happens when I curl against I Can Haz IP from my Linux VM on my Chromebook. Note that it matches the public IP I get from my browser.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_terminal_none.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you have an older Chromebook that doesn’t feature Google Play support, there are several VPN providers (including both &lt;a href=&#34;https://chrome.google.com/webstore/detail/private-internet-access/jplnlifepflhkbkgonidnobkakhmpnmh&#34;&gt;PIA&lt;/a&gt; and &lt;a href=&#34;https://chrome.google.com/webstore/detail/tunnelbear-vpn/omdakjcmkglenbhjadbccaookpfjihpa&#34;&gt;TunnelBear&lt;/a&gt;) that offer Chrome extensions. These can be great for quickly proxying your traffic in a pinch. After flipping the switch on the TunnelBear extension, for example, I can see that the endpoint I’m seen as coming from via my browser has changed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_browser_extension.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It’s important to keep in mind, though, that the VPN is operating at the &lt;em&gt;application&lt;/em&gt; level rather than at the system level. Only traffic from my browser is going through the VPN. As a result, running curl again has no change; my Linux VM’s traffic is still going straight out through my ISP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_terminal_extension.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is what we refer to as a bummer. If you happen to have a Chromebook with Google Play support, though, there’s a better solution available. &lt;a href=&#34;https://www.aboutchromebooks.com/news/chrome-os-75-android-vpn-support-linux-project-crostini/&#34;&gt;Updates to Chrome OS 75 in the spring of this year&lt;/a&gt; resulted in better integration between Android VPNs and Chrome OS as a whole. Installing an Android VPN client from the Play Store and connecting it will result in the WiFi icon in Chrome OS changing to display a tiny key icon, just like you’d see in the notification area of Android. After making this connection, I can verify that my browser shows my connection as coming from my VPN provider.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_browser_android.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Even better, though, checking from my Linux VM now shows the same thing; the VM’s traffic is now also going through my VPN provider instead of to the prying eyes of my ISP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/ChromebooksVPNsandYou_terminal_android.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Suffice to say, this is &lt;em&gt;much&lt;/em&gt; better. While the Chrome extensions are passable for older Chromebooks without Google Play access, the corresponding Android applications will offer far superior coverage if they’re an option on your particular device. Not that you shouldn’t have already been doing this anyway, but this should be an incentive to avoid purchasing the &lt;em&gt;insanely&lt;/em&gt; cheap Chromebooks that so frequently go on sale; I’d recommend making sure you get a device that at least has Google Play and Linux support. Keep encrypting that traffic, and stay pink!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: In my testing, the Linux VM in Chrome OS would often struggle to reconnect properly after an Android VPN application was connected and/or disconnected. For the best results, I’d recommend launching the VM&lt;/em&gt; &lt;strong&gt;&lt;em&gt;after&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;connecting your VPN. If you forget and connect your VPN after the fact, shut down your VM and restart it.&lt;/em&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Impressions: Acer Chromebook 315</title>
      <link>https://hugo.unusually.pink/unusually-pink-impressions-acer-chromebook-315/</link>
      <pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-impressions-acer-chromebook-315/</guid>
      <description>As we’ve mentioned in a few podcast episodes, I happen to be a fan of Chromebooks. I have a hulking desktop that I use for things like gaming, programming, and photo editing. That same desktop is also extremely loud and generates enough heat to warm my apartment, whether it needs to be warmed or not. As a result I tend to like having a cheap Chromebook handy when I just need to take care of some email, catch up on my RSS feeds, waste time look at memes on Reddit, or writing posts for our podcast.</description>
      <content>&lt;p&gt;As we’ve mentioned in a few podcast episodes, I happen to be a fan of Chromebooks. I have a hulking desktop that I use for things like gaming, programming, and photo editing. That same desktop is also extremely loud and generates enough heat to warm my apartment, whether it needs to be warmed or not. As a result I tend to like having a cheap Chromebook handy when I just need to take care of some email, catch up on my RSS feeds, waste time look at memes on Reddit, or writing posts for our podcast. I’ve had a handful of Chromebooks over the years, and I’ve always been happy with them given that, for me at least, they serve as supplementary for my personal computing needs. I feel like I’d struggle more than a little if a Chromebook was my only computer.&lt;/p&gt;
&lt;p&gt;That being said, my previous Chromebook, a Toshiba Chromebook 2, was getting fairly long in the tooth, and I was on the hunt for a new one to replace it. Chromebooks had been undergoing improvements since I purchased the Chromebook 2, but while the device tended to make the list of ones which were allegedly slated to gain access to the Google Play Store and Linux apps, that never seemed to manifest. I had been eyeing the Acer Chromebook 315 and the HP Chromebook 14, as these were the first two Chrome OS devices to feature AMD processors. That seemed pretty slick to me as I’ve long had AMD hardware over Intel and Nvidia; getting &lt;strong&gt;nearly&lt;/strong&gt; the same performance for significantly less money always seemed like a win for me. Ultimately, I pulled the trigger on the Chromebook 315 when Brandi let me know that it was on sale for around $200 during Prime Day, down from the normal $279. $279 itself still isn’t much of a laptop, but again… it’s a Chromebook. I also &lt;em&gt;don’t&lt;/em&gt; actually have Amazon Prime, so Brandi did me another solid by ordering it for me, and I just paid her back. She’s awesome, isn’t she?&lt;/p&gt;
&lt;p&gt;At any rate, this &lt;em&gt;isn’t&lt;/em&gt; titled as a review because I hate the idea of trying to numerically score things. Instead, I figured I’d just write up some thoughts on the device now that I’ve been using it for about a month. I figure I’ll make a similar post for my (relatively) new Pixel 3a XL sometime in the near future, too.&lt;/p&gt;
&lt;h1 id=&#34;hardware&#34;&gt;Hardware&lt;/h1&gt;
&lt;p&gt;Aside from the AMD A4 processor, the Chromebook 315 is pretty standard fare for a mid-range Chromebook. 4 GB of RAM and 32 GB of solid state storage get you up and running. The A4 processor seems to do a pretty solid job of handing most of what I’m using a Chromebook for, which is running a handful of tabs to browse the web, writing code in a text editor, or scrolling through endless memes and videos on Reddit. Even with around 10 tabs and a few PWAs running (the Spotify one kicks ass and takes names), I haven’t noticed any real slowdown or issue. The storage space &lt;em&gt;could&lt;/em&gt; potentially be a sore spot, though, and I’ll discuss why in a little more detail when we get to the software section.&lt;/p&gt;
&lt;h1 id=&#34;build&#34;&gt;Build&lt;/h1&gt;
&lt;p&gt;The device itself is all plastic, as you’d expect for a laptop that’s only $279 dollars on a bad day. It at least feels solid, though, and isn’t creaky. As a 15” laptop, it weighs in at just under 4 lbs., which seems neither particularly bad or impressive. The hinge for the lid is &lt;em&gt;extremely&lt;/em&gt; stiff and almost uncomfortable to pry open from a completely closed position; it would be damn-near impossible to do with a single hand. But the trade-off to that is the screen doesn’t wobble at all, even when quickly typing while the device wrests on an uneven surface like your lap.&lt;/p&gt;
&lt;p&gt;The lid features a textured pattern, which concerned me a little bit since I wasn’t able to find any detailed photos or videos of it. I had been worried that, like the Toshiba Chromebook 2, the texture would actually keep me from applying stickers to it. Fortunately, that wasn’t the case at all. My sticker game remains &lt;em&gt;firmly&lt;/em&gt; on point. Also, most of my stickers came from Brandi so don’t give me credit for my taste. Did I mention she’s awesome?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsAcerChromebook315_cb_closed.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;battery&#34;&gt;Battery&lt;/h1&gt;
&lt;p&gt;The battery is rated for 10 hours. To be honest, I’ve left the device sit for days and days at a time without touching it, so I can’t accurately judge the length. I can say that I’ve only had to charge it a handful of times since I got it, though. Running Android applications does seem to to drain the battery at a faster clip, though the screen is the biggest culprit as you’re all but required to have the brightness cranked up pretty high under all circumstances.&lt;/p&gt;
&lt;h1 id=&#34;display&#34;&gt;Display&lt;/h1&gt;
&lt;p&gt;Why does the brightness need to be turned up all the time? Because the display is absolute &lt;strong&gt;garbage&lt;/strong&gt;. It may very well be the worst display I’ve ever used on a laptop in my entire life, and that’s no exaggeration from someone who has been using laptops for over a decade. You may be tempted to look at the baseline model and assume that’s because it’s running at 1366 x 768. It’s true that I had been hoping to get the 1920 x 1080 model, but that variant wasn’t on sale during Prime Day and at the time was $70 more. Paying $340 instead of $200 for a laptop just to get a higher resolution screen didn’t seem particularly worthwhile to me, especially when I already had to adjust the text scaling on my 13” 1080p Chromebook 2 so that my myopic ass could actually &lt;em&gt;read&lt;/em&gt; anything without my face two inches from the screen. All-in-all, I wasn’t that bummed about the resolution.&lt;/p&gt;
&lt;p&gt;The problem is just that the display is horribly washed out. It’s literally incapable of making a color that isn’t pastel. Gray text on an off-white background on a webpage is all but impossible to read with the brightness below 75%. Even when watching videos, the colors are all a lighter hue than you’d expect. While the hardware will &lt;em&gt;easily&lt;/em&gt; push the pixels on a display of this low resolution, I’d recommend against this for a device aimed at video. At least the viewing angles are pretty good?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsAcerChromebook315_cb_open.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;speakers&#34;&gt;Speakers&lt;/h1&gt;
&lt;p&gt;The speakers are fine. They aren’t great, but being mounted facing up does make a massive difference when compared to other devices I’ve used where the speakers are pointing down underneath the device. I’ve been able to easily listen to Spotify on it without being irritated with the sound or any distortion or vibration.&lt;/p&gt;
&lt;h1 id=&#34;ports-and-connectivity&#34;&gt;Ports and Connectivity&lt;/h1&gt;
&lt;p&gt;Awesome enough, the device features two USB C ports and two USB A ports. Having a USB C port on either side of the device is pretty awesome. One of them will commonly be used for charging; it was nice to see that as the charging solution rather than yet another proprietary connector.&lt;/p&gt;
&lt;h1 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h1&gt;
&lt;p&gt;The keyboard is middling at best. I know, I know… for a $279 dollar device, are you expecting a good keyboard? Well… kind of? I’ve owned an Acer CB3-131 before, a device which retailed for $179 and which was made by the exact same company. The keyboard on it was actually significantly better than the one on the CB315. The spacing between the CB315’s keys are good, but typing on it just feels &lt;em&gt;bad&lt;/em&gt;. The keys are extremely squishy; it’s very difficult to tell if you’ve actually pressed a key adequately or not while typing quickly, leaving me with a not-insignificant number of missed characters when I’m hammering out these posts. Admittedly, part of that stems from the fact that I’m used to spending most of my time typing on a &lt;a href=&#34;https://www.unusually.pink/podcast/episode-12-crazy-about-keyboards&#34;&gt;mechanical keyboard&lt;/a&gt;, but I still expected something at least a tiny bit better. That being said, it works well enough for quick tweets and Reddit posts. For longer posts like this, though, I’m more likely to dock it in my work-from-home setup and type on a &lt;a href=&#34;https://www.unusually.pink/blog/unusually-pink-peripherals-razer-quartz-2019&#34;&gt;Razer Blackwidow Tournament Edition Quartz&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;touchpad&#34;&gt;Touchpad&lt;/h1&gt;
&lt;p&gt;It’s a touchpad. It works. It’s exactly what you expect; it’s simultaneously:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The same as every other Chromebook trackpad&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Better than every PC trackpad&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Worse than every MacBook trackpad&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;software&#34;&gt;Software&lt;/h1&gt;
&lt;p&gt;This is where things get interesting for me. I could very easily find from doing searches online prior to purchasing the device that it had Google Play support. This means you can access the Google Play Store just like you would from an Android phone and install any apps you may happen to want. They might look a little janky (because what phone display has a maximum vertical resolution of 768 pixels in 2019?) but they work and they tend to run pretty smoothly. I even tried out a couple of games and found them pretty pleasant. What I was &lt;strong&gt;really&lt;/strong&gt; curious about, though, were Linux apps. On supported devices, you can essentially install a Linux VM and get access to a shell with a full Linux system running underneath it. For the most part, compatible devices depended upon having the appropriate processor architecture, so I wasn’t sure if an AMD processor would throw a wrench into things. Mercifully, that wasn’t the case. I was able to just search the settings for “Linux”, toggle it to on, wait a minute for a download, and then I was up an running.&lt;/p&gt;
&lt;p&gt;As you can see here, the VM you get is (at the time of this writing) running Debian 9. You can treat it basically like any other Debian install, including installing the packages you need from the repository. Is the repo missing something you really need? Just download and run the .deb file. Linux aficionados like myself will immediately feel at home.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/UnusuallyPinkImpressionsAcerChromebook315_Screenshot2019-08-29at83157PM.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I was able to quickly configure Vim and Python3 along with using the lovely &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;rustup toolchain&lt;/a&gt; to install the latest version of Rust. All of them work perfectly. This was huge for me because it means I can do some scripting and development on my Chromebook directly. This without having to use which I’d previously do, which was either sit at my loud, furnace of a desktop or use my Chromebook to SSH into a development server.&lt;/p&gt;
&lt;p&gt;The one downside to all of this is that 32 GB hard drive. Getting Debian installed took about 2 GB on its own. When you start adding in some Android apps, copying over a few ebooks, and of course take into account Chrome OS itself, I’m looking at 16 GB of remaining space. 50% isn’t a huge issue for me right now, but if I start needing to add a lot of additional Linux packages or Android apps then things could get tight rather quickly. I may have to investigate swapping out the storage in the future if I start to bump my head.&lt;/p&gt;
&lt;h1 id=&#34;wrap-up&#34;&gt;Wrap-up&lt;/h1&gt;
&lt;p&gt;On the whole, I’m pretty happy with the CB315, especially considering that I paid around 70% of the normal price for it. If I had paid the full price I think I’d still be happy but I’d be slightly &lt;em&gt;more&lt;/em&gt; disappointed with the display. It really is atrocious. Chrome OS has come a long way since when I first started using it in 2013, and as a Linux fan it now has so much more value than it did previously. I still don’t think I’d want to roll with a Chromebook as my only personal computer right now, but I can certainly do more with it now than I could before.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Fixing Let&#39;s Encrypt Certificates After You Delete Them Like An Idiot</title>
      <link>https://hugo.unusually.pink/fixing-lets-encrypt-certificates-after-you-delete-them-like-an-idiot/</link>
      <pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/fixing-lets-encrypt-certificates-after-you-delete-them-like-an-idiot/</guid>
      <description>In Episode 11, I had discussed how I run a couple of my websites on a Linux server running Nginx as the web server and encrypting connections to them via Let’s Encrypt certificates. Shortly after recording that episode, though, I realized I had messed up my certificate configuration via certbot. If you don’t recall the episode, I had taken my web server which was only running laifu.moe and added awk.ninja to it so that I had both sites running on the same server.</description>
      <content>&lt;p&gt;In &lt;a href=&#34;https://www.unusually.pink/podcast/episode-11-attach-all-the-storage&#34;&gt;Episode 11&lt;/a&gt;, I had discussed how I run a couple of my websites on a Linux server running &lt;a href=&#34;https://www.nginx.com/&#34;&gt;Nginx&lt;/a&gt; as the web server and encrypting connections to them via &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let’s Encrypt&lt;/a&gt; certificates. Shortly after recording that episode, though, I realized I had messed up my certificate configuration via &lt;a href=&#34;https://certbot.eff.org/&#34;&gt;certbot&lt;/a&gt;. If you don’t recall the episode, I had taken my web server which was only running &lt;a href=&#34;https://laifu.moe&#34;&gt;laifu.moe&lt;/a&gt; and added &lt;a href=&#34;https://awk.ninja&#34;&gt;awk.ninja&lt;/a&gt; to it so that I had both sites running on the same server. When I added awk.ninja, I had to re-run certbot and get a certificate for it along with the certificate I had for laifu.moe. That’s where I messed up; I got tipped off when I received the following email from Let’s Encrypt letting me know that my certificate for laifu.moe was about to expire.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Your certificate (or certificates) for the names listed below will expire in 10 days (on 07 Jul 19 12:52 +0000). Please make sure to renew your certificate before then, or visitors to your website will encounter errors.&lt;/p&gt;
&lt;p&gt;We recommend renewing certificates automatically when they have a third of their&lt;br&gt;
total lifetime left. For Let’s Encrypt’s current 90-day certificates, that means&lt;br&gt;
renewing 30 days before expiration. See&lt;br&gt;
&lt;a href=&#34;https://letsencrypt.org/docs/integration-guide/&#34;&gt;https://letsencrypt.org/docs/integration-guide/&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;laifu.moe&lt;br&gt;
&lt;a href=&#34;http://www.laifu.moe&#34;&gt;www.laifu.moe&lt;/a&gt;”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That seemed odd to me since I knew I had a &lt;strong&gt;cron&lt;/strong&gt; job running to update the certificates. I checked the expiration for the certificate on laifu.moe and saw that it had nearly two months left on it. I checked the certificate applied to awk.ninja and saw the same thing. EXACTLY the same thing in fact. In double-checking the certificate on laifu.moe, I realized that the Common Name was for awk.ninja. I was using the awk.ninja certificate for &lt;em&gt;both&lt;/em&gt; of my sites. Oops. What happened was that when I added awk.ninja and re-ran &lt;strong&gt;certbot&lt;/strong&gt;, I got the following:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/FixingLetsEncryptCertificatesAfterYouDeleteThemLikeAnIdiot_certbot.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;My thought at the time was that I needed to select ALL of the sites. In reality, this overwrote the configuration I already had on laifu.moe and applied the awk.ninja certificate to both sites. This is where I decided to be really stupid. I decided that I would delete the existing certificates, re-run &lt;strong&gt;certbot&lt;/strong&gt; twice (one for laifu.moe and once for awk.ninja), and then be done. I started off by deleting the awk.ninja certificate that was applied to both sites:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo certbot delete --cert-name awk.ninja
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I did the same to delete the laifu.moe certificate. Then I tried to do a vanilla run of &lt;strong&gt;certbot&lt;/strong&gt; to get the menu in my screenshot above and individually configure each of my two sites. Instead of getting that menu, though, I received an error message that my sites were pointing to certificates that didn’t exist. &lt;strong&gt;certbot&lt;/strong&gt; then exited without giving me any further options. The problem is that my configuration files below still referenced the certificates that I just nuked. Oops.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/etc/nginx/sites-available/awk.ninja
/etc/nginx/sites-available/laifu.moe
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After thinking about it for a few seconds, it made sense; &lt;strong&gt;certbot&lt;/strong&gt; can’t know what’s going on and is expecting me to do some cleanup on the mess I made instead of making assumptions about whether or not I should still have certificates. To keep my life simple, I decided to go back to a clean slate on my &lt;strong&gt;sites-available&lt;/strong&gt; configurations since I knew that I could get &lt;strong&gt;certbot&lt;/strong&gt; to redo the configuration again as long as I could get it to successfully run. As a result, I just set the configurations for both laifu.moe and awk.ninja back to a super vanilla setup. Just &lt;strong&gt;%s/laifu.moe/awk.ninja/g&lt;/strong&gt; on the file below for what I configured on awk.ninja.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
        listen 80;
        listen [::]:80;

        root /var/www/laifu.moe/html;
        index index.html index.htm index.nginx-debian.html;

        server_name laifu.moe www.laifu.moe;

        location / {
                try_files $uri $uri/ =404;
        }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once I had that done, I restarted nginx just to make sure it was working and I could hit port 80 for both sites.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With that working, I was able to re-run &lt;strong&gt;certbot&lt;/strong&gt; and finally get the menu from my initial screenshot. I first configured a certificate for awk.ninja and its www variant. Once that was done, I ran &lt;strong&gt;certbot&lt;/strong&gt; one more time and walked through getting a certificate for laifu.moe and its www-variant. In both instances, I opted to have &lt;strong&gt;certbot&lt;/strong&gt; reconfigure the files in &lt;strong&gt;sites-available&lt;/strong&gt; to redirect all HTTP traffic for HTTPS. I restarted Nginx one more time and &lt;em&gt;finally&lt;/em&gt; I had everything configured the way I wanted with each site using its &lt;em&gt;own&lt;/em&gt; certificate.&lt;/p&gt;
&lt;p&gt;The moral of the story is to actually troubleshoot the problem instead of just starting off by deleting shit from your server. Also, try staying pink!&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
