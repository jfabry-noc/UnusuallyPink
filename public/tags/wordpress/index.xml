<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wordpress on Unusually Pink</title>
    <link>https://hugo.unusually.pink/tags/wordpress/</link>
    <description>Recent content in wordpress on Unusually Pink</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2021</copyright>
    <lastBuildDate>Thu, 28 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hugo.unusually.pink/tags/wordpress/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cloudflare Analytics</title>
      <link>https://hugo.unusually.pink/cloudflare-analytics/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/cloudflare-analytics/</guid>
      <description>Anyone who knows me, reads the type of things I tweet about, and/or listens to the Same Shade of Difference podcast knows that I&amp;rsquo;m an advocate of online privacy. I&amp;rsquo;m all for blocking trackers, avoiding services from invasive companies like Facebook, and generally trying to keep as much of what I do online known only to me. That being said, while I typically configure my browser to block things like Google Analytics because Google is already a super creepy company that gathers an order of magnitude more data than it should about people, I also see the value in having analytics for a website.</description>
      <content>&lt;p&gt;Anyone who knows me, reads the type of things I &lt;a href=&#34;https://twitter.com/UnusuallyPink&#34;&gt;tweet about&lt;/a&gt;, and/or listens to the &lt;a href=&#34;https://sameshadeofdifference.com/&#34;&gt;Same Shade of Difference podcast&lt;/a&gt; knows that I&amp;rsquo;m an advocate of online privacy. I&amp;rsquo;m all for blocking trackers, avoiding services from invasive companies like Facebook, and generally trying to keep as much of what I do online known only to me. That being said, while I typically configure my browser to block things like Google Analytics because Google is already a super creepy company that gathers an order of magnitude more data than it should about people, I also see the value in having analytics for a website. It&amp;rsquo;s often helpful to see things like which content in particular is the most popular; if I know the types of content people like to see, then I can try to tailor what I write about to meet that need. Similarly it&amp;rsquo;s honestly just cool to be able to see when my site gets traffic from people all across the globe. Seeing that someone on the other side of the planet found my content useful or interesting is just neat. As a result, I&amp;rsquo;ve been on the lookout for an analytics options that isn&amp;rsquo;t stalker-esque like what Google offers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/marge_neat.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;One of the initial options I considered was &lt;a href=&#34;https://plausible.io/&#34;&gt;Plausible Analytics&lt;/a&gt;. They have a presence on the &lt;a href=&#34;https://en.wikipedia.org/wiki/Fediverse&#34;&gt;Fediverse&lt;/a&gt;, which is how I first became aware of the company. Their offering is appealing because it provides metrics to website owners without collecting personal data on the visitors, which is exactly what I&amp;rsquo;ve been wanting. Unfortunately for me, there&amp;rsquo;s no free option for Plausible, and while paying $4 a month for a year if you get 10,000 hits or less per month &amp;ndash; a threshold I&amp;rsquo;m &lt;em&gt;well&lt;/em&gt; under &amp;ndash; makes sense for a business or someone with a serious website, I didn&amp;rsquo;t feel like spending $48 USD per year just to get some neat metrics was worth it for me. I&amp;rsquo;m currently averaging around 1000 visits per month, so it&amp;rsquo;s not exactly as though I&amp;rsquo;m driving a business based around these analytics.&lt;/p&gt;
&lt;p&gt;With all of this in mind, the announcement of &lt;a href=&#34;https://blog.cloudflare.com/privacy-first-web-analytics/&#34;&gt;Cloudflare&amp;rsquo;s privacy-focused analytics&lt;/a&gt; immediately piqued my interest. Understandably, many people in technology circles have reservations about Cloudflare. Cloudflare serves as the gatekeeper to so much of the Internet&amp;rsquo;s traffic that when they have an outage, sometimes it feels as though the entire Internet is down; that&amp;rsquo;s not exactly an ideal situation for a healthy and robust Internet ecosystem. When Cloudflare&amp;rsquo;s analytics platform originally launched, I was dismissive of it because it was only an option for those hosting their content behind Cloudflare. If I needed DDoS protection or a CDN then I might consider something like putting my site behind Cloudflare, but without that I&amp;rsquo;m more than a little loathe to start transferring my DNS records.&lt;/p&gt;
&lt;p&gt;Right around the end of 2020, though, I saw that Cloudflare&amp;rsquo;s analytics were now open to be used by &lt;em&gt;anyone&lt;/em&gt; regardless of hosting. Curious, I logged into my existing Cloudflare account that I created back in the day when using Cloudflare was the only option for configuring &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; with an SSL certificate. Sure enough, &amp;ldquo;Web Analytics&amp;rdquo; was an option within my Cloudflare Dashboard. All I had to do was provide the address for my site, and Cloudflare gave me a snippet of JavaScript to add for the analytics.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/cloudflare_add-1024x631.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Given that my site is &lt;a href=&#34;https://unusually.pink/unusually-pink-migration/&#34;&gt;now hosted on WordPress&lt;/a&gt;, I couldn&amp;rsquo;t directly add content to the header or footer section of my HTML. After a quick DuckDuckGo search, though, I found some recommendations for the &lt;strong&gt;Insert Headers and Footers&lt;/strong&gt; plugin. The plugin adds a tab to the &lt;strong&gt;Settings&lt;/strong&gt; section of the WordPress Dashboard with fields for, you guessed it, the header and the footer. Any content that I place in there is automatically added to the header and/or footer of each page that WordPress renders. I simply pasted the snippet of JavaScript from Cloudflare into the footer section, and everything was up and running for me.&lt;/p&gt;
&lt;p&gt;Similar to Plausible, CloudFlare&amp;rsquo;s analytics platform gives me some basic details without anything particularly creepy about the people visiting my site. I see things like the country they&amp;rsquo;re from (nothing more specific than that), the browser, the operating system, the referrer (e.g. if someone is clicking a link to my site from Twitter or DuckDuckGo), and which page was viewed. The last part is the one that allows me to stay on top of what content people are finding the most useful. For example, since implementing Cloudflare analytics, I&amp;rsquo;ve been able to see that &lt;a href=&#34;https://unusually.pink/macos-big-sur-pip-installation-error/&#34;&gt;my post&lt;/a&gt; on how to resolve issues installing Python packages through &lt;code&gt;pip3&lt;/code&gt; on macOS Big Sur has consistently been the most viewed. Behind that is &lt;a href=&#34;https://unusually.pink/creating-a-jwt-in-the-groovy-programming-language/&#34;&gt;my post on how to create a JWT in Groovy&lt;/a&gt;; that&amp;rsquo;s super useful since I had no idea if anyone else would even care about Groovy-related content.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/cloudflare_analytics-1024x581.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The only thing that was immediately disappointing to me was that I could only add a single site; after adding Unusually Pink, there wasn&amp;rsquo;t an option to add another site along with that. A little over a week ago, though, when I went to my Cloudflare dashboard to see how my traffic looked from the previous night, I noticed a new UI that included an option for additional sites. I quickly added several other sites to start keeping tabs on them as well. This is surprisingly helpful for me because it enables me to see that several sites I maintain get literally &lt;em&gt;no&lt;/em&gt; traffic. Those are sites that I&amp;rsquo;ll probably be taking offline and letting the domains expire since there&amp;rsquo;s clearly not much of a point in keeping them around if having them online for their own sake isn&amp;rsquo;t important to me (spoiler alert: it&amp;rsquo;s not.)&lt;/p&gt;
&lt;p&gt;The only other thing worth mentioning is that, as is the case with any analytics platform, Cloudflare won&amp;rsquo;t provide a completely accurate picture of who visits your site simply based on how each user configures their browser. For example, I noticed that the &lt;a href=&#34;https://unusually.pink/safari-14/&#34;&gt;tracking blocker built into current versions of Safari&lt;/a&gt; plays nicely with Cloudflare. However, I confirmed that &lt;a href=&#34;https://brave.com/&#34;&gt;Brave&lt;/a&gt;, the Chromium-based browser I use when I&amp;rsquo;m absolutely forced to use a Chromium-based browser, and &lt;a href=&#34;https://ublockorigin.com/&#34;&gt;uBlock Origin&lt;/a&gt; will still block the JavaScript element. As is always the case, your mileage may vary. Even without a 100% complete picture, though, I still like the insight that I glean from Cloudflare anaytics, and I don&amp;rsquo;t feel like I&amp;rsquo;m being abusive with the personal information for anyone visiting the site. With that being said, anyone who simply hates Cloudflare or disagrees with my assessment on just how private their analytics are can easily block them just as they can with every other analytics platform, which hopefully provides a happy medium.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Twenty Twenty-One WordPress Theme</title>
      <link>https://hugo.unusually.pink/twenty-twenty-one-wordpress-theme/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/twenty-twenty-one-wordpress-theme/</guid>
      <description>While I made the change a few weeks ago, it seems fitting that my first post of 2021 should be about my swap to the Twenty Twenty-One WordPress theme. For anyone who isn&amp;rsquo;t aware, each year WordPress releases a new &amp;ldquo;official&amp;rdquo; theme for the platform. While theme-elitists out there may scoff at them in favor of paid, premium themes, I&amp;rsquo;ve always found the yearly offerings to be elegant and well-designed. I had originally planned on putting this post together on January 1st, but what can I say&amp;hellip; movies on HBO Now aren&amp;rsquo;t going to binge-watch themselves.</description>
      <content>&lt;p&gt;While I made the change a few weeks ago, it seems fitting that my first post of 2021 should be about my swap to the Twenty Twenty-One WordPress theme. For anyone who isn&amp;rsquo;t aware, each year WordPress releases a new &amp;ldquo;official&amp;rdquo; theme for the platform. While theme-elitists out there may scoff at them in favor of paid, premium themes, I&amp;rsquo;ve always found the yearly offerings to be elegant and well-designed. I had &lt;em&gt;originally&lt;/em&gt; planned on putting this post together on January 1st, but what can I say&amp;hellip; movies on HBO Now aren&amp;rsquo;t going to binge-watch themselves.&lt;/p&gt;
&lt;p&gt;While I&amp;rsquo;ve typically enjoyed the yearly WordPress theme releases, the previous iteration of this blog was actually back on the Twenty Sixteen theme since the yearly releases after that one didn&amp;rsquo;t feel like they were a particularly good fit for a blog. I still liked the look of the Twenty Sixteen theme, especially after I switched the colors around to match the &lt;a href=&#34;https://unusually.pink/all-dracula-everything/&#34;&gt;Dracula Theme&lt;/a&gt;, but the fact remains that 2016 is more or less ancient history in the world of web design. As a result, parts of the site just felt a bit&amp;hellip; antiquated. For example, while the banner at the top allowed me to show off the Unusually Pink graphics that we originally commissioned for the podcast, it left the site feeling just a bit old.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/cropped-cropped-Unusually-Pink-Facebook-Cover-Photo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The artwork is still amazing, though.&lt;/p&gt;
&lt;p&gt;While I spent a decent bit of time tweaking the Twenty Sixteen theme to suit my needs, once I saw the &lt;a href=&#34;https://make.wordpress.org/core/2020/09/23/introducing-twenty-twenty-one/&#34;&gt;Twenty Twenty-One theme announcement in September I decided to stop further tweaking and try being patient&lt;/a&gt;. I also followed a bit &lt;a href=&#34;https://github.com/wordpress/twentytwentyone&#34;&gt;of the progress on the GitHub repository&lt;/a&gt;, but not being a web developer meant that it didn&amp;rsquo;t really give me a good vibe for how the theme would feel in practice.&lt;/p&gt;
&lt;p&gt;Once the theme released, though, I immediately found myself drawn to how minimalist and streamlined it is. I feel like it provides me with the bare necessities, and then I can expand upon it from there to fit my needs without a lot of unnecessary overhead. One look at the current layout at the time of this writing probably clues you in to the fact that these aren&amp;rsquo;t the default colors; I once again opted to update the design to feel like the Dracula theme. While Twenty Twenty-One offers less in the customization UI for modifying the colors, it can still easily be done via CSS (a level of access that I sorely missed when &lt;a href=&#34;https://unusually.pink/unusually-pink-migration/&#34;&gt;the site was hosted on Squarespace&lt;/a&gt;.) I&amp;rsquo;m not sure if there&amp;rsquo;s a better way to do it than just opening the published site in my browser&amp;rsquo;s developer tools and using the inspection feature to get the classes of the objects I want to change, but that ended up getting me to the end result I wanted.&lt;/p&gt;
&lt;p&gt;Along with the colors, I also felt the need to adjust some of the font sizes. In the default setup, Twenty Twenty-One opts for &lt;strong&gt;big&lt;/strong&gt; fonts, and while they looked kind of nice on my brand new MacBook Pro with a Retina display, on my 1080p, 11&amp;quot; &lt;a href=&#34;https://unusually.pink/star-lite-mk-iii/&#34;&gt;Star Lite Mk III&lt;/a&gt; going to a post would result in just the header and the post title being visible. None of the actual content could be read without scrolling. I wasn&amp;rsquo;t thrilled about my site looking so gigantic on lower resolution displays, so many of the font sizes were tweaked. That being said, as someone with extremely poor vision I&amp;rsquo;m a fan of large-ish fonts, and I didn&amp;rsquo;t want to completely flip to tiny text. Readability is, arguably, one of the most import things on a text-heavy site.&lt;/p&gt;
&lt;p&gt;If anyone is curious, my full CSS customizations are below. Hopefully it&amp;rsquo;s not too offensive since frontend is most definitely not my specialty.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;While there may still be some minor adjustments for sizes and spacing, for the most part I like where things are at. I&amp;rsquo;ve historically disliked blog landing pages which only showed the beginning of each post, but I&amp;rsquo;ve done a bit of a 180 in that regard. With Twenty Twenty-One I&amp;rsquo;ve been appreciating how the front page is much less cumbersome, especially when trying to reach the links or search box at the very bottom of the page. I think it also provides a bit of a cleaner focus on the &lt;a href=&#34;https://unusually.pink/about/&#34;&gt;link for the About page&lt;/a&gt; that I link to on most of my online profiles.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Salvaging Images From Squarespace</title>
      <link>https://hugo.unusually.pink/salvaging-images-from-squarespace/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/salvaging-images-from-squarespace/</guid>
      <description>I wrote previously about moving this blog from Squarespace to WordPress. One of my cited concerns with Squarespace was being locked into that particular platform without a lot of options for moving somewhere else. So how did I move my content to WordPress? I was able to export the written content for the posts themselves from within Squarespace, fortunately. Inside of Settings &amp;gt; Advanced is an Import / Export option. The only export offering is WordPress, so I guess it was lucky that&amp;rsquo;s where I was moving.</description>
      <content>&lt;p&gt;I wrote previously about &lt;a href=&#34;https://unusually.pink/unusually-pink-migration/&#34;&gt;moving this blog from Squarespace to WordPress&lt;/a&gt;. One of my cited concerns with Squarespace was being locked into that particular platform without a lot of options for moving somewhere else. So how did I move my content to WordPress? I was able to export the &lt;em&gt;written&lt;/em&gt; content for the posts themselves from within Squarespace, fortunately. Inside of Settings &amp;gt; Advanced is an &lt;strong&gt;Import / Export&lt;/strong&gt; option. The &lt;em&gt;only&lt;/em&gt; export offering is WordPress, so I guess it was lucky that&amp;rsquo;s where I was moving. This gives an XML file with the written content and metadata for each post. Unfortunately, there is no option to export the &lt;em&gt;images&lt;/em&gt; that I&amp;rsquo;ve uploaded over the past year of creating content over at Squarespace; within the XML file the images show up as &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags with a link to the Squarespace CDN for the actual image. For example, this is what I see where the image is for the last post I authored over on Squarespace:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;padding-bottom:45.903255462646484%;&amp;quot; class=&amp;quot; image-block-wrapper has-aspect-ratio &amp;quot; data-animation-role=&amp;quot;image&amp;quot; &amp;gt; &amp;lt;noscript&amp;gt;&amp;lt;img src=&amp;quot;https://images.squarespace-cdn.com/content/v1/5cabd40b755be258403ccb99/1595366630913-VD12AA9IHURXLT6CWQ66/ke17ZwdGBToddI8pDm48kKEtlFlv-8yggmb8KJA0a9wUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcpEap199WJ5tA07nqy9HB7RsfdGE2RUqSBzw535kCng92V_tkyiZ3FgjXcK6wugnz/html.png&amp;quot; alt=&amp;quot;html.png&amp;quot; /&amp;gt;&amp;lt;/noscript&amp;gt;&amp;lt;img class=&amp;quot;thumb-image&amp;quot; data-src=&amp;quot;https://images.squarespace-cdn.com/content/v1/5cabd40b755be258403ccb99/1595366630913-VD12AA9IHURXLT6CWQ66/ke17ZwdGBToddI8pDm48kKEtlFlv-8yggmb8KJA0a9wUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcpEap199WJ5tA07nqy9HB7RsfdGE2RUqSBzw535kCng92V_tkyiZ3FgjXcK6wugnz/html.png&amp;quot; data-image=&amp;quot;https://images.squarespace-cdn.com/content/v1/5cabd40b755be258403ccb99/1595366630913-VD12AA9IHURXLT6CWQ66/ke17ZwdGBToddI8pDm48kKEtlFlv-8yggmb8KJA0a9wUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcpEap199WJ5tA07nqy9HB7RsfdGE2RUqSBzw535kCng92V_tkyiZ3FgjXcK6wugnz/html.png&amp;quot; data-image-dimensions=&amp;quot;1013x465&amp;quot; data-image-focal-point=&amp;quot;0.5,0.5&amp;quot; alt=&amp;quot;html.png&amp;quot; data-load=&amp;quot;false&amp;quot; data-image-id=&amp;quot;5f175ce6cb20a366ea6f4d62&amp;quot; data-type=&amp;quot;image&amp;quot; /&amp;gt; &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you think that looks disgusting, that&amp;rsquo;s because it is. When I imported the XML file into WordPress, I saw an option to download any attachments on each post. I checked that box, but since the images are linked to the Squarespace CDN they&amp;rsquo;re considered to be HTML content rather than attachments. As a result, WordPress simply embeds the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; in each post as a custom HTML block that doesn&amp;rsquo;t actually render the image.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/cash_money.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Set on &lt;strong&gt;not&lt;/strong&gt; going through 50 posts to manually save the images out of them, I started looking at the XML to see if I could do anything useful with the image URLs. One thing that immediately concerned me was that, when I wasn&amp;rsquo;t sure what I was going to do with the &lt;code&gt;unusually.pink&lt;/code&gt; domain but knew that I didn&amp;rsquo;t want to keep it at Squarespace, I marked the Squarespace site as Private, meaning the only way to view the content was to log in. I &lt;em&gt;assumed&lt;/em&gt; this meant the image content on the Squarespace CDN would be inaccessible until I made the site public again. After copying an image URL from my XML file, though, I saw that it was still publicly available. Flagging a Squarespace site as private means you can&amp;rsquo;t load the site directly, but content on Squarespace&amp;rsquo;s CDN is still accessible. That in itself seems like a problem to me and a very good reason to leave the platform, but in this one case it was working to my benefit. I realized that I could parse all of the images files out of the XML file with a script and download them programmatically.&lt;/p&gt;
&lt;p&gt;As you can see from the XML snippet above, images on the Squarespace CDN have URLs like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://images.squarespace-cdn.com/content/v1/5cabd40b755be258403ccb99/1595366630913-VD12AA9IHURXLT6CWQ66/ke17ZwdGBToddI8pDm48kKEtlFlv-8yggmb8KJA0a9wUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N\_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcpEap199WJ5tA07nqy9HB7RsfdGE2RUqSBzw535kCng92V\_tkyiZ3FgjXcK6wugnz/html.png
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There&amp;rsquo;s a whole lot of CDN nonsense, followed by a forward slash and the original file name at the very end. While this would be handy for getting the original file name, I didn&amp;rsquo;t want to end up with dozens of images in a folder where I had no idea what post they belonged to, and I definitely didn&amp;rsquo;t want to manually correlate the file name with the CDN link in each of the HTML blocks in WordPress.&lt;/p&gt;
&lt;p&gt;The XML, though, also includes the title of each post, and I realized that if I was scanning each line of the XML for image tags, I could also check for the title tag and keep a variable constantly updated with that. With this idea, I would just &lt;em&gt;start&lt;/em&gt; each file name with the post title so that they would be grouped together. Once the dots were connected, it was simple to come up with the following short PowerShell script:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It downloads all of the images referenced in the XML file in the format of:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;postTitle_fileName.extension
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I added some extra checks to remove unsavory characters from the file names; while it&amp;rsquo;s a valid character in most modern filesystems, for example, have you ever tried to actually programmatically do things from a Bash shell with a file that has a &lt;code&gt;[&lt;/code&gt; in the name? It&amp;rsquo;s not pretty.&lt;/p&gt;
&lt;p&gt;While this saved me from having to manually download each image from Squarespace, I still had to manually go through each post in WordPress, remove the custom HTML block where each image should have been, and then upload the appropriate image. With the way I downloaded the images, though, I just started at the top of the directory and worked my way through the images alphabetically since each post was grouped together. It sucked, but it could have been a &lt;em&gt;lot&lt;/em&gt; worse. If nothing else it made me glad that I moved forward with migrating the site now rather than waiting a few more months for the Squarespace subscription to lapse; I didn&amp;rsquo;t want to deal with this for any more posts than was strictly necessary.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Unusually Pink Migration</title>
      <link>https://hugo.unusually.pink/unusually-pink-migration/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/unusually-pink-migration/</guid>
      <description>So Long, Squarespace! If anyone stumbles across this site who was previously an Unusually Pink reader, then you might notice that the site looks a bit different after a few months of hiatus. In the short, just under 2 year lifespan of the site it has now moved to its 3rd host. Originally it was hosted on a Vultr VPS that I had been hosting a few other things on, back when I originally bought the domain because I loved the name but had no idea what to do with it.</description>
      <content>&lt;h2 id=&#34;so-long-squarespace&#34;&gt;So Long, Squarespace!&lt;/h2&gt;
&lt;p&gt;If anyone stumbles across this site who was previously an Unusually Pink reader, then you might notice that the site looks a bit different after a few months of hiatus. In the short, just under 2 year lifespan of the site it has now moved to its 3rd host. Originally it was hosted on a &lt;a href=&#34;https://www.vultr.com/&#34;&gt;Vultr VPS&lt;/a&gt; that I had been hosting a few other things on, back when I &lt;a href=&#34;https://unusually.pink/its-all-about-being-unusually-pink/&#34;&gt;originally bought the domain because I loved the name but had no idea what to do with it&lt;/a&gt;. Then Brandi, my former co-host, and I decided to &lt;a href=&#34;https://www.dropbox.com/sh/v9yvrhsoahu2vlw/AAB_JaXv3isvQjVyIMdlPHm6a?dl=0&#34;&gt;start a podcast&lt;/a&gt;; it quickly became apparent that my web development skills weren&amp;rsquo;t exactly up to par with what we wanted to accomplish. As a result, we moved the site over to &lt;a href=&#34;https://www.squarespace.com/&#34;&gt;Squarespace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our podcast lived just long enough for the Squarespace hosting to renew before Brandi and I both decided that things had run their course. It was unfortunate that I had just forked over another year&amp;rsquo;s worth of money to Squarespace for hosting before reaching that decision. With that being said, you might be wondering why on Earth I&amp;rsquo;d be re-hosting the site somewhere else if I still have time left on the Squarespace subscription; more on that will come a little later on. With this being my first time using Squarespace, though, I thought I would first share some thoughts after running a site there for a year.&lt;/p&gt;
&lt;h2 id=&#34;the-good&#34;&gt;The Good&lt;/h2&gt;
&lt;p&gt;When I initially decided to move the site from my VPS to Squarespace, it was mainly because I knew I needed hosting &lt;em&gt;somewhere&lt;/em&gt;, and it seemed like a good chance to mess around with something new. I had run numerous blogs on a free &lt;a href=&#34;https://wordpress.com&#34;&gt;WordPress.com&lt;/a&gt; account along with compiling many of my own blogs with &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; as I tend to &lt;a href=&#34;https://unusually.pink/full-content-rss-feeds-with-hugo/&#34;&gt;discuss frequently&lt;/a&gt;. With us wanting to have a presence online that made us look like we knew what we were doing, though, I figured this was a worthwhile opportunity to justify spending the money on hosting with Squarespace.&lt;/p&gt;
&lt;p&gt;Squarespace offers, hands down, the &lt;em&gt;nicest&lt;/em&gt; management interface I&amp;rsquo;ve ever seen. Everything is very slick and inviting, without being overly cluttered and complicated. It&amp;rsquo;s simple to add new pages to your site or even branches to your site. For example, I originally migrated the blog I had been running under the Unusually Pink domain to Squarespace, but I quickly realized that the best way to handle the show notes for each podcast episode would &lt;em&gt;also&lt;/em&gt; be basically a blog. It was trivial to literally add another blog to the site; I just had to tell Squarespace what directory I wanted to host that under and which of the two would be the &amp;ldquo;main&amp;rdquo; page of the site. The two were then independent of one another.&lt;/p&gt;
&lt;p&gt;Squarespace doesn&amp;rsquo;t offer nearly as many themes as you&amp;rsquo;ll find with something like WordPress, but all of the Squarespace themes are &lt;em&gt;highly&lt;/em&gt; customizable without having to wander into the realm of HTML and CSS. For example, for any theme I can change literally every color by simply using the menus presented to me. On the flip side, the WordPress theme you see right now only offered a handful of elements for color modification. Even worse, this theme offered &lt;em&gt;more&lt;/em&gt; options than many of the others I looked at, where changing anything beyond the text color would&amp;rsquo;ve involved modifying the CSS.&lt;/p&gt;
&lt;p&gt;Finally, Squarespace gives you an absurd amount of information about the traffic to your site, all without the need for any type of plugins. You can simply link up Google credentials to integrate with Google Analytics, for example, and see what people are searching for to reach your site, what position you&amp;rsquo;re in for the search results, the click percentage, how many impressions you get, etc. It also offers a very slick, interactive map if you want to drill down to the specifics of where your hits stem from.&lt;/p&gt;
&lt;h2 id=&#34;the-bad&#34;&gt;The Bad&lt;/h2&gt;
&lt;p&gt;The main purpose for the previous site on Squarespace was blogging. Case in point, there were &lt;em&gt;two&lt;/em&gt; blogs hosted on it; one for my own random posts and one for the show notes that went along with each podcast episode. Easily the single biggest nail in the Squarespace coffin is that the service is in no way &lt;em&gt;designed&lt;/em&gt; for blogging. That might seem contradictory considering I just said that I hosted not one but &lt;strong&gt;two&lt;/strong&gt; blogs on a single site there, but allow me to elaborate.&lt;/p&gt;
&lt;p&gt;Adding a blog to Squarespace just means that when you go to edit the site, you have two different streams of posts you can choose from. You pick the blog, say you want to make a new post, and start to edit the content. This is where things immediately get murky. The editor for authoring content in Squarespace is pretty bad. It tries to break the content of each post down into blocks the way the current WordPress editor does, but it does so in an extremely clunky, unintuitive way. Simple things like handling the appearance of media you upload is often not possible, meaning that I had to resize every photo prior to uploading since I knew there would be no good options for scaling this after the fact. Likewise, trying to embed any sort of content was frequently gated behind a paywall; I couldn&amp;rsquo;t embed the player for each episode into the post with the show notes because they wanted me to pay more for that privilege. I couldn&amp;rsquo;t embed tweets but had to just link to them. That may not have been a big deal were it not for the fact that the Squarespace plan I was on was already more than &lt;strong&gt;double&lt;/strong&gt; what I&amp;rsquo;m paying for hosting now.&lt;/p&gt;
&lt;p&gt;As another blow to blogging, Squarespace doesn&amp;rsquo;t provide any real outlet for managing the posts on the site. While in the management interface, for example, going to one of the two blogs I had added would simply show me a lists of posts on the left in chronological order. If the post I needed to modify was at the very bottom of the list because it was old, then I had to just keep scrolling until I got to it, letting the clusters of posts incrementally load the further I scrolled. There weren&amp;rsquo;t any options to just search for the post I wanted. This may have been a limitation of the theme I selected, but I was equally disappointed that I couldn&amp;rsquo;t search the blog itself for specific content, either. I frequently author blog posts that I know will help &lt;strong&gt;me&lt;/strong&gt; in the future; they live on a blog as opposed to just in my personal notes because they might also be beneficial to someone else. If I can&amp;rsquo;t easily get back to that content, though, without mindlessly clicking a &amp;ldquo;Next&amp;rdquo; button, that&amp;rsquo;s a problem. This WordPress blog offers both a search box and sane pagination; neither was an option for my Squarespace deployment. I&amp;rsquo;d frequently have to search the web for what I wanted to find with the URL of my own site to reach it. That&amp;rsquo;s a problem.&lt;/p&gt;
&lt;p&gt;The last thing I&amp;rsquo;ll mention is portability. Admittedly, WordPress might be just as bad at this, but it&amp;rsquo;s extremely difficult to take content from Squarespace and move it somewhere else. &lt;strong&gt;This&lt;/strong&gt; was the big reason why I didn&amp;rsquo;t want to continue creating content on Squarespace even though I&amp;rsquo;ve already paid for the hosting there; I knew that I didn&amp;rsquo;t want to stick with Squarespace once the current hosting expired, but anything new I posted there would just be more work to move to somewhere else later on. Squarespace offers you the ability to export your content, but it&amp;rsquo;s to an XML file. While this will get the written content for each post and the metadata about it, it will not include any media. I managed to throw together a bit of a workaround that&amp;rsquo;ll most likely be the topic of my next post, but it was still a large amount of work to move everything from one host to another.&lt;/p&gt;
&lt;p&gt;An obvious question at this point would be:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But aren&amp;rsquo;t you just in the same option regarding portability after moving to WordPress?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The answer is&amp;hellip; maybe. As long as I don&amp;rsquo;t become disenfranchised with the platform as a whole, there are &lt;em&gt;many&lt;/em&gt; different WordPress hosting platforms out there. If I want to move from one to another, I can easily export my site or take a backup of it and move the content somewhere else. I had initially tried moving a lot of the content from Squarespace to a Hugo site I already ran, but I very quickly ran into many of the same issues I described with Squarespace regarding management and discoverability; while being lightweight is nice, sometimes having a CMS is beneficial.&lt;/p&gt;
&lt;h2 id=&#34;wrap-up&#34;&gt;Wrap-Up&lt;/h2&gt;
&lt;p&gt;Despite the vibe you may get, I don&amp;rsquo;t dislike Squarespace at all. I feel like their business is really tailored to users who want a professional, mostly static website but who don&amp;rsquo;t have the skills to create that themselves. For a hobbyist like myself with a focus on blogging, the premium you pay for Squarespace gets you essentially nothing. Any WordPress instance is going to be a better blogging platform, and one that is significantly cheaper at that. Similarly, if you need to have firm divisions in your site (e.g. a blog for the sake of shitposting and a blog for podcast show notes), you can&amp;rsquo;t easily do that within WordPress. While you can create multiple pages, such as the &lt;a href=&#34;https://unusually.pink/about/&#34;&gt;About page&lt;/a&gt; here, you can&amp;rsquo;t set up an entirely separate blog.&lt;/p&gt;
&lt;p&gt;At least for the moment, what I did with Squarespace for both a blog and podcast repository wouldn&amp;rsquo;t be possible with WordPress. For a standalone blog, though, the experience is &lt;em&gt;significantly&lt;/em&gt; better on WordPress. It&amp;rsquo;s important to understand what the goal of your site is and what you need out of your platform. When that goal changes, moving platforms might be the best move. Hopefully my next post on how I migrated my images between Squarespace and WordPress can help with that.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Idiot&#39;s Guide To Figuring Out How A Website Was Hacked</title>
      <link>https://hugo.unusually.pink/idiots-guide-to-figuring-out-how-a-website-was-hacked/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hugo.unusually.pink/idiots-guide-to-figuring-out-how-a-website-was-hacked/</guid>
      <description>Full Disclosure: This won&amp;rsquo;t tell you exactly what was wrong with a website. This will just give you a pretty good, quick idea. I&amp;rsquo;m not in DFIR or even InfoSec. I&amp;rsquo;m just a sysadmin who has some familiarity with a decent number of systems. It&amp;rsquo;s also worth mentioning that I did all of these actions from my Linux machine. The same would be possible from macOS or from Windows 10 with the Windows Subsystem for Linux.</description>
      <content>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Full Disclosure:&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;This won&amp;rsquo;t tell you exactly what was wrong with a website. This will just give you a pretty good, quick idea. I&amp;rsquo;m not in DFIR or even InfoSec. I&amp;rsquo;m just a sysadmin who has some familiarity with a decent number of systems. It&amp;rsquo;s also worth mentioning that I did all of these actions from my Linux machine. The same would be possible from macOS or from Windows 10 with the Windows Subsystem for Linux.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Last night, my good buddy &lt;a href=&#34;https://www.instagram.com/craftbrewgeek/&#34;&gt;Craft Brew Geek&lt;/a&gt; shot me a message because a website we both had something of an interest in (I won&amp;rsquo;t go into more specifics than that to protect the guilty&amp;hellip; I&amp;rsquo;ll just say that it doesn&amp;rsquo;t belong to either of us) had suddenly exhibited weird behavior. Navigating to the website, either via directly typing their URL into my browser or by searching for them on Google and clicking the link, took me &lt;em&gt;not&lt;/em&gt; to the expected website but to a &lt;strong&gt;super&lt;/strong&gt; shady online pharmacy; there&amp;rsquo;s not enough booze in the world to get me drunk enough to type my credit card information into this site. Since we&amp;rsquo;re all stuck at home under quarantine, though, I figured I&amp;rsquo;d kill a little time digging into what, exactly, was going on.&lt;/p&gt;
&lt;p&gt;The initial problem is that I navigate to &lt;code&gt;desiredsite.com&lt;/code&gt; and it takes me to &lt;code&gt;shadysite.com&lt;/code&gt; instead. A common way this type of thing happens without any degree of technical compromise is if someone allows their domain to expire rather than having it automatically renew. When that happens, it&amp;rsquo;s possible for an attacker to swoop in, buy the domain, and then change the DNS information to point to their desired site. It&amp;rsquo;s pretty uncommon since most DNS registrars will park domains for a month, giving the original owner time to renew. Failing that, they often go to auction rather than back into the pool. Additionally, under this scenario there would be no reason to redirect to &lt;code&gt;shadysite.com&lt;/code&gt;. Still, it doesn&amp;rsquo;t hurt to check the DNS history through something like &lt;a href=&#34;https://securitytrails.com/&#34;&gt;SecurityTrails&lt;/a&gt;. This showed the last DNS change was 3 months ago for the site in question; there&amp;rsquo;s no way the site had been redirected for 3 months so I could rule that out.&lt;/p&gt;
&lt;p&gt;My next thought was to see if the sites were on the same server. If they were, that would tell me the entire server was wrecked, receiving my request, and was configured to load a different site instead. This was easy enough through &lt;code&gt;dig&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;dig +short desiredsite.com. a
dig +short shadysite.com. a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gave me two different IP addresses. This tells me the sites aren&amp;rsquo;t hosted on the same server, which means that &lt;code&gt;desiredsite.com&lt;/code&gt; is &lt;em&gt;redirecting&lt;/em&gt; me to &lt;code&gt;shadysite.com&lt;/code&gt;. For that to be the case, I &lt;em&gt;have&lt;/em&gt; to be hitting &lt;code&gt;desiredsite.com&lt;/code&gt; first, but then I&amp;rsquo;m redirected before I see anything. I needed to see what was up with the site before being redirected. Scripts on the web are most commonly executed not on the server side, but locally in the browser. As a result, I used &lt;code&gt;wget&lt;/code&gt; to just try to snag the file living at &lt;code&gt;desiredsite.com&lt;/code&gt;, which for most websites will be &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;wget http://desiredsite.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This simply downloads the file to my local machine. Nothing is actually executing any scripts it might reference. Sure enough, this gives me an HTML file for &lt;code&gt;desiredsite.com&lt;/code&gt; I can open in a text editor. I figured JavaScript was likely being used to handle the redirect. To test this, I turned off JavaScript in Google Chrome and once again navigated to &lt;code&gt;http://desiredsite.com&lt;/code&gt;. This caused the expected website to load, albeit kind of broken since JavaScript wasn&amp;rsquo;t running.&lt;/p&gt;
&lt;p&gt;Diving back into the &lt;code&gt;index.html&lt;/code&gt; file, a quick search showed me that there were nearly 60 &lt;code&gt;.js&lt;/code&gt; files for JavaScript. Ick. JavaScript can be written to be fairly easy to consume if you&amp;rsquo;ve got a passing familiarity with computer programming, but &lt;em&gt;most&lt;/em&gt; JavaScript on the web is designed to be 1.) minified and 2.) obfuscated to make this nearly impossible. Seriously, this is what a typical JavaScript file looks like. Note how my editor is showcasing the fact that it&amp;rsquo;s all &lt;strong&gt;one line&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hugo.unusually.pink/images/IdiotsGuideToFiguringOutHowAWebsiteWasHacked_gross.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Clearly trying to read through 60 files of that isn&amp;rsquo;t going to happen; this isn&amp;rsquo;t my job, I&amp;rsquo;m doing it for fun. However, I still had some options for trying to quickly look for something flagrant. I saved down local copies of all 60 JavaScript files in the same directory, and then navigated to that directory from my terminal. I then used &lt;code&gt;grep -R&lt;/code&gt; to recursively search through every JavaScript file at the same time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;cd /path/to/javascript
grep -R &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;search term here&amp;#34;&lt;/span&gt; .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What did I search for? I started off by searching for &lt;code&gt;shadysite.com&lt;/code&gt;. No dice. Then I searched for the IP address I got for the site from my previous &lt;code&gt;dig&lt;/code&gt; command. Also no dice. I didn&amp;rsquo;t think it would be anything that overt, but it was worth a shot. I decided to look at the source code for &lt;code&gt;shadysite.com&lt;/code&gt; to see if there were any clues. I immediately noticed that the entire site was coded around the IP address for the site rather than the domain. For example, links in the source code of most sites are going to look like:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mydomain.com/folder/page.html&#34;&gt;http://mydomain.com/folder/page.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The links on this particular page were done like this:&lt;/p&gt;
&lt;p&gt;http://192.168.254.254/folder/page.html&lt;/p&gt;
&lt;p&gt;Obviously that &lt;em&gt;wasn&amp;rsquo;t&lt;/em&gt; the IP address in use, but you get the point. This tells me that, unsurprisingly, they run into a lot of problems with their domain getting shut down. So they design the site to be domain agnostic, buy a new domain when the old one is shuttered, and then point it to the same IP address they&amp;rsquo;ve been using. Some quick searches online showed me a few tools I could use to plug in an IP address and get a historical list of domains tied to that IP. I used &lt;a href=&#34;https://viewdns.info/reverseip/&#34;&gt;ViewDNS.info&lt;/a&gt;. This showed me 6 total domains that had been pointing to the same IIP address, one of which was what I saw now. I repeated my &lt;code&gt;grep&lt;/code&gt; search above with the others to see if there were any hits, but sadly there was still no luck.&lt;/p&gt;
&lt;p&gt;At this point, though, I still had a pretty good idea of what was happening. Out of the 60 JavaScript files referenced by the source code for &lt;code&gt;desiredsite.com&lt;/code&gt;, most of them were in a sub-directory for WordPress, including some directories that noted they were for WordPress plugins. Having looked at enough compromised websites over the past 15 years, it&amp;rsquo;s a definite trend that WordPress (and especially WordPress plugins) tend to be Swiss cheese. WordPress plugins are a frequent target for attackers, and most people &lt;em&gt;never&lt;/em&gt; think to update them. At this point, if I were determined to get to the bottom of things, it would be much quicker to just point some kind of vulnerability scanner like &lt;a href=&#34;https://www.tenable.com/products/nessus/nessus-professional&#34;&gt;Nessus&lt;/a&gt; at the site and just let it find the vulnerable plugin(s) rather than tracking them down through obfuscated JavaScript.&lt;/p&gt;
&lt;p&gt;All told, though, it was a fun exercise to dig into how the site was compromised and come away after only about 30 minutes of work with a pretty good guess.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
